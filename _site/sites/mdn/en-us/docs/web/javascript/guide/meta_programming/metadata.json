{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Meta programming","mdn_url":"/en-US/docs/Web/JavaScript/Guide/Meta_programming","locale":"en-US","native":"English (US)","summary":"The Proxy and Reflect objects allow you to intercept and define custom behavior for fundamental language operations (e.g. property lookup, assignment, enumeration, function invocation, etc.). With the help of these two objects you are able to program at the meta level of JavaScript.","popularity":0.0143,"modified":"2023-09-25T07:33:31.000Z","source":{"folder":"en-us/web/javascript/guide/meta_programming","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/guide/meta_programming/index.md","last_commit_url":"https://github.com/mdn/content/commit/fb85334ffa4a2c88d209b1074909bee0e0abd57a","filename":"index.md"},"short_title":"Meta programming","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Guide","title":"Guide"},{"uri":"/en-US/docs/Web/JavaScript/Guide/Meta_programming","title":"Meta programming"}],"pageTitle":"Meta programming - JavaScript | MDN","noIndexing":false,"hash":"10913c078f1bf9d5048958e192ad50673aacf06b8e675ee75e75daed34dfd77a"}