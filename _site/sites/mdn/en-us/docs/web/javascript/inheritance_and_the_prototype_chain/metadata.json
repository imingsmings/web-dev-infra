{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Inheritance and the prototype chain","mdn_url":"/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain","locale":"en-US","native":"English (US)","summary":"In programming, inheritance refers to passing down characteristics from a parent to a child so that a new piece of code can reuse and build upon the features of an existing one. JavaScript implements inheritance by using objects. Each object has an internal link to another object called its prototype. That prototype object has a prototype of its own, and so on until an object is reached with null as its prototype. By definition, null has no prototype and acts as the final link in this prototype chain. It is possible to mutate any member of the prototype chain or even swap out the prototype at runtime, so concepts like static dispatching do not exist in JavaScript.","popularity":0.0811,"modified":"2023-11-23T10:16:01.000Z","source":{"folder":"en-us/web/javascript/inheritance_and_the_prototype_chain","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/inheritance_and_the_prototype_chain/index.md","last_commit_url":"https://github.com/mdn/content/commit/39b6b6c400f4ea334fb347240aeb4cfea8cf38ce","filename":"index.md"},"short_title":"Inheritance and the prototype chain","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain","title":"Inheritance and the prototype chain"}],"pageTitle":"Inheritance and the prototype chain - JavaScript | MDN","noIndexing":false,"hash":"3108aa924a26273f9eef2eaf0754ccc3415902989a9c8b40d83fba796ac9839b"}