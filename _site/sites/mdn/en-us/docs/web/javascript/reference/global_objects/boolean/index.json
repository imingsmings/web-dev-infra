{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Boolean","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.Boolean"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" aria-current=\"page\"><code>Boolean</code></a></em></strong></li><li><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/Boolean\"><code>Boolean() constructor</code></a></li></ol></details></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/toString\"><code>Boolean.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/valueOf\"><code>Boolean.prototype.valueOf()</code></a></li></ol></details></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><details><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function\"><code>Function() constructor</code></a></li></ol></details></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function: displayName</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function: length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function: name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function: prototype</code></a></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/@@hasInstance\"><code>Function.prototype[@@hasInstance]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></details></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Boolean</code></strong> object represents a truth value: <code>true</code> or <code>false</code>.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":""}},{"type":"prose","value":{"id":"boolean_primitives_and_boolean_objects","title":"Boolean primitives and Boolean objects","isH3":true,"content":"<p>Do not confuse the <a href=\"/en-US/docs/Glossary/Primitive\">primitive</a> <code>Boolean</code> values <code>true</code> and <code>false</code> with the <code>true</code> and <code>false</code> values of the <code>Boolean</code> object.</p>\n<p><strong>Any</strong> object, including a <code>Boolean</code> object whose value is <code>false</code>, evaluates to <code>true</code> when passed to a conditional statement. For example, the condition in the following <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if</code></a> statement evaluates to <code>true</code>:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// this code is executed</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This behavior does not apply to <code>Boolean</code> primitives. For example, the condition in the following <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if</code></a> statement evaluates to <code>false</code>:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// this code is not executed</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Do not use the <code>Boolean()</code> constructor with <code>new</code> to convert a non-boolean value to a boolean value â€” use <code>Boolean</code> as a function or a <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_NOT#double_not_!!\">double NOT</a> instead:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> good <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// use this</span>\n<span class=\"token keyword\">const</span> good2 <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>expression<span class=\"token punctuation\">;</span> <span class=\"token comment\">// or this</span>\n<span class=\"token keyword\">const</span> bad <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// don't use this!</span>\n</code></pre></div>\n<p>If you specify any object, including a <code>Boolean</code> object whose value is <code>false</code>, as the initial value of a <code>Boolean</code> object, the new <code>Boolean</code> object has a value of <code>true</code>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myFalse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// initial value of false</span>\n<span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>myFalse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// initial value of true</span>\n<span class=\"token keyword\">const</span> myString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// string object</span>\n<span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>myString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// initial value of true</span>\n</code></pre></div>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Warning:</strong> You should rarely find yourself using <code>Boolean</code> as a constructor.</p>\n</div>"}},{"type":"prose","value":{"id":"boolean_coercion","title":"Boolean coercion","isH3":true,"content":"<p>Many built-in operations that expect booleans first coerce their arguments to booleans. <a href=\"https://tc39.es/ecma262/multipage/abstract-operations.html#sec-toboolean\" class=\"external\" target=\"_blank\">The operation</a> can be summarized as follows:</p>\n<ul>\n  <li>Booleans are returned as-is.</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> turns into <code>false</code>.</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> turns into <code>false</code>.</li>\n  <li><code>0</code>, <code>-0</code>, and <code>NaN</code> turn into <code>false</code>; other numbers turn into <code>true</code>.</li>\n  <li><code>0n</code> turns into <code>false</code>; other <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInts</a> turn into <code>true</code>.</li>\n  <li>The empty string <code>\"\"</code> turns into <code>false</code>; other strings turn into <code>true</code>.</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbols</a> turn into <code>true</code>.</li>\n  <li>All objects become <code>true</code>.</li>\n</ul>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> A legacy behavior makes <a href=\"/en-US/docs/Web/API/Document/all\"><code>document.all</code></a> return <code>false</code> when used as a boolean, despite it being an object. This property is legacy and non-standard and should not be used.</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> Unlike other type conversions like <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#string_coercion\">string coercion</a> or <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\">number coercion</a>, boolean coercion does not attempt to convert objects to primitives.</p>\n</div>\n<p>In other words, there are only a handful of values that get coerced to <code>false</code> â€” these are called <a href=\"/en-US/docs/Glossary/Falsy\">falsy</a> values. All other values are called <a href=\"/en-US/docs/Glossary/Truthy\">truthy</a> values. A value's truthiness is important when used with logical operators, conditional statements, or any boolean context.</p>\n<p>There are two ways to achieve the same effect in JavaScript.</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_NOT#double_not_!!\">Double NOT</a>: <code>!!x</code> negates <code>x</code> twice, which converts <code>x</code> to a boolean using the same algorithm as above.</li>\n  <li>The <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/Boolean\"><code>Boolean()</code></a> function: <code>Boolean(x)</code> uses the same algorithm as above to convert <code>x</code>.</li>\n</ul>\n<p>Note that truthiness is not the same as being <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Equality\">loosely equal</a> to <code>true</code> or <code>false</code>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[] is truthy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[] == false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// [] is truthy</span>\n<span class=\"token comment\">// [] == false</span>\n</code></pre></div>\n<p><code>[]</code> is truthy, but it's also loosely equal to <code>false</code>. It's truthy, because all objects are truthy. However, when comparing with <code>false</code>, which is a primitive, <code>[]</code> is also converted to a primitive, which is <code>\"\"</code> via <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a>. Comparing strings and booleans results in both being <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\">converted to numbers</a>, and they both become <code>0</code>, so <code>[] == false</code> is <code>true</code>. In general, falsiness and <code>== false</code> differ in the following cases:</p>\n<ul>\n  <li><code>NaN</code>, <code>undefined</code>, and <code>null</code> are falsy but not loosely equal to <code>false</code>.</li>\n  <li><code>\"0\"</code> (and other string literals that are not <code>\"\"</code> but <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\">get coerced to 0</a>) is truthy but loosely equal to <code>false</code>.</li>\n  <li>Objects are always truthy, but their primitive representation may be loosely equal to <code>false</code>.</li>\n</ul>\n<p>Truthy values are even more unlikely to be loosely equal to <code>true</code>. All values are either truthy or falsy, but most values are loosely equal to neither <code>true</code> nor <code>false</code>.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"boolean\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/Boolean\"><code>Boolean()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>Boolean</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p>These properties are defined on <code>Boolean.prototype</code> and shared by all <code>Boolean</code> instances.</p>\n<dl>\n  <dt id=\"boolean.prototype.constructor\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Boolean.prototype.constructor</code></a></dt>\n  <dd>\n    <p>The constructor function that created the instance object. For <code>Boolean</code> instances, the initial value is the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/Boolean\"><code>Boolean</code></a> constructor.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"boolean.prototype.tostring\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/toString\"><code>Boolean.prototype.toString()</code></a></dt>\n  <dd>\n    <p>Returns a string of either <code>true</code> or <code>false</code> depending upon the value of the object. Overrides the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a> method.</p>\n  </dd>\n  <dt id=\"boolean.prototype.valueof\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean/valueOf\"><code>Boolean.prototype.valueOf()</code></a></dt>\n  <dd>\n    <p>Returns the primitive value of the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" aria-current=\"page\"><code>Boolean</code></a> object. Overrides the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a> method.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"creating_boolean_objects_with_an_initial_value_of_false","title":"Creating Boolean objects with an initial value of false","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> bNoParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bZero <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bNull <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bEmptyString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bfalse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"creating_boolean_objects_with_an_initial_value_of_true","title":"Creating Boolean objects with an initial value of true","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> btrue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> btrueString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bfalseString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bSuLin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Su Lin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bArrayProto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bObjProto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-boolean-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Boolean"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Boolean"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Glossary/Boolean\">Boolean</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Data_structures#boolean_type\">Boolean primitives</a></li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Boolean_data_type\" class=\"external\" target=\"_blank\">Boolean data type</a> on Wikipedia</li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Constructor","id":"constructor"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Boolean object represents a truth value: true or false.","popularity":0.0553,"modified":"2023-08-21T07:19:52.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/boolean","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/boolean/index.md","last_commit_url":"https://github.com/mdn/content/commit/70f09675ddcfc75a3bb66d2dce4cf82738948a37","filename":"index.md"},"short_title":"Boolean","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean","title":"Boolean"}],"pageTitle":"Boolean - JavaScript | MDN","noIndexing":false}}