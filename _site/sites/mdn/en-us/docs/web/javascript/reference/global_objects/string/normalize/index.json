{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"String.prototype.normalize()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.String.normalize"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a></strong></li><li><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/String\"><code>String() constructor</code></a></li></ol></details></li><li><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length\"><code>String: length</code></a></li></ol></details></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/@@iterator\"><code>String.prototype[@@iterator]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/anchor\"><code>String.prototype.anchor()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/at\"><code>String.prototype.at()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/big\"><code>String.prototype.big()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/blink\"><code>String.prototype.blink()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/bold\"><code>String.prototype.bold()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\"><code>String.prototype.charAt()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\"><code>String.prototype.charCodeAt()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\"><code>String.prototype.codePointAt()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat\"><code>String.prototype.concat()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\"><code>String.prototype.endsWith()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fixed\"><code>String.prototype.fixed()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fontcolor\"><code>String.prototype.fontcolor()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fontsize\"><code>String.prototype.fontsize()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode\"><code>String.fromCharCode()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\"><code>String.fromCodePoint()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\"><code>String.prototype.includes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\"><code>String.prototype.indexOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/isWellFormed\"><code>String.prototype.isWellFormed()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/italics\"><code>String.prototype.italics()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\"><code>String.prototype.lastIndexOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/link\"><code>String.prototype.link()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\"><code>String.prototype.localeCompare()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>String.prototype.match()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll\"><code>String.prototype.matchAll()</code></a></li><li><em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\" aria-current=\"page\"><code>String.prototype.normalize()</code></a></em></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\"><code>String.prototype.padEnd()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\"><code>String.prototype.padStart()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw\"><code>String.raw()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\"><code>String.prototype.repeat()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"><code>String.prototype.replace()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\"><code>String.prototype.replaceAll()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/search\"><code>String.prototype.search()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice\"><code>String.prototype.slice()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/small\"><code>String.prototype.small()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split\"><code>String.prototype.split()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\"><code>String.prototype.startsWith()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/strike\"><code>String.prototype.strike()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/sub\"><code>String.prototype.sub()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr\"><code>String.prototype.substr()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring\"><code>String.prototype.substring()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/sup\"><code>String.prototype.sup()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase\"><code>String.prototype.toLocaleLowerCase()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase\"><code>String.prototype.toLocaleUpperCase()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\"><code>String.prototype.toLowerCase()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toString\"><code>String.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\"><code>String.prototype.toUpperCase()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toWellFormed\"><code>String.prototype.toWellFormed()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\"><code>String.prototype.trim()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trimEnd\"><code>String.prototype.trimEnd()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trimStart\"><code>String.prototype.trimStart()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/valueOf\"><code>String.prototype.valueOf()</code></a></li></ol></details></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><details><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function\"><code>Function() constructor</code></a></li></ol></details></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function: displayName</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function: length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function: name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function: prototype</code></a></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/@@hasInstance\"><code>Function.prototype[@@hasInstance]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></details></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>normalize()</code></strong> method of <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> values returns the Unicode Normalization\n  Form of this string.\n</p>"}},{"type":"prose","value":{"id":"try_it","title":"Try it","isH3":false,"content":"<iframe class=\"interactive is-taller-height\" height=\"200\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/string-normalize.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"form\"><a href=\"#form\"><code>form</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      One of <code>\"NFC\"</code>, <code>\"NFD\"</code>, <code>\"NFKC\"</code>, or\n      <code>\"NFKD\"</code>, specifying the Unicode Normalization Form. If omitted or\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>, <code>\"NFC\"</code> is used.\n    </p>\n    <p>These values have the following meanings:</p>\n    <dl>\n      <dt id=\"nfc\"><a href=\"#nfc\"><code>\"NFC\"</code></a></dt>\n      <dd>\n        <p>Canonical Decomposition, followed by Canonical Composition.</p>\n      </dd>\n      <dt id=\"nfd\"><a href=\"#nfd\"><code>\"NFD\"</code></a></dt>\n      <dd>\n        <p>Canonical Decomposition.</p>\n      </dd>\n      <dt id=\"nfkc\"><a href=\"#nfkc\"><code>\"NFKC\"</code></a></dt>\n      <dd>\n        <p>Compatibility Decomposition, followed by Canonical Composition.</p>\n      </dd>\n      <dt id=\"nfkd\"><a href=\"#nfkd\"><code>\"NFKD\"</code></a></dt>\n      <dd>\n        <p>Compatibility Decomposition.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A string containing the Unicode Normalization Form of the given string.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"rangeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError\"><code>RangeError</code></a></dt>\n  <dd>\n    <p>\n      Thrown if <code>form</code> isn't one of the values\n      specified above.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>\n  Unicode assigns a unique numerical value, called a <em>code point</em>, to each\n  character. For example, the code point for <code>\"A\"</code> is given as U+0041. However,\n  sometimes more than one code point, or sequence of code points, can represent the same\n  abstract character — the character <code>\"ñ\"</code> for example can be represented by\n  either of:\n</p>\n<ul>\n  <li>The single code point U+00F1.</li>\n  <li>\n    The code point for <code>\"n\"</code> (U+006E) followed by the code point for the\n    combining tilde (U+0303).\n  </li>\n</ul>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> string1 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u00F1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> string2 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u006E\\u0303\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ñ</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ñ</span>\n</code></pre></div>\n<p>\n  However, since the code points are different, string comparison will not treat them as\n  equal. And since the number of code points in each version is different, they even have\n  different lengths.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> string1 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u00F1\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ñ</span>\n<span class=\"token keyword\">const</span> string2 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u006E\\u0303\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ñ</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1 <span class=\"token operator\">===</span> string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n</code></pre></div>\n<p>\n  The <code>normalize()</code> method helps solve this problem by converting a string\n  into a normalized form common for all sequences of code points that represent the same\n  characters. There are two main normalization forms, one based on <strong>canonical\nequivalence</strong> and the other based on <strong>compatibility</strong>.\n</p>"}},{"type":"prose","value":{"id":"canonical_equivalence_normalization","title":"Canonical equivalence normalization","isH3":true,"content":"<p>\n  In Unicode, two sequences of code points have canonical equivalence if they represent\n  the same abstract characters, and should always have the same visual appearance and\n  behavior (for example, they should always be sorted in the same way).\n</p>\n<p>\n  You can use <code>normalize()</code> using the <code>\"NFD\"</code> or <code>\"NFC\"</code>\n  arguments to produce a form of the string that will be the same for all canonically\n  equivalent strings. In the example below we normalize two representations of the\n  character <code>\"ñ\"</code>:\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> string1 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u00F1\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ñ</span>\n<span class=\"token keyword\">let</span> string2 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u006E\\u0303\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ñ</span>\n\nstring1 <span class=\"token operator\">=</span> string1<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstring2 <span class=\"token operator\">=</span> string2<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1 <span class=\"token operator\">===</span> string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n</code></pre></div>\n<h4 id=\"composed_and_decomposed_forms\">Composed and decomposed forms</h4>\n<p>\n  Note that the length of the normalized form under <code>\"NFD\"</code> is\n  <code>2</code>. That's because <code>\"NFD\"</code> gives you the\n  <strong>decomposed</strong> version of the canonical form, in which single code points\n  are split into multiple combining ones. The decomposed canonical form for\n  <code>\"ñ\"</code> is <code>\"\\u006E\\u0303\"</code>.\n</p>\n<p>\n  You can specify <code>\"NFC\"</code> to get the <strong>composed</strong> canonical form,\n  in which multiple code points are replaced with single code points where possible. The\n  composed canonical form for <code>\"ñ\"</code> is <code>\"\\u00F1\"</code>:\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> string1 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u00F1\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ñ</span>\n<span class=\"token keyword\">let</span> string2 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u006E\\u0303\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ñ</span>\n\nstring1 <span class=\"token operator\">=</span> string1<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstring2 <span class=\"token operator\">=</span> string2<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1 <span class=\"token operator\">===</span> string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">.</span><span class=\"token function\">codePointAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// f1</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"compatibility_normalization","title":"Compatibility normalization","isH3":true,"content":"<p>\n  In Unicode, two sequences of code points are compatible if they represent the same\n  abstract characters, and should be treated alike in some — but not necessarily all —\n  applications.\n</p>\n<p>All canonically equivalent sequences are also compatible, but not vice versa.</p>\n<p>For example:</p>\n<ul>\n  <li>\n    the code point U+FB00 represents the <a href=\"/en-US/docs/Glossary/Ligature\">ligature</a> <code>\"ﬀ\"</code>. It is compatible\n    with two consecutive U+0066 code points (<code>\"ff\"</code>).\n  </li>\n  <li>\n    the code point U+24B9 represents the symbol\n    <code>\"Ⓓ\"</code>.\n    It is compatible with the U+0044 code point (<code>\"D\"</code>).\n  </li>\n</ul>\n<p>\n  In some respects (such as sorting) they should be treated as equivalent—and in some\n  (such as visual appearance) they should not, so they are not canonically equivalent.\n</p>\n<p>\n  You can use <code>normalize()</code> using the <code>\"NFKD\"</code> or\n  <code>\"NFKC\"</code> arguments to produce a form of the string that will be the same for\n  all compatible strings:\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> string1 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\uFB00\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> string2 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u0066\\u0066\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ﬀ</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ff</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1 <span class=\"token operator\">===</span> string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n\nstring1 <span class=\"token operator\">=</span> string1<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFKD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstring2 <span class=\"token operator\">=</span> string2<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFKD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ff &lt;- visual appearance changed</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ff</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1 <span class=\"token operator\">===</span> string2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>string2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n</code></pre></div>\n<p>\n  When applying compatibility normalization it's important to consider what you intend to\n  do with the strings, since the normalized form may not be appropriate for all\n  applications. In the example above the normalization is appropriate for search, because\n  it enables a user to find the string by searching for <code>\"f\"</code>. But it may not\n  be appropriate for display, because the visual representation is different.\n</p>\n<p>\n  As with canonical normalization, you can ask for decomposed or composed compatible\n  forms by passing <code>\"NFKD\"</code> or <code>\"NFKC\"</code>, respectively.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_normalize","title":"Using normalize()","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Initial string</span>\n\n<span class=\"token comment\">// U+1E9B: LATIN SMALL LETTER LONG S WITH DOT ABOVE</span>\n<span class=\"token comment\">// U+0323: COMBINING DOT BELOW</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\\u1E9B\\u0323\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Canonically-composed form (NFC)</span>\n\n<span class=\"token comment\">// U+1E9B: LATIN SMALL LETTER LONG S WITH DOT ABOVE</span>\n<span class=\"token comment\">// U+0323: COMBINING DOT BELOW</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '\\u1E9B\\u0323'</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// same as above</span>\n\n<span class=\"token comment\">// Canonically-decomposed form (NFD)</span>\n\n<span class=\"token comment\">// U+017F: LATIN SMALL LETTER LONG S</span>\n<span class=\"token comment\">// U+0323: COMBINING DOT BELOW</span>\n<span class=\"token comment\">// U+0307: COMBINING DOT ABOVE</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '\\u017F\\u0323\\u0307'</span>\n\n<span class=\"token comment\">// Compatibly-composed (NFKC)</span>\n\n<span class=\"token comment\">// U+1E69: LATIN SMALL LETTER S WITH DOT BELOW AND DOT ABOVE</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFKC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '\\u1E69'</span>\n\n<span class=\"token comment\">// Compatibly-decomposed (NFKD)</span>\n\n<span class=\"token comment\">// U+0073: LATIN SMALL LETTER S</span>\n<span class=\"token comment\">// U+0323: COMBINING DOT BELOW</span>\n<span class=\"token comment\">// U+0307: COMBINING DOT ABOVE</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NFKD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '\\u0073\\u0323\\u0307'</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/text-processing.html#sec-string.prototype.normalize","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.String.normalize"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.String.normalize"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.unicode.org/reports/tr15/\" class=\"external\" target=\"_blank\">Unicode Standard Annex #15, Unicode Normalization Forms</a></li>\n  <li><a href=\"https://en.wikipedia.org/wiki/Unicode_equivalence\" class=\"external\" target=\"_blank\">Unicode equivalence</a> on Wikipedia</li>\n</ul>"}}],"toc":[{"text":"Try it","id":"try_it"},{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The normalize() method of String values returns the Unicode Normalization\n  Form of this string.","popularity":0.0315,"modified":"2023-08-21T07:19:52.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/string/normalize","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/string/normalize/index.md","last_commit_url":"https://github.com/mdn/content/commit/70f09675ddcfc75a3bb66d2dce4cf82738948a37","filename":"index.md"},"short_title":"String.prototype.normalize()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String","title":"String"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize","title":"String.prototype.normalize()"}],"pageTitle":"String.prototype.normalize() - JavaScript | MDN","noIndexing":false}}