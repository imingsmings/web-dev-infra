{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Lexical grammar","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Lexical_grammar","locale":"en-US","native":"English (US)","browserCompat":["javascript.grammar"],"summary":"This page describes JavaScript's lexical grammar. JavaScript source text is just a sequence of characters — in order for the interpreter to understand it, the string has to be parsed to a more structured representation. The initial step of parsing is called lexical analysis, in which the text gets scanned from left to right and is converted into a sequence of individual, atomic input elements. Some input elements are insignificant to the interpreter, and will be stripped after this step — they include white space and comments. The others, including identifiers, keywords, literals, and punctuators (mostly operators), will be used for further syntax analysis. Line terminators and multiline comments are also syntactically insignificant, but they guide the process for automatic semicolons insertion to make certain invalid token sequences become valid.","popularity":0.0721,"modified":"2023-11-08T04:45:53.000Z","source":{"folder":"en-us/web/javascript/reference/lexical_grammar","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/lexical_grammar/index.md","last_commit_url":"https://github.com/mdn/content/commit/41cddfdaeed4a73fb8234c332150df8e54df31e9","filename":"index.md"},"short_title":"Lexical grammar","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Lexical_grammar","title":"Lexical grammar"}],"pageTitle":"Lexical grammar - JavaScript | MDN","noIndexing":false,"hash":"bbddf24a41edf28006a065222b19bde618833e5482fd804e576a8cbe52c3b7c4"}