{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Proxy.revocable()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/revocable","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.Proxy.revocable"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code>Proxy/handler</code></a></strong></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/apply\"><code>handler.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/construct\"><code>handler.construct()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/defineProperty\"><code>handler.defineProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty\"><code>handler.deleteProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get\"><code>handler.get()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor\"><code>handler.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getPrototypeOf\"><code>handler.getPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/has\"><code>handler.has()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/isExtensible\"><code>handler.isExtensible()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/ownKeys\"><code>handler.ownKeys()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/preventExtensions\"><code>handler.preventExtensions()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\"><code>handler.set()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/setPrototypeOf\"><code>handler.setPrototypeOf()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Proxy.revocable()</code></strong> static method creates a revocable <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a> object.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>Proxy<span class=\"token punctuation\">.</span><span class=\"token function\">revocable</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"target\"><a href=\"#target\"><code>target</code></a></dt>\n  <dd>\n    <p>A target object to wrap with <code>Proxy</code>. It can be any sort of object, including a native array, a function, or even another proxy.</p>\n  </dd>\n  <dt id=\"handler\"><a href=\"#handler\"><code>handler</code></a></dt>\n  <dd>\n    <p>An object whose properties are functions defining the behavior of <code>proxy</code> when an operation is performed on it.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A plain object with the following two properties:</p>\n<dl>\n  <dt id=\"proxy\"><a href=\"#proxy\"><code>proxy</code></a></dt>\n  <dd>\n    <p>A Proxy object exactly the same as one created with a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code>new Proxy(target, handler)</code></a> call.</p>\n  </dd>\n  <dt id=\"revoke\"><a href=\"#revoke\"><code>revoke</code></a></dt>\n  <dd>\n    <p>A function with no parameters to revoke (switch off) the <code>proxy</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>The <code>Proxy.revocable()</code> factory function is the same as the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code>Proxy()</code></a> constructor, except that in addition to creating a proxy object, it also creates a <code>revoke</code> function that can be called to disable the proxy. The proxy object and the <code>revoke</code> function are wrapped in a plain object.</p>\n<p>The <code>revoke</code> function does not take any parameters, nor does it rely on the <code>this</code> value. The created <code>proxy</code> object is attached to the <code>revoke</code> function as a <a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/Private_properties\">private property</a> that the <code>revoke</code> function accesses on itself when called (the existence of the private property is not observable from the outside, but it has implications on how garbage collection happens). The <code>proxy</code> object is <em>not</em> captured within the <a href=\"/en-US/docs/Web/JavaScript/Closures\">closure</a> of the <code>revoke</code> function (which will make garbage collection of <code>proxy</code> impossible if <code>revoke</code> is still alive).</p>\n<p>After the <code>revoke()</code> function gets called, the proxy becomes unusable: any trap to a handler throws a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>. Once a proxy is revoked, it remains revoked, and calling <code>revoke()</code> again has no effect — in fact, the call to <code>revoke()</code> detaches the <code>proxy</code> object from the <code>revoke</code> function, so the <code>revoke</code> function will not be able to access the proxy again at all. If the proxy is not referenced elsewhere, it will then be eligible for garbage collection. The <code>revoke</code> function also detaches <code>target</code> and <code>handler</code> from the <code>proxy</code>, so if <code>target</code> is not referenced elsewhere, it will also be eligible for garbage collection, even when its proxy is still alive, since there's no longer a way to meaningfully interact with the target object.</p>\n<p>Letting users interact with an object through a revocable proxy allows you to <a href=\"/en-US/docs/Web/JavaScript/Memory_management\">control the lifetime</a> of the object exposed to the user — you can make the object garbage-collectable even when the user is still holding a reference to its proxy.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_proxy.revocable","title":"Using Proxy.revocable()","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> revocable <span class=\"token operator\">=</span> Proxy<span class=\"token punctuation\">.</span><span class=\"token function\">revocable</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> revocable<span class=\"token punctuation\">.</span>proxy<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[[foo]]\"</span>\n\nrevocable<span class=\"token punctuation\">.</span><span class=\"token function\">revoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError is thrown</span>\nproxy<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError again</span>\n<span class=\"token keyword\">delete</span> proxy<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">;</span> <span class=\"token comment\">// still TypeError</span>\n<span class=\"token keyword\">typeof</span> proxy<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"object\", typeof doesn't trigger any trap</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/reflection.html#sec-proxy.revocable","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Proxy.revocable"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Proxy.revocable"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Proxy.revocable() static method creates a revocable Proxy object.","popularity":0.0019,"modified":"2023-11-08T04:45:53.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/proxy/revocable","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/proxy/revocable/index.md","last_commit_url":"https://github.com/mdn/content/commit/41cddfdaeed4a73fb8234c332150df8e54df31e9","filename":"index.md"},"short_title":"Proxy.revocable()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy","title":"Proxy"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/revocable","title":"Proxy.revocable()"}],"pageTitle":"Proxy.revocable() - JavaScript | MDN","noIndexing":false}}