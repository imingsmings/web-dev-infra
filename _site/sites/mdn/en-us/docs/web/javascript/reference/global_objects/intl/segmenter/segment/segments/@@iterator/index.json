{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Segments.prototype[@@iterator]()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment/Segments/@@iterator","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.Intl.Segments.@@iterator"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter\"><code>Intl.Segmenter</code></a></strong></li><li><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/Segmenter\"><code>Intl.Segmenter() constructor</code></a></li></ol></details></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/resolvedOptions\"><code>Intl.Segmenter.prototype.resolvedOptions()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment\"><code>Intl.Segmenter.prototype.segment()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/supportedLocalesOf\"><code>Intl.Segmenter.supportedLocalesOf()</code></a></li></ol></details></li><li><strong>Related pages:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl\"><code>Intl</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator\"><code>Intl.Collator</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\"><code>Intl.DateTimeFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\"><code>Intl.ListFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\"><code>Intl.NumberFormat</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/PluralRules\"><code>Intl.PluralRules</code></a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\"><code>Intl.RelativeTimeFormat</code></a></strong></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>[@@iterator]()</code></strong> method of <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment/Segments\"><code>Segments</code></a> instances implements the <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">iterable protocol</a> and allows <code>Segments</code> objects to be consumed by most syntaxes expecting iterables, such as the <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">spread syntax</a> and <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a> loops. It returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator\">segments iterator object</a> that yields data about each segment.</p>"}},{"type":"prose","value":{"id":"try_it","title":"Try it","isH3":false,"content":"<iframe class=\"interactive is-js-height\" height=\"200\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/segments-prototype-@@iterator.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>segments<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator\">iterable iterator object</a> that yields data about each segment. Each yielded object has the same properties as the object returned by the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment/Segments/containing\"><code>containing()</code></a> method.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"iteration_using_for...of_loop","title":"Iteration using for...of loop","isH3":true,"content":"<p>Note that you seldom need to call this method directly. The existence of the <code>@@iterator</code> method makes <code>Segments</code> objects <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">iterable</a>, and iterating syntaxes like the <code>for...of</code> loop automatically call this method to obtain the iterator to loop over.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> segmenter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>Segmenter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zh-CN\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">granularity</span><span class=\"token operator\">:</span> <span class=\"token string\">\"word\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token string\">\"你好，世界！我爱编程。\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> value <span class=\"token keyword\">of</span> segmenter<span class=\"token punctuation\">.</span><span class=\"token function\">segment</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\n{segment: '你好', index: 0, input: '你好，世界！我爱编程。', isWordLike: true}\n{segment: '，', index: 2, input: '你好，世界！我爱编程。', isWordLike: false}\n{segment: '世界', index: 3, input: '你好，世界！我爱编程。', isWordLike: true}\n{segment: '！', index: 5, input: '你好，世界！我爱编程。', isWordLike: false}\n{segment: '我', index: 6, input: '你好，世界！我爱编程。', isWordLike: true}\n{segment: '爱', index: 7, input: '你好，世界！我爱编程。', isWordLike: true}\n{segment: '编', index: 8, input: '你好，世界！我爱编程。', isWordLike: true}\n{segment: '程', index: 9, input: '你好，世界！我爱编程。', isWordLike: true}\n{segment: '。', index: 10, input: '你好，世界！我爱编程。', isWordLike: false}\n*/</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"manually_hand-rolling_the_iterator","title":"Manually hand-rolling the iterator","isH3":true,"content":"<p>You may still manually call the <code>next()</code> method of the returned iterator object to achieve maximum control over the iteration process.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> segmenter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>Segmenter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fr\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">granularity</span><span class=\"token operator\">:</span> <span class=\"token string\">\"word\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token string\">\"Moi ? N'est-ce pas ?\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> segments <span class=\"token operator\">=</span> segmenter<span class=\"token punctuation\">.</span><span class=\"token function\">segment</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> iterator <span class=\"token operator\">=</span> segments<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>result<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  result <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\n{segment: 'Moi', index: 0, input: \"Moi ? N'est-ce pas ?\", isWordLike: true}\n{segment: ' ', index: 3, input: \"Moi ? N'est-ce pas ?\", isWordLike: false}\n{segment: '?', index: 4, input: \"Moi ? N'est-ce pas ?\", isWordLike: false}\n{segment: ' ', index: 5, input: \"Moi ? N'est-ce pas ?\", isWordLike: false}\n{segment: \"N'est\", index: 6, input: \"Moi ? N'est-ce pas ?\", isWordLike: true}\n{segment: '-', index: 11, input: \"Moi ? N'est-ce pas ?\", isWordLike: false}\n{segment: 'ce', index: 12, input: \"Moi ? N'est-ce pas ?\", isWordLike: true}\n{segment: ' ', index: 14, input: \"Moi ? N'est-ce pas ?\", isWordLike: false}\n{segment: 'pas', index: 15, input: \"Moi ? N'est-ce pas ?\", isWordLike: true}\n{segment: ' ', index: 18, input: \"Moi ? N'est-ce pas ?\", isWordLike: false}\n{segment: '?', index: 19, input: \"Moi ? N'est-ce pas ?\", isWordLike: false}\n*/</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma402/#sec-%segmentsprototype%-@@iterator","title":"ECMAScript Internationalization API Specification"}],"query":"javascript.builtins.Intl.Segments.@@iterator"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Intl.Segments.@@iterator"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter\"><code>Intl.Segmenter</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment\"><code>Intl.Segmenter.prototype.segment()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator\"><code>Symbol.iterator</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">Iteration protocols</a></li>\n</ul>"}}],"toc":[{"text":"Try it","id":"try_it"},{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The [@@iterator]() method of Segments instances implements the iterable protocol and allows Segments objects to be consumed by most syntaxes expecting iterables, such as the spread syntax and for...of loops. It returns a segments iterator object that yields data about each segment.","popularity":0,"modified":"2023-08-24T22:55:36.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/intl/segmenter/segment/segments/@@iterator","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/intl/segmenter/segment/segments/@@iterator/index.md","last_commit_url":"https://github.com/mdn/content/commit/27180875516cc311342e74b596bfb589b7211e0c","filename":"index.md"},"short_title":"Segments.prototype[@@iterator]()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl","title":"Intl"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter","title":"Intl.Segmenter"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment","title":"Intl.Segmenter.prototype.segment()"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment/Segments","title":"Segments"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment/Segments/@@iterator","title":"Segments.prototype[@@iterator]()"}],"pageTitle":"Segments.prototype[@@iterator]() - JavaScript | MDN","noIndexing":false}}