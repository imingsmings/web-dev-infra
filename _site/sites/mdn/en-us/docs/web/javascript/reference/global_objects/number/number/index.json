{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Number() constructor","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/Number","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.Number.Number"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a></strong></li><li><details open=\"\"><summary>Constructor</summary><ol><li><em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/Number\" aria-current=\"page\"><code>Number() constructor</code></a></em></li></ol></details></li><li><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></li></ol></details></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>Number.prototype.toExponential()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>Number.prototype.toFixed()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\"><code>Number.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>Number.prototype.toPrecision()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/valueOf\"><code>Number.prototype.valueOf()</code></a></li></ol></details></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><details><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function\"><code>Function() constructor</code></a></li></ol></details></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function: displayName</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function: length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function: name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function: prototype</code></a></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/@@hasInstance\"><code>Function.prototype[@@hasInstance]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></details></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Number()</code></strong> constructor creates <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> objects. When called as a function, it returns primitive values of type Number.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>Number()</code> can be called with or without <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>, but with different effects. See <a href=\"#return_value\">Return value</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"value\"><a href=\"#value\"><code>value</code></a></dt>\n  <dd>\n    <p>The numeric value of the object being created.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>When <code>Number</code> is called as a constructor (with <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>), it creates a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> object, which is <strong>not</strong> a primitive.</p>\n<p>When <code>Number</code> is called as a function, it <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\">coerces the parameter to a number primitive</a>. <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInts</a> are converted to numbers. If the value can't be converted, it returns <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>.</p>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>Warning:</strong> You should rarely find yourself using <code>Number</code> as a constructor.</p>\n</div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"creating_number_objects","title":"Creating Number objects","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a === 123 is false</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// b === 123 is true</span>\na <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// is true</span>\nb <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// is false</span>\n<span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"object\"</span>\n<span class=\"token keyword\">typeof</span> b<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"number\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"using_number_to_convert_a_bigint_to_a_number","title":"Using Number() to convert a BigInt to a number","isH3":true,"content":"<p><code>Number()</code> is the only case where a BigInt can be converted to a number without throwing, because it's very explicit.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token operator\">+</span><span class=\"token number\">1n</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError: Cannot convert a BigInt value to a number</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">+</span> <span class=\"token number\">1n</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError: Cannot mix BigInt and other types, use explicit conversions</span>\n</code></pre></div>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js example-good notranslate\"><code><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">1n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n</code></pre></div>\n<p>Note that this may result in loss of precision, if the BigInt is too large to be <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\">safely represented</a>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">2n</span> <span class=\"token operator\">**</span> <span class=\"token number\">54n</span> <span class=\"token operator\">+</span> <span class=\"token number\">1n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">2n</span> <span class=\"token operator\">**</span> <span class=\"token number\">54n</span> <span class=\"token operator\">+</span> <span class=\"token number\">1n</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-number-constructor","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Number.Number"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Number.Number"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-number\" class=\"external\" target=\"_blank\">Polyfill of modern <code>Number</code> behavior (with support binary and octal literals) in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Number() constructor creates Number objects. When called as a function, it returns primitive values of type Number.","popularity":0.0142,"modified":"2023-08-21T07:19:52.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/number/number","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/number/number/index.md","last_commit_url":"https://github.com/mdn/content/commit/70f09675ddcfc75a3bb66d2dce4cf82738948a37","filename":"index.md"},"short_title":"Number() constructor","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number","title":"Number"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/Number","title":"Number() constructor"}],"pageTitle":"Number() constructor - JavaScript | MDN","noIndexing":false}}