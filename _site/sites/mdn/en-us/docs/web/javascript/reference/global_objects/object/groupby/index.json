{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Object.groupBy()","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.Object.groupBy"],"baseline":{"baseline":false,"support":{"chrome":"117","chrome_android":"117","edge":"117","firefox":"119","firefox_android":"119"}},"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/Object\"><code>Object() constructor</code></a></li></ol></details></li><li><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li><li><em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy\" aria-current=\"page\"><code>Object.groupBy()</code></a></em></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\"><code>Object.hasOwn()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> In some versions of some browsers, this method was implemented as the method <code>Array.prototype.group()</code>. Due to web compatibility issues, it is now implemented as a static method. Check the <a href=\"#browser_compatibility\">browser compatibility table</a> for details.</p>\n</div>\n<p>The <strong><code>Object.groupBy()</code></strong> static method groups the elements of a given iterable according to the string values returned by a provided callback function. The returned object has separate properties for each group, containing arrays with the elements in the group.</p>\n<p>This method should be used when group names can be represented by strings. If you need to group elements using a key that is some arbitrary value, use <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/groupBy\"><code>Map.groupBy()</code></a> instead.</p><!-- <h2>Try it</h2>\n<iframe class=\"interactive is-js-height\" height=\"200\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/object-groupby.html\" title=\"MDN Web Docs Interactive Example\"></iframe> -->"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>Object<span class=\"token punctuation\">.</span><span class=\"token function\">groupBy</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">,</span> callbackFn<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"items\"><a href=\"#items\"><code>items</code></a></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">iterable</a> (such as an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>) whose elements will be grouped.</p>\n  </dd>\n  <dt id=\"callbackfn\"><a href=\"#callbackfn\"><code>callbackFn</code></a></dt>\n  <dd>\n    <p>A function to execute for each element in the iterable. It should return a value that can get coerced into a property key (string or <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">symbol</a>) indicating the group of the current element. The function is called with the following arguments:</p>\n    <dl>\n      <dt id=\"element\"><a href=\"#element\"><code>element</code></a></dt>\n      <dd>\n        <p>The current element being processed.</p>\n      </dd>\n      <dt id=\"index\"><a href=\"#index\"><code>index</code></a></dt>\n      <dd>\n        <p>The index of the current element being processed.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object#null-prototype_objects\"><code>null</code>-prototype object</a> with properties for all groups, each assigned to an array containing the elements of the associated group.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p><code>Object.groupBy()</code> calls a provided <code>callbackFn</code> function once for each element in an iterable. The callback function should return a string or symbol (values that are neither type are <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#string_coercion\">coerced to strings</a>) indicating the group of the associated element. The values returned by <code>callbackFn</code> are used as keys for the object returned by <code>Map.groupBy()</code>. Each key has an associated array containing all the elements for which the callback returned the same value.</p>\n<p>The elements in the returned object and the original iterable are the same (not <a href=\"/en-US/docs/Glossary/Deep_copy\">deep copies</a>). Changing the internal structure of the elements will be reflected in both the original iterable and the returned object.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_object.groupby","title":"Using Object.groupBy()","isH3":true,"content":"<p>First we define an array containing objects representing an inventory of different foodstuffs. Each food has a <code>type</code> and a <code>quantity</code>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> inventory <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"asparagus\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vegetables\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bananas\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"goat\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"meat\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> <span class=\"token number\">23</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cherries\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fish\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"meat\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">quantity</span><span class=\"token operator\">:</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The code below groups the elements by the value of their <code>type</code> property.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">groupBy</span><span class=\"token punctuation\">(</span>inventory<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* Result is:\n{\n  vegetables: [\n    { name: 'asparagus', type: 'vegetables', quantity: 5 },\n  ],\n  fruit: [\n    { name: \"bananas\", type: \"fruit\", quantity: 0 },\n    { name: \"cherries\", type: \"fruit\", quantity: 5 }\n  ],\n  meat: [\n    { name: \"goat\", type: \"meat\", quantity: 23 },\n    { name: \"fish\", type: \"meat\", quantity: 22 }\n  ]\n}\n*/</span>\n</code></pre></div>\n<p>\n  The arrow function just returns the <code>type</code> of each array element each time it is called. Note that the function argument <code>{ type }</code> is a basic example of <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#unpacking_properties_from_objects_passed_as_a_function_parameter\">object destructuring syntax for function arguments</a>. This unpacks the <code>type</code> property of an object passed as a parameter, and assigns it to a variable named <code>type</code> in the body of the function.\n  This is a very succinct way to access the relevant values of elements within a function.\n</p>\n<p>We can also create groups inferred from values in one or more properties of the elements. Below is a very similar example that puts the items into <code>ok</code> or <code>restock</code> groups based on the value of the <code>quantity</code> field.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> quantity <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> quantity <span class=\"token operator\">&gt;</span> <span class=\"token number\">5</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"ok\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"restock\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> result2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">groupBy</span><span class=\"token punctuation\">(</span>inventory<span class=\"token punctuation\">,</span> myCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* Result is:\n{\n  restock: [\n    { name: \"asparagus\", type: \"vegetables\", quantity: 5 },\n    { name: \"bananas\", type: \"fruit\", quantity: 0 },\n    { name: \"cherries\", type: \"fruit\", quantity: 5 }\n  ],\n  ok: [\n    { name: \"goat\", type: \"meat\", quantity: 23 },\n    { name: \"fish\", type: \"meat\", quantity: 22 }\n  ]\n}\n*/</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/proposal-array-grouping/#sec-object.groupby","title":"Array Grouping"}],"query":"javascript.builtins.Object.groupBy"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Object.groupBy"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#array-grouping\" class=\"external\" target=\"_blank\">Polyfill of <code>Object.groupBy</code> in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Indexed_collections\">Indexed collections</a> guide</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/groupBy\"><code>Map.groupBy()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Object.groupBy() static method groups the elements of a given iterable according to the string values returned by a provided callback function. The returned object has separate properties for each group, containing arrays with the elements in the group.","popularity":0.1018,"modified":"2023-09-30T21:37:57.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/object/groupby","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/object/groupby/index.md","last_commit_url":"https://github.com/mdn/content/commit/f15b8d5828c480af144a9b8f88b2724e2997f571","filename":"index.md"},"short_title":"Object.groupBy()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object","title":"Object"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/groupBy","title":"Object.groupBy()"}],"pageTitle":"Object.groupBy() - JavaScript | MDN","noIndexing":false}}