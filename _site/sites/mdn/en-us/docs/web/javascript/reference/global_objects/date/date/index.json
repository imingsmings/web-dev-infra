{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Date() constructor","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.Date.Date"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a></strong></li><li><details open=\"\"><summary>Constructor</summary><ol><li><em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date\" aria-current=\"page\"><code>Date() constructor</code></a></em></li></ol></details></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/@@toPrimitive\"><code>Date.prototype[@@toPrimitive]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate\"><code>Date.prototype.getDate()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\"><code>Date.prototype.getDay()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear\"><code>Date.prototype.getFullYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getHours\"><code>Date.prototype.getHours()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMilliseconds\"><code>Date.prototype.getMilliseconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMinutes\"><code>Date.prototype.getMinutes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\"><code>Date.prototype.getMonth()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getSeconds\"><code>Date.prototype.getSeconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\"><code>Date.prototype.getTime()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\"><code>Date.prototype.getTimezoneOffset()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDate\"><code>Date.prototype.getUTCDate()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDay\"><code>Date.prototype.getUTCDay()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCFullYear\"><code>Date.prototype.getUTCFullYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCHours\"><code>Date.prototype.getUTCHours()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMilliseconds\"><code>Date.prototype.getUTCMilliseconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMinutes\"><code>Date.prototype.getUTCMinutes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMonth\"><code>Date.prototype.getUTCMonth()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCSeconds\"><code>Date.prototype.getUTCSeconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getYear\"><code>Date.prototype.getYear()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now\"><code>Date.now()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\"><code>Date.parse()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate\"><code>Date.prototype.setDate()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear\"><code>Date.prototype.setFullYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setHours\"><code>Date.prototype.setHours()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMilliseconds\"><code>Date.prototype.setMilliseconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMinutes\"><code>Date.prototype.setMinutes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth\"><code>Date.prototype.setMonth()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setSeconds\"><code>Date.prototype.setSeconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime\"><code>Date.prototype.setTime()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCDate\"><code>Date.prototype.setUTCDate()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCFullYear\"><code>Date.prototype.setUTCFullYear()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCHours\"><code>Date.prototype.setUTCHours()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMilliseconds\"><code>Date.prototype.setUTCMilliseconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMinutes\"><code>Date.prototype.setUTCMinutes()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMonth\"><code>Date.prototype.setUTCMonth()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCSeconds\"><code>Date.prototype.setUTCSeconds()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setYear\"><code>Date.prototype.setYear()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toDateString\"><code>Date.prototype.toDateString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\"><code>Date.prototype.toISOString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString\"><code>Date.prototype.toLocaleDateString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\"><code>Date.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\"><code>Date.prototype.toLocaleTimeString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toString\"><code>Date.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toTimeString\"><code>Date.prototype.toTimeString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\"><code>Date.prototype.toUTCString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\"><code>Date.UTC()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/valueOf\"><code>Date.prototype.valueOf()</code></a></li></ol></details></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Date()</code></strong> constructor creates <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> objects. When called as a function, it returns a string representing the current time.</p>"}},{"type":"prose","value":{"id":"try_it","title":"Try it","isH3":false,"content":"<iframe class=\"interactive is-js-height\" height=\"200\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/date-constructor.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>dateString<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>dateObject<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span> monthIndex<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span> monthIndex<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span> monthIndex<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">,</span> hours<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span> monthIndex<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">,</span> hours<span class=\"token punctuation\">,</span> minutes<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span> monthIndex<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">,</span> hours<span class=\"token punctuation\">,</span> minutes<span class=\"token punctuation\">,</span> seconds<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">,</span> monthIndex<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">,</span> hours<span class=\"token punctuation\">,</span> minutes<span class=\"token punctuation\">,</span> seconds<span class=\"token punctuation\">,</span> milliseconds<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>Date()</code> can be called with or without <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>, but with different effects. See <a href=\"#return_value\">Return value</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>There are five basic forms for the <code>Date()</code> constructor:</p>\n<h4 id=\"no_parameters\">No parameters</h4>\n<p>When no parameters are provided, the newly-created <code>Date</code> object represents the current date and time as of the time of instantiation. The returned date's <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#the_epoch_timestamps_and_invalid_date\">timestamp</a> is the same as the number returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now\"><code>Date.now()</code></a>.</p>\n<h4 id=\"time_value_or_timestamp_number\">Time value or timestamp number</h4>\n<dl>\n  <dt id=\"value\"><a href=\"#value\"><code>value</code></a></dt>\n  <dd>\n    <p>An integer value representing the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#the_epoch_timestamps_and_invalid_date\">timestamp</a> (the number of milliseconds since midnight at the beginning of January 1, 1970, UTC — a.k.a. the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#the_epoch_timestamps_and_invalid_date\">epoch</a>).</p>\n  </dd>\n</dl>\n<h4 id=\"date_string\">Date string</h4>\n<dl>\n  <dt id=\"datestring\"><a href=\"#datestring\"><code>dateString</code></a></dt>\n  <dd>\n    <p>A string value representing a date, parsed and interpreted using the same algorithm implemented by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\"><code>Date.parse()</code></a>. See <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format\">date time string format</a> for caveats on using different formats.</p>\n  </dd>\n</dl>\n<h4 id=\"date_object\">Date object</h4>\n<dl>\n  <dt id=\"dateobject\"><a href=\"#dateobject\"><code>dateObject</code></a></dt>\n  <dd>\n    <p>An existing <code>Date</code> object. This effectively makes a copy of the existing <code>Date</code> object with the same date and time. This is equivalent to <code>new Date(dateObject.valueOf())</code>, except the <code>valueOf()</code> method is not called.</p>\n  </dd>\n</dl>\n<p>When one parameter is passed to the <code>Date()</code> constructor, <code>Date</code> instances are specially treated. All other values are <a href=\"/en-US/docs/Web/JavaScript/Data_structures#primitive_coercion\">converted to primitives</a>. If the result is a string, it will be parsed as a date string. Otherwise, the resulting primitive is further coerced to a number and treated as a timestamp.</p>\n<h4 id=\"individual_date_and_time_component_values\">Individual date and time component values</h4>\n<p>Given at least a year and month, this form of <code>Date()</code> returns a <code>Date</code> object whose component values (year, month, day, hour, minute, second, and millisecond) all come from the following parameters. Any missing fields are given the lowest possible value (<code>1</code> for <code>day</code> and <code>0</code> for every other component). The parameter values are all evaluated against the local time zone, rather than UTC. <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\"><code>Date.UTC()</code></a> accepts similar parameters but interprets the components as UTC and returns a timestamp.</p>\n<p>If any parameter overflows its defined bounds, it \"carries over\". For example, if a <code>monthIndex</code> greater than <code>11</code> is passed in, those months will cause the year to increment; if a <code>minutes</code> greater than <code>59</code> is passed in, <code>hours</code> will increment accordingly, etc. Therefore, <code>new Date(1990, 12, 1)</code> will return January 1st, 1991; <code>new Date(2020, 5, 19, 25, 65)</code> will return 2:05 A.M. June 20th, 2020.</p>\n<p>Similarly, if any parameter underflows, it \"borrows\" from the higher positions. For example, <code>new Date(2020, 5, 0)</code> will return May 31st, 2020.</p>\n<dl>\n  <dt id=\"year\"><a href=\"#year\"><code>year</code></a></dt>\n  <dd>\n    <p>Integer value representing the year. Values from <code>0</code> to <code>99</code> map to the years <code>1900</code> to <code>1999</code>. All other values are the actual year. See the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#interpretation_of_two-digit_years\">example</a>.</p>\n  </dd>\n  <dt id=\"monthindex\"><a href=\"#monthindex\"><code>monthIndex</code></a></dt>\n  <dd>\n    <p>Integer value representing the month, beginning with <code>0</code> for January to <code>11</code> for December.</p>\n  </dd>\n  <dt id=\"day\"><a href=\"#day\"><code>day</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Integer value representing the day of the month. Defaults to <code>1</code>.</p>\n  </dd>\n  <dt id=\"hours\"><a href=\"#hours\"><code>hours</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Integer value between <code>0</code> and <code>23</code> representing the hour of the day. Defaults to <code>0</code>.</p>\n  </dd>\n  <dt id=\"minutes\"><a href=\"#minutes\"><code>minutes</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Integer value representing the minute segment of a time. Defaults to <code>0</code>.</p>\n  </dd>\n  <dt id=\"seconds\"><a href=\"#seconds\"><code>seconds</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Integer value representing the second segment of a time. Defaults to <code>0</code>.</p>\n  </dd>\n  <dt id=\"milliseconds\"><a href=\"#milliseconds\"><code>milliseconds</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Integer value representing the millisecond segment of a time. Defaults to <code>0</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>Calling <code>new Date()</code> (the <code>Date()</code> constructor) returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> object. If called with an invalid date string, or if the date to be constructed will have a timestamp less than <code>-8,640,000,000,000,000</code> or greater than <code>8,640,000,000,000,000</code> milliseconds, it returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#the_epoch_timestamps_and_invalid_date\">invalid date</a> (a <code>Date</code> object whose <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toString\"><code>toString()</code></a> method returns <code>\"Invalid Date\"</code> and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/valueOf\"><code>valueOf()</code></a> method returns <code>NaN</code>).</p>\n<p>Calling the <code>Date()</code> function (without the <code>new</code> keyword) returns a string representation of the current date and time, exactly as <code>new Date().toString()</code> does. Any arguments given in a <code>Date()</code> function call (without the <code>new</code> keyword) are ignored; regardless of whether it's called with an invalid date string — or even called with any arbitrary object or other primitive as an argument — it always returns a string representation of the current date and time.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"several_ways_to_create_a_date_object","title":"Several ways to create a Date object","isH3":true,"content":"<p>The following examples show several ways to create JavaScript dates:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> today <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"December 17, 1995 03:24:00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// DISCOURAGED: may not work in all runtimes</span>\n<span class=\"token keyword\">const</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1995-12-17T03:24:00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// This is standardized and will work reliably</span>\n<span class=\"token keyword\">const</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">1995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// the month is 0-indexed</span>\n<span class=\"token keyword\">const</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">1995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">628021800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// passing epoch timestamp</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"passing_a_non-date_non-string_non-number_value","title":"Passing a non-Date, non-string, non-number value","isH3":true,"content":"<p>If the <code>Date()</code> constructor is called with one parameter which is not a <code>Date</code> instance, it will be coerced to a primitive and then checked whether it's a string. For example, <code>new Date(undefined)</code> is different from <code>new Date()</code>:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Invalid Date</span>\n</code></pre></div>\n<p>This is because <code>undefined</code> is already a primitive but not a string, so it will be coerced to a number, which is <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> and therefore not a valid timestamp. On the other hand, <code>null</code> will be coerced to <code>0</code>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1970-01-01T00:00:00.000Z</span>\n</code></pre></div>\n<p><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Arrays</a> would be coerced to a string via <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a>, which joins the elements with commas. However, the resulting string for any array with more than one element is not a valid ISO 8601 date string, so its parsing behavior would be implementation-defined. <strong>Do not pass arrays to the <code>Date()</code> constructor.</strong></p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"2020-06-19\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"17:13\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 2020-06-19T17:13:00.000Z in Chrome, since it recognizes \"2020-06-19,17:13\"</span>\n<span class=\"token comment\">// \"Invalid Date\" in Firefox</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-date-constructor","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Date.Date"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Date.Date"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a></li>\n</ul>"}}],"toc":[{"text":"Try it","id":"try_it"},{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Date() constructor creates Date objects. When called as a function, it returns a string representing the current time.","popularity":0.1886,"modified":"2023-06-01T08:19:25.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/date/date","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/date/date/index.md","last_commit_url":"https://github.com/mdn/content/commit/3e2369d97e2d6fbfe33a3c496a8edd90e0b539e2","filename":"index.md"},"short_title":"Date() constructor","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","title":"Date"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date","title":"Date() constructor"}],"pageTitle":"Date() constructor - JavaScript | MDN","noIndexing":false}}