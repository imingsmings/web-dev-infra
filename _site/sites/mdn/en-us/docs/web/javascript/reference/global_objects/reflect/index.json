{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Reflect","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.Reflect"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect\" aria-current=\"page\"><code>Reflect</code></a></em></strong></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply\"><code>Reflect.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\"><code>Reflect.construct()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty\"><code>Reflect.defineProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/deleteProperty\"><code>Reflect.deleteProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\"><code>Reflect.get()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor\"><code>Reflect.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/has\"><code>Reflect.has()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/isExtensible\"><code>Reflect.isExtensible()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys\"><code>Reflect.ownKeys()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/preventExtensions\"><code>Reflect.preventExtensions()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set\"><code>Reflect.set()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf()</code></a></li></ol></details></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Reflect</code></strong> namespace object contains static methods for invoking interceptable JavaScript object internal methods. The methods are the same as those of <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\">proxy handlers</a>.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>Unlike most global objects, <code>Reflect</code> is not a constructor. You cannot use it with the <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code> operator</a> or invoke the <code>Reflect</code> object as a function. All properties and methods of <code>Reflect</code> are static (just like the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> object).</p>\n<p>The <code>Reflect</code> object provides a collection of static functions which have the same names as the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\">proxy handler methods</a>.</p>\n<p>The major use case of <code>Reflect</code> is to provide default forwarding behavior in <code>Proxy</code> handler traps. A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#terminology\">trap</a> is used to intercept an operation on an object â€” it provides a custom implementation for an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#object_internal_methods\">object internal method</a>. The <code>Reflect</code> API is used to invoke the corresponding internal method. For example, the code below creates a proxy <code>p</code> with a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty\"><code>deleteProperty</code></a> trap that intercepts the <code>[[Delete]]</code> internal method. <code>Reflect.deleteProperty()</code> is used to invoke the default <code>[[Delete]]</code> behavior on <code>targetObject</code> directly. You can replace it with <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code></a>, but using <code>Reflect</code> saves you from having to remember the syntax that each internal method corresponds to.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">deleteProperty</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">targetObject<span class=\"token punctuation\">,</span> property</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Custom functionality: log the deletion</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deleting property:\"</span><span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Execute the default introspection behavior</span>\n      <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">deleteProperty</span><span class=\"token punctuation\">(</span>targetObject<span class=\"token punctuation\">,</span> property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The <code>Reflect</code> methods also allow finer control of how the internal method is invoked. For example, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\"><code>Reflect.construct()</code></a> is the only way to construct a target function with a specific <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new.target\"><code>new.target</code></a> value. If you use the <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> operator to invoke a function, the <code>new.target</code> value is always the function itself. This has important effects with <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_using_reflect.construct\">subclassing</a>. For another example, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\"><code>Reflect.get()</code></a> allows you to run a <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/get\">getter</a> with a custom <code>this</code> value, while <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors\">property accessors</a> always use the current object as the <code>this</code> value.</p>\n<p>Nearly every <code>Reflect</code> method's behavior can be done with some other syntax or method. Some of these methods have corresponding static methods of the same name on <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>, although they do have some subtle differences. For the exact differences, see the description for each <code>Reflect</code> method.</p>"}},{"type":"prose","value":{"id":"static_properties","title":"Static properties","isH3":false,"content":"<dl>\n  <dt id=\"reflecttostringtag\"><a href=\"#reflecttostringtag\"><code>Reflect[@@toStringTag]</code></a></dt>\n  <dd>\n    <p>The initial value of the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag\"><code>@@toStringTag</code></a> property is the string <code>\"Reflect\"</code>. This property is used in <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_methods","title":"Static methods","isH3":false,"content":"<dl>\n  <dt id=\"reflect.apply\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply\"><code>Reflect.apply()</code></a></dt>\n  <dd>\n    <p>Calls a <code>target</code> function with arguments as specified by the <code>argumentsList</code> parameter. See also <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a>.</p>\n  </dd>\n  <dt id=\"reflect.construct\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\"><code>Reflect.construct()</code></a></dt>\n  <dd>\n    <p>The <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code> operator</a> as a function. Equivalent to calling <code>new target(...argumentsList)</code>. Also provides the option to specify a different prototype.</p>\n  </dd>\n  <dt id=\"reflect.defineproperty\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty\"><code>Reflect.defineProperty()</code></a></dt>\n  <dd>\n    <p>Similar to <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a>. Returns a boolean that is <code>true</code> if the property was successfully defined.</p>\n  </dd>\n  <dt id=\"reflect.deleteproperty\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/deleteProperty\"><code>Reflect.deleteProperty()</code></a></dt>\n  <dd>\n    <p>The <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code> operator</a> as a function. Equivalent to calling <code>delete target[propertyKey]</code>.</p>\n  </dd>\n  <dt id=\"reflect.get\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\"><code>Reflect.get()</code></a></dt>\n  <dd>\n    <p>Returns the value of the property. Works like getting a property from an object (<code>target[propertyKey]</code>) as a function.</p>\n  </dd>\n  <dt id=\"reflect.getownpropertydescriptor\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor\"><code>Reflect.getOwnPropertyDescriptor()</code></a></dt>\n  <dd>\n    <p>Similar to <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a>. Returns a property descriptor of the given property if it exists on the object, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> otherwise.</p>\n  </dd>\n  <dt id=\"reflect.getprototypeof\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf()</code></a></dt>\n  <dd>\n    <p>Same as <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a>.</p>\n  </dd>\n  <dt id=\"reflect.has\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/has\"><code>Reflect.has()</code></a></dt>\n  <dd>\n    <p>Returns a boolean indicating whether the target has the property. Either as own or inherited. Works like the <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code> operator</a> as a function.</p>\n  </dd>\n  <dt id=\"reflect.isextensible\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/isExtensible\"><code>Reflect.isExtensible()</code></a></dt>\n  <dd>\n    <p>Same as <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a>. Returns a boolean that is <code>true</code> if the target is extensible.</p>\n  </dd>\n  <dt id=\"reflect.ownkeys\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys\"><code>Reflect.ownKeys()</code></a></dt>\n  <dd>\n    <p>Returns an array of the target object's own (not inherited) property keys.</p>\n  </dd>\n  <dt id=\"reflect.preventextensions\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/preventExtensions\"><code>Reflect.preventExtensions()</code></a></dt>\n  <dd>\n    <p>Similar to <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a>. Returns a boolean that is <code>true</code> if the update was successful.</p>\n  </dd>\n  <dt id=\"reflect.set\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set\"><code>Reflect.set()</code></a></dt>\n  <dd>\n    <p>A function that assigns values to properties. Returns a boolean that is <code>true</code> if the update was successful.</p>\n  </dd>\n  <dt id=\"reflect.setprototypeof\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf()</code></a></dt>\n  <dd>\n    <p>A function that sets the prototype of an object. Returns a boolean that is <code>true</code> if the update was successful.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"detecting_whether_an_object_contains_certain_properties","title":"Detecting whether an object contains certain properties","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> duck <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Maurice\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Quaaaack! My name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">,</span> <span class=\"token string\">\"color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// true</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">,</span> <span class=\"token string\">\"haircut\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"returning_the_objects_own_keys","title":"Returning the object's own keys","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">ownKeys</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ \"name\", \"color\", \"greeting\" ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"adding_a_new_property_to_the_object","title":"Adding a new property to the object","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">,</span> <span class=\"token string\">\"eyes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns \"true\" if successful</span>\n<span class=\"token comment\">// \"duck\" now contains the property \"eyes: 'black'\"</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/reflection.html#sec-reflect-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Reflect"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Reflect"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a></li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Static properties","id":"static_properties"},{"text":"Static methods","id":"static_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Reflect namespace object contains static methods for invoking interceptable JavaScript object internal methods. The methods are the same as those of proxy handlers.","popularity":0.0236,"modified":"2023-08-21T07:19:52.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/reflect","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/reflect/index.md","last_commit_url":"https://github.com/mdn/content/commit/70f09675ddcfc75a3bb66d2dce4cf82738948a37","filename":"index.md"},"short_title":"Reflect","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect","title":"Reflect"}],"pageTitle":"Reflect - JavaScript | MDN","noIndexing":false}}