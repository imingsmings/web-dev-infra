{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Iterator","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator","locale":"en-US","native":"English (US)","browserCompat":["javascript.builtins.Iterator"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator\" aria-current=\"page\"><code>Iterator</code></a></em></strong></li><li><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/Iterator\"><code>Iterator() constructor</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/@@iterator\"><code>Iterator.prototype[@@iterator]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/drop\"><code>Iterator.prototype.drop()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/every\"><code>Iterator.prototype.every()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/filter\"><code>Iterator.prototype.filter()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/find\"><code>Iterator.prototype.find()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/flatMap\"><code>Iterator.prototype.flatMap()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/forEach\"><code>Iterator.prototype.forEach()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/from\"><code>Iterator.from()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/map\"><code>Iterator.prototype.map()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/reduce\"><code>Iterator.prototype.reduce()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/some\"><code>Iterator.prototype.some()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/take\"><code>Iterator.prototype.take()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/toArray\"><code>Iterator.prototype.toArray()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><details><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function\"><code>Function() constructor</code></a></li></ol></details></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function: displayName</code></a><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function: length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function: name</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function: prototype</code></a></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/@@hasInstance\"><code>Function.prototype[@@hasInstance]()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></details></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><details><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li><details><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></details></li></ol>","sidebarMacro":"JSRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>An <strong><code>Iterator</code></strong> object is an object that conforms to the <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterator_protocol\">iterator protocol</a> by providing a <code>next()</code> method that returns an iterator result object. All built-in iterators inherit from the <code>Iterator</code> class. The <code>Iterator</code> class provides a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/@@iterator\"><code>@@iterator</code></a> method that returns the iterator object itself, making the iterator also <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">iterable</a>. It also provides some helper methods for working with iterators.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>The following are all built-in JavaScript iterators:</p>\n<ul>\n  <li>The <em>Array Iterator</em> returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\"><code>Array.prototype[@@iterator]()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/values\"><code>TypedArray.prototype.values()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/keys\"><code>TypedArray.prototype.keys()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/entries\"><code>TypedArray.prototype.entries()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@iterator\"><code>TypedArray.prototype[@@iterator]()</code></a>, and <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/arguments/@@iterator\"><code>arguments[@@iterator]()</code></a>.</li>\n  <li>The <em>String Iterator</em> returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/@@iterator\"><code>String.prototype[@@iterator]()</code></a>.</li>\n  <li>The <em>Map Iterator</em> returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\"><code>Map.prototype.values()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\"><code>Map.prototype.keys()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\"><code>Map.prototype.entries()</code></a>, and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\"><code>Map.prototype[@@iterator]()</code></a>.</li>\n  <li>The <em>Set Iterator</em> returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\"><code>Set.prototype.values()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\"><code>Set.prototype.keys()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\"><code>Set.prototype.entries()</code></a>, and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\"><code>Set.prototype[@@iterator]()</code></a>.</li>\n  <li>The <em>RegExp String Iterator</em> returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@matchAll\"><code>RegExp.prototype[@@matchAll]()</code></a> and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll\"><code>String.prototype.matchAll()</code></a>.</li>\n  <li>The <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator\"><code>Generator</code></a> object returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/function*\">generator functions</a>.</li>\n  <li>The <em>Segments Iterator</em> returned by the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment/Segments/@@iterator\"><code>[@@iterator]()</code></a> method of the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment/Segments\"><code>Segments</code></a> object returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/segment\"><code>Intl.Segmenter.prototype.segment()</code></a>.</li>\n  <li>The <em>Iterator Helper</em> returned by iterator helper methods such as <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/filter\"><code>Iterator.prototype.filter()</code></a> and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/map\"><code>Iterator.prototype.map()</code></a>.</li>\n</ul>\n<p>Each of these iterators have a distinct prototype object, which defines the <code>next()</code> method used by the particular iterator. For example, all string iterator objects inherit from a hidden object <code>StringIteratorPrototype</code>, which has a <code>next()</code> method that iterates this string by code points. <code>StringIteratorPrototype</code> also has a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag\"><code>@@toStringTag</code></a> property whose initial value is the string <code>\"String Iterator\"</code>. This property is used in <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a>. Similarly, other iterator prototypes also have their own <code>@@toStringTag</code> values, which are the same as the names given above.</p>\n<p>All of these prototype objects inherit from <code>Iterator.prototype</code>, which provides a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator\"><code>@@iterator</code></a> method that returns the iterator object itself, making the iterator also <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">iterable</a>.</p>"}},{"type":"prose","value":{"id":"iterator_helpers","title":"Iterator helpers","isH3":true,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> These methods are <em>iterator</em> helpers, not <em>iterable</em> helpers, because the only requirement for an object to be iterable is just the presence of a <code>@@iterator</code> method. There is no shared prototype to install these methods on.</p>\n</div>\n<p>The <code>Iterator</code> class itself provides some helper methods for working with iterators. For example, you may be tempted to do the following:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> nameToDeposit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"Anne\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"Bert\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"Carl\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> totalDeposit <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>nameToDeposit<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This first converts the iterator returned by <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\"><code>Map.prototype.values()</code></a> to an array, then uses the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a> method to calculate the sum. However, this both creates an intermediate array and iterates the array twice. Instead, you can use the <code>reduce()</code> method of the iterator itself:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> totalDeposit <span class=\"token operator\">=</span> nameToDeposit<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This method is more efficient, because it only iterates the iterator once, without memorizing any intermediate values. Iterator helper methods are necessary to work with infinite iterators:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> current <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> next <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">yield</span> current<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">[</span>current<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>next<span class=\"token punctuation\">,</span> current <span class=\"token operator\">+</span> next<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> seq <span class=\"token operator\">=</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> firstThreeDigitTerm <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> n <span class=\"token operator\">&gt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>You cannot convert <code>seq</code> to an array, because it is infinite. Instead, you can use the <code>find()</code> method of the iterator itself, which only iterates <code>seq</code> as far as necessary to find the first value that satisfies the condition.</p>\n<p>You will find many iterator methods analogous to array methods, such as:</p>\n<figure class=\"table-container\"><table>\n  <thead>\n    <tr>\n      <th>Iterator method</th>\n      <th>Array method</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/every\"><code>Iterator.prototype.every()</code></a></td>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/filter\"><code>Iterator.prototype.filter()</code></a></td>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/find\"><code>Iterator.prototype.find()</code></a></td>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/flatMap\"><code>Iterator.prototype.flatMap()</code></a></td>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap\"><code>Array.prototype.flatMap()</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/forEach\"><code>Iterator.prototype.forEach()</code></a></td>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/map\"><code>Iterator.prototype.map()</code></a></td>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/reduce\"><code>Iterator.prototype.reduce()</code></a></td>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/some\"><code>Iterator.prototype.some()</code></a></td>\n      <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a></td>\n    </tr>\n  </tbody>\n</table></figure>\n<p><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/drop\"><code>Iterator.prototype.drop()</code></a> and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/take\"><code>Iterator.prototype.take()</code></a> combined are somewhat analogous to <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.prototype.slice()</code></a>.</p>\n<p>Among these methods, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/filter\"><code>filter()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/flatMap\"><code>flatMap()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/map\"><code>map()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/drop\"><code>drop()</code></a>, and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/take\"><code>take()</code></a> return a new <em>Iterator Helper</em> object. The iterator helper is also an <code>Iterator</code> instance, making the helper methods chainable. All iterator helper objects inherit from a common prototype object, which implements the iterator protocol:</p>\n<dl>\n  <dt id=\"next\"><a href=\"#next\"><code>next()</code></a></dt>\n  <dd>\n    <p>Calls the <code>next()</code> method of the underlying iterator, applies the helper method to the result, and returns the result.</p>\n  </dd>\n  <dt id=\"return\"><a href=\"#return\"><code>return()</code></a></dt>\n  <dd>\n    <p>Calls the <code>return()</code> method of the underlying iterator, and returns the result.</p>\n  </dd>\n</dl>\n<p>The iterator helper shares the same data source as the underlying iterator, so iterating the iterator helper causes the underlying iterator to be iterated as well. There is no way to \"fork\" an iterator to allow it to be iterated multiple times.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> it <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> it2 <span class=\"token operator\">=</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Essentially a copy</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>it2<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"proper_iterators","title":"Proper iterators","isH3":true,"content":"<p>There are two kinds of \"iterators\": objects that conform to the <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterator_protocol\">iterator protocol</a> (which, at its minimum, only requires the presence of a <code>next()</code> method), and objects that inherit from the <code>Iterator</code> class, which enjoy the helper methods. They do not entail each other — objects that inherit from <code>Iterator</code> do not automatically become iterators, because the <code>Iterator</code> class does not define a <code>next()</code> method. Instead, the object needs to define a <code>next()</code> method itself. A <em>proper iterator</em> is one that both conforms to the iterator protocol and inherits from <code>Iterator</code>, and most code expect iterators to be proper iterators and iterables to return proper iterators. To create proper iterators, define a class that extends <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/Iterator\"><code>Iterator</code></a>, or use the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/from\"><code>Iterator.from()</code></a> method.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyIterator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Iterator</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// …</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> myIterator <span class=\"token operator\">=</span> Iterator<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// …</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"iterator\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/Iterator\"><code>Iterator()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Intended to be <a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/extends\">extended</a> by other classes that create iterators. Throws an error when constructed by itself.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_methods","title":"Static methods","isH3":false,"content":"<dl>\n  <dt id=\"iterator.from\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/from\"><code>Iterator.from()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Creates a new <code>Iterator</code> object from an iterator or iterable object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p>These properties are defined on <code>Iterator.prototype</code> and shared by all <code>Iterator</code> instances.</p>\n<dl>\n  <dt id=\"iterator.prototype.constructor\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Iterator.prototype.constructor</code></a></dt>\n  <dd>\n    <p>The constructor function that created the instance object. For <code>Iterator</code> instances, the initial value is the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/Iterator\"><code>Iterator</code></a> constructor.</p>\n  </dd>\n  <dt id=\"iterator.prototypetostringtag\"><a href=\"#iterator.prototypetostringtag\"><code>Iterator.prototype[@@toStringTag]</code></a></dt>\n  <dd>\n    <p>The initial value of the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag\"><code>@@toStringTag</code></a> property is the string <code>\"Iterator\"</code>. This property is used in <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a>.</p>\n    <div class=\"notecard note\" id=\"sect2\">\n      <p><strong>Note:</strong> Unlike the <code>@@toStringTag</code> on most built-in classes, <code>Iterator.prototype[@@toStringTag]</code> is writable for web compatibility reasons.</p>\n    </div>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"iterator.prototype.drop\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/drop\"><code>Iterator.prototype.drop()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new iterator helper that skips the given number of elements at the start of this iterator.</p>\n  </dd>\n  <dt id=\"iterator.prototype.every\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/every\"><code>Iterator.prototype.every()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Tests whether all elements produced by the iterator pass the test implemented by the provided function.</p>\n  </dd>\n  <dt id=\"iterator.prototype.filter\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/filter\"><code>Iterator.prototype.filter()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new iterator helper that yields only those elements of the iterator for which the provided callback function returns <code>true</code>.</p>\n  </dd>\n  <dt id=\"iterator.prototype.find\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/find\"><code>Iterator.prototype.find()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns the first element produced by the iterator that satisfies the provided testing function. If no values satisfy the testing function, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> is returned.</p>\n  </dd>\n  <dt id=\"iterator.prototype.flatmap\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/flatMap\"><code>Iterator.prototype.flatMap()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new iterator helper that takes each element in the original iterator, runs it through a mapping function, and yields elements returned by the mapping function (which are contained in another iterator or iterable).</p>\n  </dd>\n  <dt id=\"iterator.prototype.foreach\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/forEach\"><code>Iterator.prototype.forEach()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Executes a provided function once for each element produced by the iterator.</p>\n  </dd>\n  <dt id=\"iterator.prototype.map\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/map\"><code>Iterator.prototype.map()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new iterator helper that yields elements of the iterator, each transformed by a mapping function.</p>\n  </dd>\n  <dt id=\"iterator.prototype.reduce\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/reduce\"><code>Iterator.prototype.reduce()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Executes a user-supplied \"reducer\" callback function on each element produced by the iterator, passing in the return value from the calculation on the preceding element. The final result of running the reducer across all elements is a single value.</p>\n  </dd>\n  <dt id=\"iterator.prototype.some\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/some\"><code>Iterator.prototype.some()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Tests whether at least one element in the iterator passes the test implemented by the provided function. It returns a boolean value.</p>\n  </dd>\n  <dt id=\"iterator.prototype.take\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/take\"><code>Iterator.prototype.take()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a new iterator helper that yields the given number of elements in this iterator and then terminates.</p>\n  </dd>\n  <dt id=\"iterator.prototype.toarray\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/toArray\"><code>Iterator.prototype.toArray()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Creates a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> instance populated with the elements yielded from the iterator.</p>\n  </dd>\n  <dt id=\"iterator.prototypeiterator\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator/@@iterator\"><code>Iterator.prototype[@@iterator]()</code></a></dt>\n  <dd>\n    <p>Returns the iterator object itself. This allows iterator objects to also be iterable.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_an_iterator_as_an_iterable","title":"Using an iterator as an iterable","isH3":true,"content":"<p>All built-in iterators are also iterable, so you can use them in a <code>for...of</code> loop:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> arrIterator <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> value <span class=\"token keyword\">of</span> arrIterator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Logs: 1, 2, 3</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-%iteratorprototype%-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Iterator"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Iterator"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#iterator-helpers\" class=\"external\" target=\"_blank\">Polyfill of <code>Iterator</code> in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/function*\"><code>function*</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\">Iteration protocols</a></li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Constructor","id":"constructor"},{"text":"Static methods","id":"static_methods"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"An Iterator object is an object that conforms to the iterator protocol by providing a next() method that returns an iterator result object. All built-in iterators inherit from the Iterator class. The Iterator class provides a @@iterator method that returns the iterator object itself, making the iterator also iterable. It also provides some helper methods for working with iterators.","popularity":0.0276,"modified":"2023-09-12T04:14:14.000Z","source":{"folder":"en-us/web/javascript/reference/global_objects/iterator","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/iterator/index.md","last_commit_url":"https://github.com/mdn/content/commit/5c3c25fd4f2fbd7a5f01727a65c2f70d73f1880a","filename":"index.md"},"short_title":"Iterator","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"Reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator","title":"Iterator"}],"pageTitle":"Iterator - JavaScript | MDN","noIndexing":false}}