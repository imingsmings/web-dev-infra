{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"GPUDevice: createRenderPipelineAsync() method","mdn_url":"/en-US/docs/Web/API/GPUDevice/createRenderPipelineAsync","locale":"en-US","native":"English (US)","browserCompat":["api.GPUDevice.createRenderPipelineAsync"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUDevice/features\"><code>features</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/label\"><code>label</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/limits\"><code>limits</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/lost\"><code>lost</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/queue\"><code>queue</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUDevice/createBindGroup\"><code>createBindGroup()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createBindGroupLayout\"><code>createBindGroupLayout()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createBuffer\"><code>createBuffer()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createCommandEncoder\"><code>createCommandEncoder()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createComputePipeline\"><code>createComputePipeline()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createComputePipelineAsync\"><code>createComputePipelineAsync()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createPipelineLayout\"><code>createPipelineLayout()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createQuerySet\"><code>createQuerySet()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createRenderBundleEncoder\"><code>createRenderBundleEncoder()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipeline\"><code>createRenderPipeline()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><em><code>createRenderPipelineAsync()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createSampler\"><code>createSampler()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createShaderModule\"><code>createShaderModule()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createTexture\"><code>createTexture()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/destroy\"><code>destroy()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/importExternalTexture\"><code>importExternalTexture()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/popErrorScope\"><code>popErrorScope()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/pushErrorScope\"><code>pushErrorScope()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUDevice/uncapturederror_event\"><code>uncapturederror</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebGPU API</summary><ol><li><a href=\"/en-US/docs/Web/API/GPU\"><code>GPU</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapterInfo\"><code>GPUAdapterInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroup\"><code>GPUBindGroup</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCanvasContext\"><code>GPUCanvasContext</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationInfo\"><code>GPUCompilationInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationMessage\"><code>GPUCompilationMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDeviceLostInfo\"><code>GPUDeviceLostInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUExternalTexture\"><code>GPUExternalTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUInternalError\"><code>GPUInternalError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUOutOfMemoryError\"><code>GPUOutOfMemoryError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQuerySet\"><code>GPUQuerySet</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundle\"><code>GPURenderBundle</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSampler\"><code>GPUSampler</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTextureView\"><code>GPUTextureView</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUUncapturedErrorEvent\"><code>GPUUncapturedErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/gpu\"><code>Navigator.gpu</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/gpu\"><code>WorkerNavigator.gpu</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>createRenderPipelineAsync()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a> interface returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with a <a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a>, which can control the vertex and fragment shader stages and be used in a <a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a> or <a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a>, once the pipeline can be used without any stalling.\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> It is generally preferable to use this method over <a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipeline\"><code>GPUDevice.createRenderPipeline()</code></a> whenever possible, as it prevents blocking of GPU operation execution on pipeline compilation.</p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createRenderPipelineAsync</span><span class=\"token punctuation\">(</span>descriptor<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"descriptor\"><a href=\"#descriptor\"><code>descriptor</code></a></dt>\n  <dd>\n    <p>See the descriptor definition for the <a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipeline#syntax\"><code>GPUDevice.createRenderPipeline()</code></a> method.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with a <a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a> object instance when the created pipeline is ready to be used without additional delay.</p>"}},{"type":"prose","value":{"id":"validation","title":"Validation","isH3":true,"content":"<p>If pipeline creation fails and the resulting pipeline becomes invalid as a result, the returned promise rejects with a <a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a>:</p>\n<ul>\n  <li>If this is due to an internal error, the <a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a> will have a <code>reason</code> of <code>\"internal\"</code>.</li>\n  <li>If this is due to a validation error, the <a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a> will have a <code>reason</code> of <code>\"validation\"</code>.</li>\n</ul>\n<p>A validation error can occur if any of the following are false:</p>\n<ul>\n  <li>For <code>depthStencil</code> objects:\n    <ul>\n      <li><code>format</code> is a <a href=\"https://gpuweb.github.io/gpuweb/#depth-or-stencil-format\" class=\"external\" target=\"_blank\"><code>depth-or-stencil</code></a> format.</li>\n      <li>If <code>depthWriteEnabled</code> is <code>true</code> or <code>depthCompare</code> is not <code>\"always\"</code>, <code>format</code> has a depth component.</li>\n      <li>If <code>stencilFront</code> or <code>stencilBack</code>'s properties are not at their default values, <code>format</code> has a stencil component.</li>\n    </ul>\n  </li>\n  <li>For <code>fragment</code> objects:\n    <ul>\n      <li><code>targets.length</code> is less than or equal to the <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a>'s <code>maxColorAttachments</code> <a href=\"/en-US/docs/Web/API/GPUSupportedLimits\" title=\"limit\">limit</a>.</li>\n      <li>For each <code>target</code>, <code>writeMask</code>'s numeric equivalent is less than 16.</li>\n      <li>If any of the used blend factor operations use the source alpha channel (for example <code>\"src-alpha-saturated\"</code>), the output has an alpha channel (that is, it must be a <code>vec4</code>).</li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> The <a href=\"https://webgpu.github.io/webgpu-samples/\" class=\"external\" target=\"_blank\">WebGPU samples</a> feature many more examples.</p>\n</div>"}},{"type":"prose","value":{"id":"basic_example","title":"Basic example","isH3":true,"content":"<p>The following example shows a basic example of the construction of a valid render pipeline descriptor object, which is then used to create a <a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a> via a <code>createRenderPipelineAsync()</code> call.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">const</span> vertexBuffers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">shaderLocation</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// position</span>\n          <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"float32x4\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">shaderLocation</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// color</span>\n          <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"float32x4\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">arrayStride</span><span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">stepMode</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vertex\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> pipelineDescriptor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">vertex</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> shaderModule<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">entryPoint</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vertex_main\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">buffers</span><span class=\"token operator\">:</span> vertexBuffers<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fragment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> shaderModule<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">entryPoint</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fragment_main\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">targets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> navigator<span class=\"token punctuation\">.</span>gpu<span class=\"token punctuation\">.</span><span class=\"token function\">getPreferredCanvasFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">primitive</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">topology</span><span class=\"token operator\">:</span> <span class=\"token string\">\"triangle-list\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">layout</span><span class=\"token operator\">:</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> renderPipeline <span class=\"token operator\">=</span>\n    <span class=\"token keyword\">await</span> device<span class=\"token punctuation\">.</span><span class=\"token function\">createRenderPipelineAsync</span><span class=\"token punctuation\">(</span>pipelineDescriptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://gpuweb.github.io/gpuweb/#dom-gpudevice-createrenderpipelineasync","title":"WebGPU"}],"query":"api.GPUDevice.createRenderPipelineAsync"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.GPUDevice.createRenderPipelineAsync"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The createRenderPipelineAsync() method of the\n  GPUDevice interface returns a Promise that fulfills with a GPURenderPipeline, which can control the vertex and fragment shader stages and be used in a GPURenderPassEncoder or GPURenderBundleEncoder, once the pipeline can be used without any stalling.","popularity":0,"modified":"2023-08-19T04:34:50.000Z","source":{"folder":"en-us/web/api/gpudevice/createrenderpipelineasync","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/gpudevice/createrenderpipelineasync/index.md","last_commit_url":"https://github.com/mdn/content/commit/6e78306f9674a5e6329e07eca5f2791ce3138f0c","filename":"index.md"},"short_title":"createRenderPipelineAsync()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/GPUDevice","title":"GPUDevice"},{"uri":"/en-US/docs/Web/API/GPUDevice/createRenderPipelineAsync","title":"createRenderPipelineAsync()"}],"pageTitle":"GPUDevice: createRenderPipelineAsync() method - Web APIs | MDN","noIndexing":false}}