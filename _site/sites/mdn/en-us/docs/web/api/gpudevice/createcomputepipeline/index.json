{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"GPUDevice: createComputePipeline() method","mdn_url":"/en-US/docs/Web/API/GPUDevice/createComputePipeline","locale":"en-US","native":"English (US)","browserCompat":["api.GPUDevice.createComputePipeline"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUDevice/features\"><code>features</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/label\"><code>label</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/limits\"><code>limits</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/lost\"><code>lost</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/queue\"><code>queue</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUDevice/createBindGroup\"><code>createBindGroup()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createBindGroupLayout\"><code>createBindGroupLayout()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createBuffer\"><code>createBuffer()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createCommandEncoder\"><code>createCommandEncoder()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><em><code>createComputePipeline()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createComputePipelineAsync\"><code>createComputePipelineAsync()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createPipelineLayout\"><code>createPipelineLayout()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createQuerySet\"><code>createQuerySet()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createRenderBundleEncoder\"><code>createRenderBundleEncoder()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipeline\"><code>createRenderPipeline()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipelineAsync\"><code>createRenderPipelineAsync()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createSampler\"><code>createSampler()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createShaderModule\"><code>createShaderModule()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/createTexture\"><code>createTexture()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/destroy\"><code>destroy()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/importExternalTexture\"><code>importExternalTexture()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/popErrorScope\"><code>popErrorScope()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUDevice/pushErrorScope\"><code>pushErrorScope()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUDevice/uncapturederror_event\"><code>uncapturederror</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebGPU API</summary><ol><li><a href=\"/en-US/docs/Web/API/GPU\"><code>GPU</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapterInfo\"><code>GPUAdapterInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroup\"><code>GPUBindGroup</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCanvasContext\"><code>GPUCanvasContext</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationInfo\"><code>GPUCompilationInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationMessage\"><code>GPUCompilationMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDeviceLostInfo\"><code>GPUDeviceLostInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUExternalTexture\"><code>GPUExternalTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUInternalError\"><code>GPUInternalError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUOutOfMemoryError\"><code>GPUOutOfMemoryError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQuerySet\"><code>GPUQuerySet</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundle\"><code>GPURenderBundle</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSampler\"><code>GPUSampler</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTextureView\"><code>GPUTextureView</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUUncapturedErrorEvent\"><code>GPUUncapturedErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/gpu\"><code>Navigator.gpu</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/gpu\"><code>WorkerNavigator.gpu</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>createComputePipeline()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a> interface creates a <a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a> that can control the compute shader stage and be used in a <a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a>.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createComputePipeline</span><span class=\"token punctuation\">(</span>descriptor<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"descriptor\"><a href=\"#descriptor\"><code>descriptor</code></a></dt>\n  <dd>\n    <p>An object containing the following properties:</p>\n    <dl>\n      <dt id=\"compute\"><a href=\"#compute\"><code>compute</code></a></dt>\n      <dd>\n        <p>An object describing the compute shader entry point of the pipeline. This object can contain the following properties:</p>\n        <dl>\n          <dt id=\"constants\"><a href=\"#constants\"><code>constants</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n          <dd>\n            <p>A sequence of record types, with the structure <code>(id, value)</code>, representing override values for <a href=\"https://gpuweb.github.io/gpuweb/#typedefdef-gpupipelineconstantvalue\" class=\"external\" target=\"_blank\">WGSL constants that can be overridden in the pipeline</a>. These behave like <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\">ordered maps</a>. In each case, the <code>id</code> is a key used to identify or select the record, and the <code>constant</code> is an enumerated value representing a WGSL.</p>\n            <p>Depending on which constant you want to override, the <code>id</code> may take the form of the numeric ID of the constant, if one is specified, or otherwise the constant's identifier name.</p>\n            <p>A code snippet providing override values for several overridable constants might look like this:</p>\n            <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token literal-property property\">constants</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1200</span><span class=\"token operator\">:</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1300</span><span class=\"token operator\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">depth</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n          </dd>\n          <dt id=\"entrypoint\"><a href=\"#entrypoint\"><code>entryPoint</code></a></dt>\n          <dd>\n            <p>The name of the function in the <code>module</code> that this stage will use to perform its work. The corresponding shader function must have the <code>@compute</code> attribute to be identified as this entry point. See <a href=\"https://gpuweb.github.io/gpuweb/wgsl/#entry-point-decl\" class=\"external\" target=\"_blank\">Entry Point Declaration</a> for more information.</p>\n          </dd>\n          <dt id=\"module\"><a href=\"#module\"><code>module</code></a></dt>\n          <dd>\n            <p>A <a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a> object containing the <a href=\"https://gpuweb.github.io/gpuweb/wgsl/\" class=\"external\" target=\"_blank\">WGSL</a> code that this programmable stage will execute.</p>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"label\"><a href=\"#label\"><code>label</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A string providing a label that can be used to identify the object, for example in <a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a> messages or console warnings.</p>\n      </dd>\n      <dt id=\"layout\"><a href=\"#layout\"><code>layout</code></a></dt>\n      <dd>\n        <p>Defines the layout (structure, purpose, and type) of all the GPU resources (buffers, textures, etc.) used during the execution of the pipeline. Possible values are:</p>\n        <ul>\n          <li>A <a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a> object, created using <a href=\"/en-US/docs/Web/API/GPUDevice/createPipelineLayout\"><code>GPUDevice.createPipelineLayout()</code></a>, which allows the GPU to figure out how to run the pipeline most efficiently ahead of time.</li>\n          <li>A string of <code>\"auto\"</code>, which causes the pipeline to generate an implicit bind group layout based on any bindings defined in the shader code. If <code>\"auto\"</code> is used, the generated bind group layouts may only be used with the current pipeline.</li>\n        </ul>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a> object instance.</p>"}},{"type":"prose","value":{"id":"validation","title":"Validation","isH3":true,"content":"<p>The following criteria must be met when calling <strong><code>createComputePipeline()</code></strong>, otherwise a <a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a> is generated and an invalid <a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a> object is returned:</p>\n<ul>\n  <li>The workgroup storage size used by the <code>module</code> referenced inside the <code>compute</code> property is less than or equal to the <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a>'s <code>maxComputeWorkgroupStorageSize</code> <a href=\"/en-US/docs/Web/API/GPUSupportedLimits\" title=\"limit\">limit</a>.</li>\n  <li>The <code>module</code> uses a number of compute invocations per workgroup less than or equal to the <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a>'s <code>maxComputeInvocationsPerWorkgroup</code> <a href=\"/en-US/docs/Web/API/GPUSupportedLimits\" title=\"limit\">limit</a>.</li>\n  <li>The <code>module</code>'s workgroup size is less than or equal to the <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a>'s corresponding <code>maxComputeWorkgroupSizeX</code>, <code>maxComputeWorkgroupSizeY</code>, or <code>maxComputeWorkgroupSizeZ</code> <a href=\"/en-US/docs/Web/API/GPUSupportedLimits\" title=\"limit\">limit</a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> The <a href=\"https://webgpu.github.io/webgpu-samples/\" class=\"external\" target=\"_blank\">WebGPU samples</a> feature many more examples.</p>\n</div>"}},{"type":"prose","value":{"id":"basic_example","title":"Basic example","isH3":true,"content":"<p>Our <a href=\"https://mdn.github.io/dom-examples/webgpu-compute-demo/\" class=\"external\" target=\"_blank\">basic compute demo</a> shows a process of:</p>\n<ul>\n  <li>Creating a bind group layout with <a href=\"/en-US/docs/Web/API/GPUDevice/createBindGroupLayout\"><code>GPUDevice.createBindGroupLayout()</code></a>.</li>\n  <li>Feeding the <code>bindGroupLayout</code> into <a href=\"/en-US/docs/Web/API/GPUDevice/createPipelineLayout\"><code>GPUDevice.createPipelineLayout()</code></a> to create a <a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a>.</li>\n  <li>Using that value immediately in a <code>createComputePipeline()</code> call to create a <a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a>.</li>\n</ul>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">const</span> bindGroupLayout <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span><span class=\"token function\">createBindGroupLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">entries</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">binding</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">visibility</span><span class=\"token operator\">:</span> GPUShaderStage<span class=\"token punctuation\">.</span><span class=\"token constant\">COMPUTE</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">buffer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"storage\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> computePipeline <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span><span class=\"token function\">createComputePipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">layout</span><span class=\"token operator\">:</span> device<span class=\"token punctuation\">.</span><span class=\"token function\">createPipelineLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">bindGroupLayouts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>bindGroupLayout<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">compute</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> shaderModule<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">entryPoint</span><span class=\"token operator\">:</span> <span class=\"token string\">\"main\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://gpuweb.github.io/gpuweb/#dom-gpudevice-createcomputepipeline","title":"WebGPU"}],"query":"api.GPUDevice.createComputePipeline"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.GPUDevice.createComputePipeline"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The createComputePipeline() method of the\n  GPUDevice interface creates a GPUComputePipeline that can control the compute shader stage and be used in a GPUComputePassEncoder.","popularity":0,"modified":"2023-04-07T06:03:34.000Z","source":{"folder":"en-us/web/api/gpudevice/createcomputepipeline","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/gpudevice/createcomputepipeline/index.md","last_commit_url":"https://github.com/mdn/content/commit/b6984118ac9482e683a654edfefa4b426ca3c7ca","filename":"index.md"},"short_title":"createComputePipeline()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/GPUDevice","title":"GPUDevice"},{"uri":"/en-US/docs/Web/API/GPUDevice/createComputePipeline","title":"createComputePipeline()"}],"pageTitle":"GPUDevice: createComputePipeline() method - Web APIs | MDN","noIndexing":false}}