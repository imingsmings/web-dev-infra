{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/MediaStream/active_event does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/MediaStream/active_event does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":73,"column":7,"macroName":"domxref","sourceContext":"  |     <p>Fired when a {{domxref(\"MediaStreamTrack\")}} object has been removed.</p>\n  |   </dd>\n> |   <dt>{{domxref(\"MediaStream/active_event\", \"active\")}}</dt>\n          ^\n  |   <dd>\n  |     <p>Fired when the MediaStream is activated.</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/mediastream/index.md","macroSource":"{{domxref(\"MediaStream/active_event\", \"active\")}}"},{"id":"macro1","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/MediaStream/inactive_event does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/MediaStream/inactive_event does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":77,"column":7,"macroName":"domxref","sourceContext":"  |     <p>Fired when the MediaStream is activated.</p>\n  |   </dd>\n> |   <dt>{{domxref(\"MediaStream/inactive_event\", \"inactive\")}}</dt>\n          ^\n  |   <dd>\n  |     <p>Fired when the MediaStream is inactivated.</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/mediastream/index.md","macroSource":"{{domxref(\"MediaStream/inactive_event\", \"inactive\")}}"}]},"title":"MediaStream","mdn_url":"/en-US/docs/Web/API/MediaStream","locale":"en-US","native":"English (US)","browserCompat":["api.MediaStream"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API\">Media Capture and Streams API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/MediaStream\" aria-current=\"page\"><code>MediaStream</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaStream/MediaStream\"><code>MediaStream()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaStream/active\"><code>active</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/id\"><code>id</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaStream/addTrack\"><code>addTrack()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/clone\"><code>clone()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/getAudioTracks\"><code>getAudioTracks()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/getTrackById\"><code>getTrackById()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/getTracks\"><code>getTracks()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/getVideoTracks\"><code>getVideoTracks()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/removeTrack\"><code>removeTrack()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaStream/addtrack_event\"><code>addtrack</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/removetrack_event\"><code>removetrack</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Media Capture and Streams</summary><ol><li><a href=\"/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack\"><code>CanvasCaptureMediaStreamTrack</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/captureStream\"><code>HTMLCanvasElement.captureStream()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamTrackEvent\"><code>MediaStreamTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSettings\"><code>MediaTrackSettings</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSupportedConstraints\"><code>MediaTrackSupportedConstraints</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>MediaStream</code></strong> interface represents a stream of media content. A stream consists of several <strong>tracks</strong>, such as video or audio tracks. Each track is specified as an instance of <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>.</p>\n<p>You can obtain a <code>MediaStream</code> object either by using the constructor or by calling functions such as <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a>, <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\"><code>MediaDevices.getDisplayMedia()</code></a>, or <a href=\"/en-US/docs/Web/API/HTMLCanvasElement/captureStream\"><code>HTMLCanvasElement.captureStream()</code></a>.</p>\n<p>Some user agents subclass this interface to provide more precise information or functionality, like in <a href=\"/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack\"><code>CanvasCaptureMediaStreamTrack</code></a>.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/MediaStream\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"88\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"162\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      MediaStream\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"mediastream\"><a href=\"/en-US/docs/Web/API/MediaStream/MediaStream\" title=\"MediaStream()\"><code>MediaStream()</code></a></dt>\n  <dd>\n    <p>Creates and returns a new <code>MediaStream</code> object. You can create an empty stream, a stream which is based upon an existing stream, or a stream that contains a specified list of tracks (specified as an array of <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> objects).</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p><em>This interface inherits properties from its parent, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"mediastream.active\"><a href=\"/en-US/docs/Web/API/MediaStream/active\"><code>MediaStream.active</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A Boolean value that returns <code>true</code> if the <code>MediaStream</code> is active, or <code>false</code> otherwise.</p>\n  </dd>\n  <dt id=\"mediastream.id\"><a href=\"/en-US/docs/Web/API/MediaStream/id\"><code>MediaStream.id</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A string containing a 36-character universally unique identifier (<a href=\"/en-US/docs/Glossary/UUID\">UUID</a>) for the object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<p><em>This interface inherits methods from its parent, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"mediastream.addtrack\"><a href=\"/en-US/docs/Web/API/MediaStream/addTrack\"><code>MediaStream.addTrack()</code></a></dt>\n  <dd>\n    <p>Stores a copy of the <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> given as argument. If the track has already been added to the <code>MediaStream</code> object, nothing happens.</p>\n  </dd>\n  <dt id=\"mediastream.clone\"><a href=\"/en-US/docs/Web/API/MediaStream/clone\"><code>MediaStream.clone()</code></a></dt>\n  <dd>\n    <p>Returns a clone of the <code>MediaStream</code> object. The clone will, however, have a unique value for <a href=\"/en-US/docs/Web/API/MediaStream/id\" title=\"id\"><code>id</code></a>.</p>\n  </dd>\n  <dt id=\"mediastream.getaudiotracks\"><a href=\"/en-US/docs/Web/API/MediaStream/getAudioTracks\"><code>MediaStream.getAudioTracks()</code></a></dt>\n  <dd>\n    <p>Returns a list of the <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> objects stored in the <code>MediaStream</code> object that have their <code>kind</code> attribute set to <code>audio</code>. The order is not defined, and may not only vary from one browser to another, but also from one call to another.</p>\n  </dd>\n  <dt id=\"mediastream.gettrackbyid\"><a href=\"/en-US/docs/Web/API/MediaStream/getTrackById\"><code>MediaStream.getTrackById()</code></a></dt>\n  <dd>\n    <p>Returns the track whose ID corresponds to the one given in parameters, <code>trackid</code>. If no parameter is given, or if no track with that ID does exist, it returns <code>null</code>. If several tracks have the same ID, it returns the first one.</p>\n  </dd>\n  <dt id=\"mediastream.gettracks\"><a href=\"/en-US/docs/Web/API/MediaStream/getTracks\"><code>MediaStream.getTracks()</code></a></dt>\n  <dd>\n    <p>Returns a list of all <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> objects stored in the <code>MediaStream</code> object, regardless of the value of the <code>kind</code> attribute. The order is not defined, and may not only vary from one browser to another, but also from one call to another.</p>\n  </dd>\n  <dt id=\"mediastream.getvideotracks\"><a href=\"/en-US/docs/Web/API/MediaStream/getVideoTracks\"><code>MediaStream.getVideoTracks()</code></a></dt>\n  <dd>\n    <p>Returns a list of the <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> objects stored in the <code>MediaStream</code> object that have their <code>kind</code> attribute set to <code>\"video\"</code>. The order is not defined, and may not only vary from one browser to another, but also from one call to another.</p>\n  </dd>\n  <dt id=\"mediastream.removetrack\"><a href=\"/en-US/docs/Web/API/MediaStream/removeTrack\"><code>MediaStream.removeTrack()</code></a></dt>\n  <dd>\n    <p>Removes the <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> given as argument. If the track is not part of the <code>MediaStream</code> object, nothing happens.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<dl>\n  <dt id=\"addtrack\"><a href=\"/en-US/docs/Web/API/MediaStream/addtrack_event\" title=\"addtrack\"><code>addtrack</code></a></dt>\n  <dd>\n    <p>Fired when a new <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> object is added.</p>\n  </dd>\n  <dt id=\"removetrack\"><a href=\"/en-US/docs/Web/API/MediaStream/removetrack_event\" title=\"removetrack\"><code>removetrack</code></a></dt>\n  <dd>\n    <p>Fired when a <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> object has been removed.</p>\n  </dd>\n  <dt id=\"active\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;MediaStream/active_event&quot;, &quot;active&quot;)}}\"><code>active</code></a></dt>\n  <dd>\n    <p>Fired when the MediaStream is activated.</p>\n  </dd>\n  <dt id=\"inactive\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;MediaStream/inactive_event&quot;, &quot;inactive&quot;)}}\"><code>inactive</code></a></dt>\n  <dd>\n    <p>Fired when the MediaStream is inactivated.</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-main/#mediastream","title":"Media Capture and Streams"}],"query":"api.MediaStream"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaStream"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Using the MediaStream Recording API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Events","id":"events"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaStream interface represents a stream of media content. A stream consists of several tracks, such as video or audio tracks. Each track is specified as an instance of MediaStreamTrack.","popularity":0.03,"modified":"2023-04-24T06:47:20.000Z","source":{"folder":"en-us/web/api/mediastream","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediastream/index.md","last_commit_url":"https://github.com/mdn/content/commit/c5f00b8277ff9e1e3062dac7a9054a8c060cc1e7","filename":"index.md"},"short_title":"MediaStream","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaStream","title":"MediaStream"}],"pageTitle":"MediaStream - Web APIs | MDN","noIndexing":false}}