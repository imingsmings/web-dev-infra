{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"GPURenderPipeline","mdn_url":"/en-US/docs/Web/API/GPURenderPipeline","locale":"en-US","native":"English (US)","browserCompat":["api.GPURenderPipeline"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/GPURenderPipeline\" aria-current=\"page\"><code>GPURenderPipeline</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline/label\"><code>label</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline/getBindGroupLayout\"><code>getBindGroupLayout()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebGPU API</summary><ol><li><a href=\"/en-US/docs/Web/API/GPU\"><code>GPU</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapterInfo\"><code>GPUAdapterInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroup\"><code>GPUBindGroup</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCanvasContext\"><code>GPUCanvasContext</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationInfo\"><code>GPUCompilationInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationMessage\"><code>GPUCompilationMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDeviceLostInfo\"><code>GPUDeviceLostInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUExternalTexture\"><code>GPUExternalTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUInternalError\"><code>GPUInternalError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUOutOfMemoryError\"><code>GPUOutOfMemoryError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQuerySet\"><code>GPUQuerySet</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundle\"><code>GPURenderBundle</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSampler\"><code>GPUSampler</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTextureView\"><code>GPUTextureView</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUUncapturedErrorEvent\"><code>GPUUncapturedErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/gpu\"><code>Navigator.gpu</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/gpu\"><code>WorkerNavigator.gpu</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>GPURenderPipeline</code></strong> interface of the <a href=\"/en-US/docs/Web/API/WebGPU_API\" title=\"WebGPU API\">WebGPU API</a> represents a pipeline that controls the vertex and fragment shader stages and can be used in a <a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a> or <a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a>.</p>\n<p>A <code>GPURenderPipeline</code> object instance can be created using the <a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipeline\"><code>GPUDevice.createRenderPipeline()</code></a> or <a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipelineAsync\"><code>GPUDevice.createRenderPipelineAsync()</code></a> methods.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"label\"><a href=\"/en-US/docs/Web/API/GPURenderPipeline/label\" title=\"label\"><code>label</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A string providing a label that can be used to identify the object, for example in <a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a> messages or console warnings.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"getbindgrouplayout\"><a href=\"/en-US/docs/Web/API/GPURenderPipeline/getBindGroupLayout\" title=\"getBindGroupLayout()\"><code>getBindGroupLayout()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns the pipeline's <a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a> object with the given index (i.e. included in the originating <a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipeline\"><code>GPUDevice.createRenderPipeline()</code></a> or <a href=\"/en-US/docs/Web/API/GPUDevice/createRenderPipelineAsync\"><code>GPUDevice.createRenderPipelineAsync()</code></a> call's pipeline layout).</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> The <a href=\"https://webgpu.github.io/webgpu-samples/\" class=\"external\" target=\"_blank\">WebGPU samples</a> feature many more examples.</p>\n</div>"}},{"type":"prose","value":{"id":"basic_example","title":"Basic example","isH3":true,"content":"<p>Our <a href=\"https://mdn.github.io/dom-examples/webgpu-render-demo/\" class=\"external\" target=\"_blank\">basic render demo</a> provides a simple example of the construction of a valid render pipeline descriptor object, which is then used to create a <code>GPURenderPipeline</code> via a <code>createRenderPipeline()</code> call.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">const</span> vertexBuffers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">shaderLocation</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// position</span>\n        <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"float32x4\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">shaderLocation</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// color</span>\n        <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"float32x4\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">arrayStride</span><span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">stepMode</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vertex\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pipelineDescriptor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">vertex</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> shaderModule<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">entryPoint</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vertex_main\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">buffers</span><span class=\"token operator\">:</span> vertexBuffers<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">fragment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> shaderModule<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">entryPoint</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fragment_main\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">targets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> navigator<span class=\"token punctuation\">.</span>gpu<span class=\"token punctuation\">.</span><span class=\"token function\">getPreferredCanvasFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">primitive</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">topology</span><span class=\"token operator\">:</span> <span class=\"token string\">\"triangle-list\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">layout</span><span class=\"token operator\">:</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> renderPipeline <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span><span class=\"token function\">createRenderPipeline</span><span class=\"token punctuation\">(</span>pipelineDescriptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://gpuweb.github.io/gpuweb/#gpurenderpipeline","title":"WebGPU"}],"query":"api.GPURenderPipeline"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.GPURenderPipeline"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The GPURenderPipeline interface of the WebGPU API represents a pipeline that controls the vertex and fragment shader stages and can be used in a GPURenderPassEncoder or GPURenderBundleEncoder.","popularity":0,"modified":"2023-04-05T13:07:54.000Z","source":{"folder":"en-us/web/api/gpurenderpipeline","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/gpurenderpipeline/index.md","last_commit_url":"https://github.com/mdn/content/commit/f53f0790a7764cc0996f891e5aec0faa3841dc83","filename":"index.md"},"short_title":"GPURenderPipeline","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/GPURenderPipeline","title":"GPURenderPipeline"}],"pageTitle":"GPURenderPipeline - Web APIs | MDN","noIndexing":false}}