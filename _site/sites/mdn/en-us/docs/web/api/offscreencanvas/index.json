{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"OffscreenCanvas","mdn_url":"/en-US/docs/Web/API/OffscreenCanvas","locale":"en-US","native":"English (US)","browserCompat":["api.OffscreenCanvas"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Canvas_API\">Canvas API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/OffscreenCanvas\" aria-current=\"page\"><code>OffscreenCanvas</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/OffscreenCanvas/OffscreenCanvas\"><code>OffscreenCanvas()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/OffscreenCanvas/height\"><code>height</code></a></li><li><a href=\"/en-US/docs/Web/API/OffscreenCanvas/width\"><code>width</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/OffscreenCanvas/convertToBlob\"><code>convertToBlob()</code></a></li><li><a href=\"/en-US/docs/Web/API/OffscreenCanvas/getContext\"><code>getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap\"><code>transferToImageBitmap()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Canvas API</summary><ol><li><a href=\"/en-US/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code></a></li><li><a href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code></a></li><li><a href=\"/en-US/docs/Web/API/createImageBitmap\"><code>createImageBitmap</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  When using the <a href=\"/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element or the <a href=\"/en-US/docs/Web/API/Canvas_API\">Canvas API</a>, rendering, animation, and user interaction usually happen on the main execution thread of a web application.\n  The computation relating to canvas animations and rendering can have a significant impact on application performance.\n</p>\n<p>\n  The <strong><code>OffscreenCanvas</code></strong> interface provides a canvas that can be rendered off screen, decoupling the DOM and the Canvas API so that the <a href=\"/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element is no longer entirely dependent on the DOM.\n  Rendering operations can also be run inside a <a href=\"/en-US/docs/Web/API/Web_Workers_API\">worker</a> context, allowing you to run some tasks in a separate thread and avoid heavy work on the main thread.\n</p>\n<p><code>OffscreenCanvas</code> is a <a href=\"/en-US/docs/Web/API/Web_Workers_API/Transferable_objects\">transferable object</a>.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/OffscreenCanvas\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"120\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"178\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      OffscreenCanvas\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"constructors","title":"Constructors","isH3":false,"content":"<dl>\n  <dt id=\"offscreencanvas\"><a href=\"/en-US/docs/Web/API/OffscreenCanvas/OffscreenCanvas\" title=\"OffscreenCanvas()\"><code>OffscreenCanvas()</code></a></dt>\n  <dd>\n    <p><code>OffscreenCanvas</code> constructor. Creates a new <code>OffscreenCanvas</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"offscreencanvas.height\"><a href=\"/en-US/docs/Web/API/OffscreenCanvas/height\"><code>OffscreenCanvas.height</code></a></dt>\n  <dd>\n    <p>The height of the offscreen canvas.</p>\n  </dd>\n  <dt id=\"offscreencanvas.width\"><a href=\"/en-US/docs/Web/API/OffscreenCanvas/width\"><code>OffscreenCanvas.width</code></a></dt>\n  <dd>\n    <p>The width of the offscreen canvas.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"offscreencanvas.getcontext\"><a href=\"/en-US/docs/Web/API/OffscreenCanvas/getContext\"><code>OffscreenCanvas.getContext()</code></a></dt>\n  <dd>\n    <p>Returns a rendering context for the offscreen canvas.</p>\n  </dd>\n  <dt id=\"offscreencanvas.converttoblob\"><a href=\"/en-US/docs/Web/API/OffscreenCanvas/convertToBlob\"><code>OffscreenCanvas.convertToBlob()</code></a></dt>\n  <dd>\n    <p>Creates a <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> object representing the image contained in the canvas.</p>\n  </dd>\n  <dt id=\"offscreencanvas.transfertoimagebitmap\"><a href=\"/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap\"><code>OffscreenCanvas.transferToImageBitmap()</code></a></dt>\n  <dd>\n    <p>Creates an <a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> object from the most recently rendered image of the <code>OffscreenCanvas</code>. See the <a href=\"/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap\" title=\"API description\"><code>API description</code></a> for important notes on managing this <a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"synchronous_display_of_frames_produced_by_an_offscreencanvas","title":"Synchronous display of frames produced by an <code>OffscreenCanvas</code>","isH3":true,"content":"<p>One way to use the <code>OffscreenCanvas</code> API is to use a rendering context that has been obtained from an <code>OffscreenCanvas</code> object to generate new frames. Once a new frame has finished rendering in this context, the <a href=\"/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap\" title=\"transferToImageBitmap()\"><code>transferToImageBitmap()</code></a> method can be called to save the most recent rendered image. This method returns an <a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> object, which can be used in a variety of Web APIs and also in a second canvas without creating a transfer copy.</p>\n<p>To display the <code>ImageBitmap</code>, you can use an <a href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code></a> context, which can be created by calling <code>canvas.getContext(\"bitmaprenderer\")</code> on a (visible) canvas element. This context only provides functionality to replace the canvas's contents with the given <code>ImageBitmap</code>. A call to <a href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext/transferFromImageBitmap\"><code>ImageBitmapRenderingContext.transferFromImageBitmap()</code></a> with the previously rendered and saved <code>ImageBitmap</code> from the OffscreenCanvas, will display the <code>ImageBitmap</code> on the canvas and transfer its ownership to the canvas. A single <code>OffscreenCanvas</code> may transfer frames into an arbitrary number of other <code>ImageBitmapRenderingContext</code> objects.</p>\n<p>Given these two <a href=\"/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> elements</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>the following code will provide the rendering using <code>OffscreenCanvas</code> as described above.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bitmaprenderer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> two <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bitmaprenderer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> offscreen <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OffscreenCanvas</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> offscreen<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Perform some drawing for the first canvas using the gl context</span>\n<span class=\"token keyword\">const</span> bitmapOne <span class=\"token operator\">=</span> offscreen<span class=\"token punctuation\">.</span><span class=\"token function\">transferToImageBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\none<span class=\"token punctuation\">.</span><span class=\"token function\">transferFromImageBitmap</span><span class=\"token punctuation\">(</span>bitmapOne<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Perform some more drawing for the second canvas</span>\n<span class=\"token keyword\">const</span> bitmapTwo <span class=\"token operator\">=</span> offscreen<span class=\"token punctuation\">.</span><span class=\"token function\">transferToImageBitmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntwo<span class=\"token punctuation\">.</span><span class=\"token function\">transferFromImageBitmap</span><span class=\"token punctuation\">(</span>bitmapTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Synchronous display of frames produced by an OffscreenCanvas"}},{"type":"prose","value":{"id":"asynchronous_display_of_frames_produced_by_an_offscreencanvas","title":"Asynchronous display of frames produced by an <code>OffscreenCanvas</code>","isH3":true,"content":"<p>Another way to use the <code>OffscreenCanvas</code> API, is to call <a href=\"/en-US/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen\" title=\"transferControlToOffscreen()\"><code>transferControlToOffscreen()</code></a> on a <a href=\"/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element, either on a <a href=\"/en-US/docs/Web/API/Web_Workers_API\">worker</a> or the main thread, which will return an <code>OffscreenCanvas</code> object from an <a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> object from the main thread. Calling <a href=\"/en-US/docs/Web/API/OffscreenCanvas/getContext\" title=\"getContext()\"><code>getContext()</code></a> will then obtain a rendering context from that <code>OffscreenCanvas</code>.</p>\n<p>The <code>main.js</code> script (main thread) may look like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> htmlCanvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> offscreen <span class=\"token operator\">=</span> htmlCanvas<span class=\"token punctuation\">.</span><span class=\"token function\">transferControlToOffscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"offscreencanvas.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nworker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">canvas</span><span class=\"token operator\">:</span> offscreen <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>offscreen<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>While the <code>offscreencanvas.js</code> script (worker thread) can look like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Perform some drawing using the gl context</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>It's also possible to use <a href=\"/en-US/docs/Web/API/window/requestAnimationFrame\" title=\"requestAnimationFrame()\"><code>requestAnimationFrame()</code></a> in workers:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Perform some drawing using the gl context</span>\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>For a full example, see the <a href=\"https://github.com/mdn/dom-examples/tree/main/web-workers/offscreen-canvas-worker\" class=\"external\" target=\"_blank\">OffscreenCanvas example source</a> on GitHub or run the <a href=\"https://mdn.github.io/dom-examples/web-workers/offscreen-canvas-worker/\" class=\"external\" target=\"_blank\">OffscreenCanvas example live</a>.</p>","titleAsText":"Asynchronous display of frames produced by an OffscreenCanvas"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/canvas.html#the-offscreencanvas-interface","title":"HTML Standard"}],"query":"api.OffscreenCanvas"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.OffscreenCanvas"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/OffscreenCanvasRenderingContext2D\"><code>OffscreenCanvasRenderingContext2D</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen\"><code>HTMLCanvasElement.transferControlToOffscreen()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/window/requestAnimationFrame\" title=\"requestAnimationFrame()\"><code>requestAnimationFrame()</code></a></li>\n  <li><a href=\"https://hacks.mozilla.org/2016/01/webgl-off-the-main-thread/\" class=\"external\" target=\"_blank\">WebGL Off the Main Thread – Mozilla Hacks</a> (2016)</li>\n</ul>"}}],"toc":[{"text":"Constructors","id":"constructors"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"When using the <canvas> element or the Canvas API, rendering, animation, and user interaction usually happen on the main execution thread of a web application.\n  The computation relating to canvas animations and rendering can have a significant impact on application performance.","popularity":0.0226,"modified":"2023-07-20T22:26:32.000Z","source":{"folder":"en-us/web/api/offscreencanvas","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/offscreencanvas/index.md","last_commit_url":"https://github.com/mdn/content/commit/a38499775d59434107e9b1014a1cb5009eecc078","filename":"index.md"},"short_title":"OffscreenCanvas","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/OffscreenCanvas","title":"OffscreenCanvas"}],"pageTitle":"OffscreenCanvas - Web APIs | MDN","noIndexing":false}}