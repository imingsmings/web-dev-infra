{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"VideoEncoder: encode() method","mdn_url":"/en-US/docs/Web/API/VideoEncoder/encode","locale":"en-US","native":"English (US)","browserCompat":["api.VideoEncoder.encode"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebCodecs_API\">WebCodecs API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/VideoEncoder/VideoEncoder\"><code>VideoEncoder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/VideoEncoder/encodeQueueSize\"><code>encodeQueueSize</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoEncoder/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Static methods</summary><ol><li><a href=\"/en-US/docs/Web/API/VideoEncoder/isConfigSupported_static\"><code>isConfigSupported()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/VideoEncoder/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoEncoder/configure\"><code>configure()</code></a></li><li><em><code>encode()</code> </em></li><li><a href=\"/en-US/docs/Web/API/VideoEncoder/flush\"><code>flush()</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoEncoder/reset\"><code>reset()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/VideoEncoder/dequeue_event\"><code>dequeue</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebCodecs API</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioData\"><code>AudioData</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDecoder\"><code>AudioDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioEncoder\"><code>AudioEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/EncodedAudioChunk\"><code>EncodedAudioChunk</code></a></li><li><a href=\"/en-US/docs/Web/API/EncodedVideoChunk\"><code>EncodedVideoChunk</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageDecoder\"><code>ImageDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageTrack\"><code>ImageTrack</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageTrackList\"><code>ImageTrackList</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoColorSpace\"><code>VideoColorSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoDecoder\"><code>VideoDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>\n  The <strong><code>encode()</code></strong> method of the <a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a> interface asynchronously encodes a <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a>.\n  Encoded data (<a href=\"/en-US/docs/Web/API/EncodedVideoChunk\"><code>EncodedVideoChunk</code></a>) or an error will eventually be returned via the callbacks provided to the <a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a> constructor.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>\n<span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"frame\"><a href=\"#frame\"><code>frame</code></a></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a> object.</p>\n  </dd>\n  <dt id=\"options\"><a href=\"#options\"><code>options</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object containing the following members:</p>\n    <dl>\n      <dt id=\"keyframe\"><a href=\"#keyframe\"><code>keyFrame</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>boolean</code></a>, defaulting to <code>false</code> giving the user agent flexibility to decide if this frame should be encoded as a key frame. If <code>true</code> this indicates that the given frame must be encoded as a key frame.</p>\n      </dd>\n      <dt id=\"vp9\"><a href=\"#vp9\"><code>vp9</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>Encode options for the <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs#vp9\">VP9</a> codec.</p>\n        <dl>\n          <dt id=\"quantizer\"><a href=\"#quantizer\"><code>quantizer</code></a></dt>\n          <dd>\n            <p>Frame quantizer value 0 to 63. Only effective if <a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a> was configured with <code>quantizer</code> bitrate mode.</p>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"av1\"><a href=\"#av1\"><code>av1</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>Encode options for the <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs#av1\">AV1</a> codec.</p>\n        <dl>\n          <dt id=\"quantizer_2\"><a href=\"#quantizer_2\"><code>quantizer</code></a></dt>\n          <dd>\n            <p>Frame quantizer value 0 to 63. Only effective if <a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a> was configured with <code>quantizer</code> bitrate mode.</p>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"avc\"><a href=\"#avc\"><code>avc</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>Encode options for the <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs#avc_h.264\">AVC (H.264)</a> codec.</p>\n        <dl>\n          <dt id=\"quantizer_3\"><a href=\"#quantizer_3\"><code>quantizer</code></a></dt>\n          <dd>\n            <p>Frame quantizer value 0 to 51. Only effective if <a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a> was configured with <code>quantizer</code> bitrate mode.</p>\n          </dd>\n        </dl>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><a href=\"#invalidstateerror\"><code>InvalidStateError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the <a href=\"/en-US/docs/Web/API/VideoEncoder/state\" title=\"state\"><code>state</code></a> is not <code>\"configured\"</code>.</p>\n  </dd>\n  <dt id=\"dataerror\"><a href=\"#dataerror\"><code>DataError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the <code>chunk</code> cannot be decoded due to relying on other frames for decoding.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the following example <code>encode</code> is passed a <code>VideoFrame</code>, and the options parameter indicating that this frame should be considered a keyframe.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyFrame</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Setting per-frame QP value for encoding individual frames.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VideoEncoder</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> encoderConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">codec</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vp09.00.10.08\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">bitrateMode</span><span class=\"token operator\">:</span> <span class=\"token string\">\"quantizer\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">framerate</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">latencyMode</span><span class=\"token operator\">:</span> <span class=\"token string\">\"realtime\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nencoder<span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>encoderConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> encodeOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyFrame</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> qp <span class=\"token operator\">=</span> <span class=\"token function\">calculateQp</span><span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"vp09\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  encodeOptions<span class=\"token punctuation\">.</span>vp9 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">quantizer</span><span class=\"token operator\">:</span> qp <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"av01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  encodeOptions<span class=\"token punctuation\">.</span>av1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">quantizer</span><span class=\"token operator\">:</span> qp <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"avc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  encodeOptions<span class=\"token punctuation\">.</span>avc <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">quantizer</span><span class=\"token operator\">:</span> qp <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nencoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> encodeOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webcodecs/#dom-videoencoder-encode","title":"WebCodecs"}],"query":"api.VideoEncoder.encode"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.VideoEncoder.encode"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The encode() method of the VideoEncoder interface asynchronously encodes a VideoFrame.\n  Encoded data (EncodedVideoChunk) or an error will eventually be returned via the callbacks provided to the VideoEncoder constructor.","popularity":0.0009,"modified":"2023-09-28T23:31:33.000Z","source":{"folder":"en-us/web/api/videoencoder/encode","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/videoencoder/encode/index.md","last_commit_url":"https://github.com/mdn/content/commit/5288d0396f89080afbc52d1c890cdaa0543a6685","filename":"index.md"},"short_title":"encode()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/VideoEncoder","title":"VideoEncoder"},{"uri":"/en-US/docs/Web/API/VideoEncoder/encode","title":"encode()"}],"pageTitle":"VideoEncoder: encode() method - Web APIs | MDN","noIndexing":false}}