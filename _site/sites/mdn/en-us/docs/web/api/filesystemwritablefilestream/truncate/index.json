{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"FileSystemWritableFileStream: truncate() method","mdn_url":"/en-US/docs/Web/API/FileSystemWritableFileStream/truncate","locale":"en-US","native":"English (US)","browserCompat":["api.FileSystemWritableFileStream.truncate"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/File_System_API\">File System API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream/seek\"><code>seek()</code></a></li><li><em><code>truncate()</code> </em></li><li><a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream/write\"><code>write()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for File System API</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItem/getAsFileSystemHandle\"><code>DataTransferItem.getAsFileSystemHandle()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle\"><code>FileSystemSyncAccessHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/StorageManager/getDirectory\"><code>StorageManager.getDirectory()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showDirectoryPicker\"><code>window.showDirectoryPicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showOpenFilePicker\"><code>window.showOpenFilePicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showSaveFilePicker\"><code>window.showSaveFilePicker()</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>truncate()</code></strong> method of the <a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a> interface resizes the file associated with the stream to the specified size in bytes.</p>\n<p>If the size specified is larger than the current file size the file is padded with <code>0x00</code> bytes.</p>\n<p>\n  The file cursor is also updated when <code>truncate()</code> is called.\n  If the offset is smaller than the size, it remains unchanged.\n  If the offset is larger than size, the offset is set to that size.\n  This ensures that subsequent writes do not error.\n</p>\n<p>\n  No changes are written to the actual file on disk until the stream has been closed.\n  Changes are typically written to a temporary file instead.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">truncate</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"size\"><a href=\"#size\"><code>size</code></a></dt>\n  <dd>\n    <p>A number specifying the number of bytes to resize the stream to.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that returns <code>undefined</code>.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"notallowederror\"><a href=\"#notallowederror\"><code>NotAllowedError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if <a href=\"/en-US/docs/Web/API/PermissionStatus/state\"><code>PermissionStatus.state</code></a> is not <code>granted</code>.</p>\n  </dd>\n  <dt id=\"quotaexceedederror\"><a href=\"#quotaexceedederror\"><code>QuotaExceededError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the new size of the file is larger than the original size of the file, and exceeds the browser's <a href=\"/en-US/docs/Web/API/Storage_API/Storage_quotas_and_eviction_criteria\">storage quota</a>.</p>\n  </dd>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown if <code>size</code> is not a number or not defined.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following asynchronous function opens the 'Save File' picker, which returns a <a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a> once a file is selected. From this, a writable stream is created using the <a href=\"/en-US/docs/Web/API/FileSystemFileHandle/createWritable\"><code>FileSystemFileHandle.createWritable()</code></a> method.</p>\n<p>Next, we write to the stream:</p>\n<ol>\n  <li>A text string is written to the stream.</li>\n  <li>The <code>truncate()</code> method is used to resize the file to 8 bytes.</li>\n  <li>A second text string is written to the start of the stream, overwriting the first write.</li>\n</ol>\n<p>The stream is then closed.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">saveFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// create a new handle</span>\n    <span class=\"token keyword\">const</span> newHandle <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">showSaveFilePicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// create a FileSystemWritableFileStream to write to</span>\n    <span class=\"token keyword\">const</span> writableStream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> newHandle<span class=\"token punctuation\">.</span><span class=\"token function\">createWritable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// write our file</span>\n    <span class=\"token keyword\">await</span> writableStream<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is my first file content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> writableStream<span class=\"token punctuation\">.</span><span class=\"token function\">truncate</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> writableStream<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my second file content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// close the file and write the contents to disk.</span>\n    <span class=\"token keyword\">await</span> writableStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>If you run the above function and then open the resulting file created on disk, you should see the text \"This is my second file content\".</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fs.spec.whatwg.org/#api-filesystemwritablefilestream-truncate","title":"File System Standard"}],"query":"api.FileSystemWritableFileStream.truncate"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.FileSystemWritableFileStream.truncate"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/File_System_API\">File System API</a></li>\n  <li><a href=\"https://developer.chrome.com/articles/file-system-access/\" class=\"external\" target=\"_blank\">The File System Access API: simplifying access to local files</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The truncate() method of the FileSystemWritableFileStream interface resizes the file associated with the stream to the specified size in bytes.","popularity":0,"modified":"2023-11-09T10:05:36.000Z","source":{"folder":"en-us/web/api/filesystemwritablefilestream/truncate","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/filesystemwritablefilestream/truncate/index.md","last_commit_url":"https://github.com/mdn/content/commit/43c3f6dd0d20cc8064252904a8bf9c3389cdb052","filename":"index.md"},"short_title":"truncate()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/FileSystemWritableFileStream","title":"FileSystemWritableFileStream"},{"uri":"/en-US/docs/Web/API/FileSystemWritableFileStream/truncate","title":"truncate()"}],"pageTitle":"FileSystemWritableFileStream: truncate() method - Web APIs | MDN","noIndexing":false}}