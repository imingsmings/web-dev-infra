{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"VirtualKeyboard","mdn_url":"/en-US/docs/Web/API/VirtualKeyboard","locale":"en-US","native":"English (US)","browserCompat":["api.VirtualKeyboard"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/VirtualKeyboard_API\">VirtualKeyboard API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/VirtualKeyboard\" aria-current=\"page\"><code>VirtualKeyboard</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/VirtualKeyboard/boundingRect\"><code>boundingRect</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/VirtualKeyboard/overlaysContent\"><code>overlaysContent</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/VirtualKeyboard/hide\"><code>hide()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/VirtualKeyboard/show\"><code>show()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/VirtualKeyboard/geometrychange_event\"><code>geometrychange</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for VirtualKeyboard API</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/virtualKeyboard\"><code>Navigator.virtualKeyboard</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div><div class=\"notecard secure\" id=\"sect2\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>VirtualKeyboard</code></strong> interface of the <a href=\"/en-US/docs/Web/API/VirtualKeyboard_API\">VirtualKeyboard API</a> is useful on devices that have on-screen virtual keyboards, such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.</p>\n<p>The <code>VirtualKeyboard</code> interface makes it possible to opt out of the automatic way browsers handle on-screen virtual keyboards by reducing the height of the viewport to make room for the virtual keyboard. You can prevent the browser from changing the size of the viewport, detect the position and size of the virtual keyboard — adapting the layout of your web page as a follow-up — and programmatically show or hide the virtual keyboard.</p>\n<p>You access the <code>VirtualKeyboard</code> interface by using <a href=\"/en-US/docs/Web/API/Navigator/virtualKeyboard\"><code>navigator.virtualKeyboard</code></a>.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/VirtualKeyboard\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"120\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"178\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      VirtualKeyboard\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p><em>The <code>VirtualKeyboard</code> interface inherits properties from its parent, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"virtualkeyboard.boundingrect\"><a href=\"/en-US/docs/Web/API/VirtualKeyboard/boundingRect\"><code>VirtualKeyboard.boundingRect</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a> that describes the geometry of the virtual keyboard.</p>\n  </dd>\n  <dt id=\"virtualkeyboard.overlayscontent\"><a href=\"/en-US/docs/Web/API/VirtualKeyboard/overlaysContent\"><code>VirtualKeyboard.overlaysContent</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that defines whether the browser should stop handling the on-screen virtual keyboard.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<p><em>The <code>VirtualKeyboard</code> interface inherits methods from its parent, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"virtualkeyboard.show\"><a href=\"/en-US/docs/Web/API/VirtualKeyboard/show\"><code>VirtualKeyboard.show()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Show the virtual keyboard.</p>\n  </dd>\n  <dt id=\"virtualkeyboard.hide\"><a href=\"/en-US/docs/Web/API/VirtualKeyboard/hide\"><code>VirtualKeyboard.hide()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Hide the virtual keyboard.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<dl>\n  <dt id=\"geometrychange\"><a href=\"/en-US/docs/Web/API/VirtualKeyboard/geometrychange_event\" title=\"geometrychange\"><code>geometrychange</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Fires when the geometry of the on-screen virtual keyboard changes, which happens when the virtual keyboard appears or disappears.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>The following example demonstrates how to opt out of the automatic virtual keyboard behavior, and detect the geometry of the virtual keyboard in the web page:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"virtualKeyboard\"</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span>virtualKeyboard<span class=\"token punctuation\">.</span>overlaysContent <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  navigator<span class=\"token punctuation\">.</span>virtualKeyboard<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"geometrychange\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/virtual-keyboard/#the-virtualkeyboard-interface","title":"VirtualKeyboard API"}],"query":"api.VirtualKeyboard"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.VirtualKeyboard"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/VirtualKeyboard_API\" title=\"The VirtualKeyboard API\">The VirtualKeyboard API</a></li>\n  <li><a href=\"https://developer.chrome.com/docs/web-platform/virtual-keyboard/\" class=\"external\" target=\"_blank\">Full control with the VirtualKeyboard API</a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Events","id":"events"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The VirtualKeyboard interface of the VirtualKeyboard API is useful on devices that have on-screen virtual keyboards, such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.","popularity":0.0015,"modified":"2023-10-30T09:05:18.000Z","source":{"folder":"en-us/web/api/virtualkeyboard","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/virtualkeyboard/index.md","last_commit_url":"https://github.com/mdn/content/commit/5cdb341c723de0edb273769555d9124266d9c851","filename":"index.md"},"short_title":"VirtualKeyboard","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/VirtualKeyboard","title":"VirtualKeyboard"}],"pageTitle":"VirtualKeyboard - Web APIs | MDN","noIndexing":false}}