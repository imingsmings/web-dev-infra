{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebTransportBidirectionalStream","mdn_url":"/en-US/docs/Web/API/WebTransportBidirectionalStream","locale":"en-US","native":"English (US)","browserCompat":["api.WebTransportBidirectionalStream"],"baseline":{"baseline":false,"support":{}},"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebTransport_API\">WebTransport API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\" aria-current=\"page\"><code>WebTransportBidirectionalStream</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream/readable\"><code>readable</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream/writable\"><code>writable</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebTransport API</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport\"><code>WebTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportDatagramDuplexStream\"><code>WebTransportDatagramDuplexStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportError\"><code>WebTransportError</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportReceiveStream\"><code>WebTransportReceiveStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportSendStream\"><code>WebTransportSendStream</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>WebTransportBidirectionalStream</code></strong> interface of the <a href=\"/en-US/docs/Web/API/WebTransport_API\" title=\"WebTransport API\">WebTransport API</a> represents a bidirectional stream created by a server or a client that can be used for reliable transport. Provides access to a <a href=\"/en-US/docs/Web/API/WebTransportReceiveStream\"><code>WebTransportReceiveStream</code></a> for reading incoming data, and a <a href=\"/en-US/docs/Web/API/WebTransportSendStream\"><code>WebTransportSendStream</code></a> for writing outgoing data.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"readable\"><a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream/readable\" title=\"readable\"><code>readable</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/WebTransportReceiveStream\"><code>WebTransportReceiveStream</code></a> instance that can be used to read incoming data.</p>\n  </dd>\n  <dt id=\"writable\"><a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream/writable\" title=\"writable\"><code>writable</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/WebTransportSendStream\"><code>WebTransportSendStream</code></a> instance that can be used to write outgoing data.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"bidirectional_transmission_initiated_by_the_user_agent","title":"Bidirectional transmission initiated by the user agent","isH3":true,"content":"<p>\n  To open a bidirectional stream from a user agent, you use the <a href=\"/en-US/docs/Web/API/WebTransport/createBidirectionalStream\"><code>WebTransport.createBidirectionalStream()</code></a> method to get a reference to a <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\" aria-current=\"page\"><code>WebTransportBidirectionalStream</code></a>. The <code>readable</code> and <code>writable</code> properties return references to <code>WebTransportReceiveStream</code> and <code>WebTransportSendStream</code> instances.\n  These inherit from <code>ReadableStream</code> and <code>WebTransportReceiveStream</code> respectively, and can be used to read from and write to the server.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setUpBidirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> transport<span class=\"token punctuation\">.</span><span class=\"token function\">createBidirectionalStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// stream is a WebTransportBidirectionalStream</span>\n  <span class=\"token comment\">// stream.readable is a WebTransportReceiveStream</span>\n  <span class=\"token keyword\">const</span> readable <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span>readable<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// stream.writable is a WebTransportSendStream</span>\n  <span class=\"token keyword\">const</span> writable <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span>writable<span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Reading from the <code>WebTransportReceiveStream</code> can be done in the same way as you would read a <code>ReadableStream</code>:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">readable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> readable<span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">,</span> done <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// value is a Uint8Array.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>And writing to the <code>WebTransportSendStream</code> can be done like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">writable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> writable<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"bidirectional_transmission_initiated_by_the_server","title":"Bidirectional transmission initiated by the server","isH3":true,"content":"<p>If the server opens a bidirectional stream to transmit data to and receive it from the client, this can be accessed via the <a href=\"/en-US/docs/Web/API/WebTransport/incomingBidirectionalStreams\"><code>WebTransport.incomingBidirectionalStreams</code></a> property, which returns a <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> of <code>WebTransportBidirectionalStream</code> objects. Each one can be used to read and write <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a> instances as shown above. However, you need an initial function to read the bidirectional stream in the first place:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">receiveBidirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> bds <span class=\"token operator\">=</span> transport<span class=\"token punctuation\">.</span>incomingBidirectionalStreams<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> bds<span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> done<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// value is an instance of WebTransportBidirectionalStream</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>readable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>writable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webtransport/#webtransportbidirectionalstream","title":"WebTransport"}],"query":"api.WebTransportBidirectionalStream"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WebTransportBidirectionalStream"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://developer.chrome.com/articles/webtransport/\" class=\"external\" target=\"_blank\">Using WebTransport</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API\" title=\"WebSockets API\">WebSockets API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Streams_API\" title=\"Streams API\">Streams API</a></li>\n  <li><a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/\" class=\"external\" target=\"_blank\">WebTransport over HTTP/3</a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The WebTransportBidirectionalStream interface of the WebTransport API represents a bidirectional stream created by a server or a client that can be used for reliable transport. Provides access to a WebTransportReceiveStream for reading incoming data, and a WebTransportSendStream for writing outgoing data.","popularity":0.0005,"modified":"2023-12-07T22:31:41.000Z","source":{"folder":"en-us/web/api/webtransportbidirectionalstream","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/webtransportbidirectionalstream/index.md","last_commit_url":"https://github.com/mdn/content/commit/e47698f3649a14011e8a41fc681dfe965d1c58c5","filename":"index.md"},"short_title":"WebTransportBidirectionalStream","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebTransportBidirectionalStream","title":"WebTransportBidirectionalStream"}],"pageTitle":"WebTransportBidirectionalStream - Web APIs | MDN","noIndexing":false}}