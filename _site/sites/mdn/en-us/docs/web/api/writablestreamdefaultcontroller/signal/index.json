{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WritableStreamDefaultController: signal property","mdn_url":"/en-US/docs/Web/API/WritableStreamDefaultController/signal","locale":"en-US","native":"English (US)","browserCompat":["api.WritableStreamDefaultController.signal"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Streams_API\">Streams API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><em><code>signal</code> </em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultController/error\"><code>error()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Streams</summary><ol><li><a href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code></a></li><li><a href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/body\"><code>Response.body</code></a></li><li><a href=\"/en-US/docs/Web/API/TransformStream\"><code>TransformStream</code></a></li><li><a href=\"/en-US/docs/Web/API/TransformStreamDefaultController\"><code>TransformStreamDefaultController</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a></li><li><a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The read-only <strong><code>signal</code></strong> property of the <a href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a> interface returns the <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> associated with the controller.</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>An <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> object.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"aborting_a_long_write_operation","title":"Aborting a long write operation","isH3":true,"content":"<p>In this example, we simulate a slow operation using a local sink: We do nothing when some data is written but to wait for a second. This gives us enough time to call the <code>writer.abort()</code> method and to immediately reject the promise.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> writingStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WritableStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Define the slow local sink to simulate a long operation</span>\n  <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">controller</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abort\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">.</span>reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Do nothing but wait with the data: it is a local sink</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Timeout to simulate a slow operation</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Perform the write</span>\n<span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> writingStream<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwriter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lorem ipsum test data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Abort the write manually</span>\n<span class=\"token keyword\">await</span> writer<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Manual abort!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"transferring_the_abortsignal_to_the_underlying_layer","title":"Transferring the <code>AbortSignal</code> to the underlying layer","isH3":true,"content":"<p>In this example, we use the <a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a> to actually send the message to a server. The Fetch API also support <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a>: It is possible to use the same object for both the <code>fetch</code> method and the <a href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> endpoint <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.example.com/api\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Fake URL for example purpose</span>\n<span class=\"token keyword\">const</span> writingStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WritableStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chunk<span class=\"token punctuation\">,</span> controller</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Write to the server using the Fetch API</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>endpoint<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">,</span> <span class=\"token comment\">// We use the same object for both fetch and controller</span>\n      <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> chunk<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Perform the write</span>\n<span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> writingStream<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwriter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lorem ipsum test data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Abort the write manually</span>\n<span class=\"token keyword\">await</span> writer<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Manual abort!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Transferring the AbortSignal to the underlying layer"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://streams.spec.whatwg.org/#ref-for-ws-default-controller-signal①","title":"Streams Standard"}],"query":"api.WritableStreamDefaultController.signal"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WritableStreamDefaultController.signal"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The read-only signal property of the WritableStreamDefaultController interface returns the AbortSignal associated with the controller.","popularity":0,"modified":"2023-07-19T10:31:50.000Z","source":{"folder":"en-us/web/api/writablestreamdefaultcontroller/signal","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/writablestreamdefaultcontroller/signal/index.md","last_commit_url":"https://github.com/mdn/content/commit/e34bb4838ec2cd80afa7f37c190bf1c2750fe2a1","filename":"index.md"},"short_title":"signal","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WritableStreamDefaultController","title":"WritableStreamDefaultController"},{"uri":"/en-US/docs/Web/API/WritableStreamDefaultController/signal","title":"signal"}],"pageTitle":"WritableStreamDefaultController: signal property - Web APIs | MDN","noIndexing":false}}