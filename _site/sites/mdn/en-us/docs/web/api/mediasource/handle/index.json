{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaSource: handle property","mdn_url":"/en-US/docs/Web/API/MediaSource/handle","locale":"en-US","native":"English (US)","browserCompat":["api.MediaSource.handle"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaSource/MediaSource\"><code>MediaSource()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Static properties</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaSource/canConstructInDedicatedWorker_static\"><code>canConstructInDedicatedWorker</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaSource/activeSourceBuffers\"><code>activeSourceBuffers</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource/duration\"><code>duration</code></a></li><li><em><code>handle</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li><a href=\"/en-US/docs/Web/API/MediaSource/readyState\"><code>readyState</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource/sourceBuffers\"><code>sourceBuffers</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Static methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaSource/isTypeSupported_static\"><code>isTypeSupported()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaSource/addSourceBuffer\"><code>addSourceBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource/clearLiveSeekableRange\"><code>clearLiveSeekableRange()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource/endOfStream\"><code>endOfStream()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource/removeSourceBuffer\"><code>removeSourceBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\"><code>setLiveSeekableRange()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Media Source Extensions</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSourceHandle\"><code>MediaSourceHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>TextTrack.sourceBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoTrack/sourceBuffer\"><code>VideoTrack.sourceBuffer</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>handle</code></strong> read-only property of the <a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a> interface returns a <a href=\"/en-US/docs/Web/API/MediaSourceHandle\"><code>MediaSourceHandle</code></a> object, a proxy for the <code>MediaSource</code> that can be transferred from a dedicated worker back to the main thread and attached to a media element via its <a href=\"/en-US/docs/Web/API/HTMLMediaElement/srcObject\"><code>HTMLMediaElement.srcObject</code></a> property.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <code>handle</code> is only visible on <a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a> instances inside dedicated workers.</p>\n</div>\n<p>Each <code>MediaSource</code> object created inside a dedicated worker has its own distinct <code>MediaSourceHandle</code>. The <code>handle</code> getter will always return the <code>MediaSourceHandle</code> instance specific to the associated dedicated worker <code>MediaSource</code> instance. If the handle has already been transferred to the main thread using <a href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope/postMessage\" title=\"postMessage()\"><code>postMessage()</code></a>, the handle instance in the worker is technically detached and can't be transferred again.</p><div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A <a href=\"/en-US/docs/Web/API/MediaSourceHandle\"><code>MediaSourceHandle</code></a> object instance.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The <code>handle</code> property can be accessed inside a dedicated worker and the resulting <a href=\"/en-US/docs/Web/API/MediaSourceHandle\"><code>MediaSourceHandle</code></a> object is then transferred over to the thread that created the worker (in this case the main thread) via a <a href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope/postMessage\" title=\"postMessage()\"><code>postMessage()</code></a> call:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Inside dedicated worker</span>\n<span class=\"token keyword\">let</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> handle <span class=\"token operator\">=</span> mediaSource<span class=\"token punctuation\">.</span>handle<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Transfer the handle to the context that created the worker</span>\n<span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">arg</span><span class=\"token operator\">:</span> handle <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>handle<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sourceopen\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Await sourceopen on MediaSource before creating SourceBuffers</span>\n  <span class=\"token comment\">// and populating them with fetched media â€” MediaSource won't</span>\n  <span class=\"token comment\">// accept creation of SourceBuffers until it is attached to the</span>\n  <span class=\"token comment\">// HTMLMediaElement and its readyState is \"open\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Over in the main thread, we receive the handle via a <a href=\"/en-US/docs/Web/API/Worker/message_event\" title=\"message\"><code>message</code></a> event handler, attach it to a <a href=\"/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> via its <a href=\"/en-US/docs/Web/API/HTMLMediaElement/srcObject\"><code>HTMLMediaElement.srcObject</code></a> property, and <a href=\"/en-US/docs/Web/API/HTMLMediaElement/play\" title=\"play\"><code>play</code></a> the video:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>worker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> mediaSourceHandle <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>arg<span class=\"token punctuation\">;</span>\n  video<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> mediaSourceHandle<span class=\"token punctuation\">;</span>\n  video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> <a href=\"/en-US/docs/Web/API/MediaSourceHandle\"><code>MediaSourceHandle</code></a>s cannot be successfully transferred into or via a shared worker or service worker.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/media-source/#dom-mediasource-handle","title":"Media Source Extensionsâ„¢"}],"query":"api.MediaSource.handle"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaSource.handle"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://wolenetz.github.io/mse-in-workers-demo/mse-in-workers-demo.html\" class=\"external\" target=\"_blank\">MSE-in-Workers Demo by Matt Wolenetz</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\" title=\"Media Source Extensions API\">Media Source Extensions API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The handle read-only property of the MediaSource interface returns a MediaSourceHandle object, a proxy for the MediaSource that can be transferred from a dedicated worker back to the main thread and attached to a media element via its HTMLMediaElement.srcObject property.","popularity":0,"modified":"2023-04-07T06:12:25.000Z","source":{"folder":"en-us/web/api/mediasource/handle","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediasource/handle/index.md","last_commit_url":"https://github.com/mdn/content/commit/84f8672adab0fdb783d02676c42a2b7ae16b3606","filename":"index.md"},"short_title":"handle","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaSource","title":"MediaSource"},{"uri":"/en-US/docs/Web/API/MediaSource/handle","title":"handle"}],"pageTitle":"MediaSource: handle property - Web APIs | MDN","noIndexing":false}}