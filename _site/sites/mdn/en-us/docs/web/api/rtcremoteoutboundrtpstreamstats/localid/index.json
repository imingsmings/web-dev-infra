{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/RTCSentRtpStreamStats/packetsSent does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/RTCSentRtpStreamStats/packetsSent does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":8,"line":150,"column":138,"macroName":"domxref","sourceContext":"  |     We then divide by 1000 to convert the result from milliseconds to seconds.\n  |   </li>\n> |   <li>We compute the number of packets sent during this interval—<code>packetsSent</code>—by subtracting the two reports' values for the {{domxref(\"RTCSentRtpStreamStats.packetsSent\", \"packetsSent\")}} property.</li>\n                                                                                                                                             ^\n  |   <li>Similarly, the number of bytes sent during this interval—<code>bytesSent</code>—is calculated by subtracting the starting statistics object's {{domxref(\"RTCSentRtpStreamStats.bytesSent\", \"bytesSent\")}} property from that of the ending statistics.</li>\n  |   <li>The number of frames decoded during this interval—<code>framesDecoded</code>—is determined by subtracting <code>startRecord</code>'s {{domxref(\"RTCInboundRtpStreamStats.framesDecoded\", \"framesDecoded\")}} from <code>endRecord.framesDecoded</code>.</li>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/rtcremoteoutboundrtpstreamstats/localid/index.md","macroSource":"{{domxref(\"RTCSentRtpStreamStats.packetsSent\", \"packetsSent\")}}"},{"id":"macro1","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/RTCSentRtpStreamStats/bytesSent does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/RTCSentRtpStreamStats/bytesSent does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":8,"line":151,"column":149,"macroName":"domxref","sourceContext":"  |   </li>\n  |   <li>We compute the number of packets sent during this interval—<code>packetsSent</code>—by subtracting the two reports' values for the {{domxref(\"RTCSentRtpStreamStats.packetsSent\", \"packetsSent\")}} property.</li>\n> |   <li>Similarly, the number of bytes sent during this interval—<code>bytesSent</code>—is calculated by subtracting the starting statistics object's {{domxref(\"RTCSentRtpStreamStats.bytesSent\", \"bytesSent\")}} property from that of the ending statistics.</li>\n                                                                                                                                                        ^\n  |   <li>The number of frames decoded during this interval—<code>framesDecoded</code>—is determined by subtracting <code>startRecord</code>'s {{domxref(\"RTCInboundRtpStreamStats.framesDecoded\", \"framesDecoded\")}} from <code>endRecord.framesDecoded</code>.</li>\n  |   <li>Finally, the frame rate over the elapsed time span is calculated by dividing <code>framesDecoded</code> by <code>elapsedTime</code>.</li>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/rtcremoteoutboundrtpstreamstats/localid/index.md","macroSource":"{{domxref(\"RTCSentRtpStreamStats.bytesSent\", \"bytesSent\")}}"}]},"title":"RTCRemoteOutboundRtpStreamStats: localId property","mdn_url":"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/localId","locale":"en-US","native":"English (US)","browserCompat":["api.RTCStatsReport.type_remote-outbound-rtp.localId"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/codecId\"><code>codecId</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/id\"><code>id</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/kind\"><code>kind</code></a></li><li><em><code>localId</code> </em></li><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/remoteTimestamp\"><code>remoteTimestamp</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/ssrc\"><code>ssrc</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/timestamp\"><code>timestamp</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/transportId\"><code>transportId</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedAudioFrame\"><code>RTCEncodedAudioFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransformer\"><code>RTCRtpScriptTransformer</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/transform\"><code>RTCRtpSender.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTransformEvent\"><code>RTCTransformEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a> dictionary's <strong><code>localId</code></strong> property is a string which can be used to identify the <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> object whose <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId\" title=\"remoteId\"><code>remoteId</code></a> matches this value.</p>\n<p>Together, these two objects provide statistics about the inbound and outbound sides of the same synchronization source (SSRC).</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A string which can be compared to the value of an <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> object's <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId\" title=\"remoteId\"><code>remoteId</code></a> property to see if the two represent statistics for each of the two sides of the same set of data received by the local peer.</p>"}},{"type":"prose","value":{"id":"usage_notes","title":"Usage notes","isH3":false,"content":"<p>\n  You can think of the local and remote views of the same RTP stream as pairs, each of which has a reference back to the other one.\n  Thus, if an <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> includes an <code>remote-outbound-rtp</code> statistics object (of type <code>RTCRemoteOutboundRtpStreamStats</code>), it should also have a corresponding <code>inbound-rtp</code> object.\n  Both of these provide information about the same batch of packets being transmitted from the remote peer to the local device.\n  The difference is\n  that <code>remote-outbound-rtp</code> describes statistics about the transmission(s) from the perspective of the remote peer, while <code>inbound-rtp</code> offers statistics about the incoming data from the local peer's perspective.\n</p>\n<p>You can <a href=\"#try_it_and_fork_it\">examine, try out, and experiment</a> with this example on Glitch.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In this example, we have a pair of functions: the first, <code>networkTestStart()</code>, captures an initial report, and the second, <code>networkTestStop()</code>, captures a second report.\n  The second function uses the two reports to output some information about the network conditions.\n</p>"}},{"type":"prose","value":{"id":"networkteststart","title":"networkTestStart()","isH3":true,"content":"<p>This function calls the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\" title=\"getStats()\"><code>getStats()</code></a> to request an <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> and store it in the variable <code>startReport</code>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> startReport<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">networkTestStart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    startReport <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">getStats</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Given an <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, <code>pc</code>, this calls its <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\" title=\"getStats()\"><code>getStats()</code></a> method to obtain a statistics report object, which it stores in <code>startReport</code> for use once the end-of-test data has been collected by <code>networkTestStop()</code>.</p>"}},{"type":"prose","value":{"id":"networkteststop","title":"networkTestStop()","isH3":true,"content":"<p>The <code>networkTestStop()</code> function obtains a second report, <code>endReport</code>, then computes and outputs the results.</p>\n<h4 id=\"finding_paired_statistics\">Finding paired statistics</h4>\n<p>\n  Each statistics record of <a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/type\" title=\"type\"><code>type</code></a> <code>remote-outbound-rtp</code> (describing a remote peer's statistics about sending data to the local peer) has a corresponding record of type <code>inbound-rtp</code> which describes the local peer's perspective on the same data being moved between the two peers.\n  Let's create a utility function to help us look up the value of a key in the paired statistics object.\n</p>\n<p>\n  The <code>findReportEntry()</code> function shown below examines an <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a>, returning the <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a>-based statistics record which contains the specified <code>key</code> — <em>and</em> for which the key has the specified <code>value</code>.\n  If no match is found or the statistics report has no record corresponding to the statistics category indicated by <code>key</code>.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">findReportEntry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">report<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> stats <span class=\"token keyword\">of</span> report<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stats<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> stats<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  Since the <code>RTCStatsReport</code> is a JavaScript <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\"><code>Map</code></a>, we can iterate over the map's <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\"><code>values()</code></a> to examine each of the <code>RTCStats</code>-based statistics records in the report until we find one that has the <code>key</code> property with the specified <code>value</code>.\n  When a match is found, the statistics object is returned.\n</p>\n<p>If no match is found, the function returns <code>null</code>.</p>\n<h4 id=\"the_main_networkteststop_function\">The main networkTestStop() function</h4>\n<p>Now let's look at the <code>networkTestStop()</code> function itself. It takes as input the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> being tested, calls <code>getStats()</code> to get a new <code>RTCStatsReport</code> with current statistics, then computes the results it's looking for, outputting those results as appropriate to the user by appending appropriate HTML to the contents of the <a href=\"/en-US/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> element whose class is <code>stats-box</code>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">networkTestStop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> statsBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".stats-box\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> endReport <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">getStats</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> endRemoteOutbound <span class=\"token keyword\">of</span> endReport<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>endRemoteOutbound<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"remote-outbound-rtp\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> startRemoteOutbound <span class=\"token operator\">=</span> startReport<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>endRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>startRemoteOutbound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> startInboundStats <span class=\"token operator\">=</span> <span class=\"token function\">findReportEntry</span><span class=\"token punctuation\">(</span>\n            startReport<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"remoteId\"</span><span class=\"token punctuation\">,</span>\n            startRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> endInboundStats <span class=\"token operator\">=</span> <span class=\"token function\">findReportEntry</span><span class=\"token punctuation\">(</span>\n            endReport<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"remoteId\"</span><span class=\"token punctuation\">,</span>\n            endRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">// Elapsed time in seconds</span>\n          <span class=\"token keyword\">const</span> elapsedTime <span class=\"token operator\">=</span>\n            <span class=\"token punctuation\">(</span>endRemoteOutbound<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> startRemoteOutbound<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span>\n            <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> packetsSent <span class=\"token operator\">=</span>\n            endRemoteOutbound<span class=\"token punctuation\">.</span>packetsSent <span class=\"token operator\">-</span> startRemoteOutbound<span class=\"token punctuation\">.</span>packetsSent<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> bytesSent <span class=\"token operator\">=</span>\n            endRemoteOutbound<span class=\"token punctuation\">.</span>bytesSent <span class=\"token operator\">-</span> startRemoteOutbound<span class=\"token punctuation\">.</span>bytesSent<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> framesDecoded <span class=\"token operator\">=</span>\n            endInboundStats<span class=\"token punctuation\">.</span>framesDecoded <span class=\"token operator\">-</span> startInboundStats<span class=\"token punctuation\">.</span>framesDecoded<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> frameRate <span class=\"token operator\">=</span> framesDecoded <span class=\"token operator\">/</span> elapsedTime<span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">let</span> timeString <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>elapsedTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            timeString <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> representing </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>elapsedTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">s</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">let</span> frameString <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>framesDecoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            frameString <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Decoded </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>framesDecoded<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> frames for a frame rate of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>frameRate<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span>\n              <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> FPS.&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">const</span> logEntry <span class=\"token operator\">=</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div class=\"stats-entry\"&gt;&lt;h2&gt;Report ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>endRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/h2&gt;</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Remote peer sent </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>packetsSent<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> packets </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>timeString<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>frameString<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Data size: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>bytesSent<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> bytes.&lt;/div&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n          statsBox<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> logEntry<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          statsBox<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div class=\"stats-error\"&gt;Unable to find initial statistics for ID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>endRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.&lt;/div&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      statsBox<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> statsBox<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  Here's what's going on in the <code>networkTestStop()</code> function: after calling the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\" title=\"getStats()\"><code>getStats()</code></a> to get the latest statistics report for the connection and storing it in <code>endReport</code>.\n  This is an <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> object, which maps strings to objects of the corresponding <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a>-based type.\n</p>\n<p>\n  Now we can begin to process the results, starting with the ending statistics found in <code>endReport</code>.\n  In this case, we're looking for statistics records whose <code>type</code> is <code>remote-outbound-rtp</code>, so we iterate over the entries in the statistics report until we find an entry of that type.\n  This object is, specifically, of type <a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a>, and it provides statistics giving details about the state of things <em>from the perspective of the remote peer</em>.\n  This statistics record is stored in <code>endRemoteOutbound</code>.\n</p>\n<p>\n  Once the ending <code>remote-outbound-rtp</code> record is found, we use its <a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/id\" title=\"id\"><code>id</code></a> property to get its ID.\n  With that in hand, we can look up the <code>remote-outbound-rtp</code> record in the starting statistics record (<code>startReport</code>), which we store into <code>startRemoteOutbound</code>.\n</p>\n<p>\n  Now we obtain the <code>inbound-rtp</code> statistics that correspond to these two <code>remote-outbound-rtp</code> records by finding the <code>remoteId</code> property within them whose value is the ID of the <code>remote-outbound-rtp</code> record.\n  We use the <code>findReportEntry()</code> function described in the previous section for that, storing the located <code>inbound-rtp</code> records in <code>startInboundStats</code> and <code>endInboundStats</code>.\n</p>\n<p>Now we have all the raw statistics needed to calculate the information we want to display, so we do so:</p>\n<ul>\n  <li>\n    We calculate the amount of time—<code>elapsedTime</code>—that elapsed between the two reports being sent by subtracting the <a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/timestamp\" title=\"timestamp\"><code>timestamp</code></a> <code>startReport</code> from that of <code>endReport</code>.\n    We then divide by 1000 to convert the result from milliseconds to seconds.\n  </li>\n  <li>We compute the number of packets sent during this interval—<code>packetsSent</code>—by subtracting the two reports' values for the <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;RTCSentRtpStreamStats.packetsSent&quot;, &quot;packetsSent&quot;)}}\"><code>packetsSent</code></a> property.</li>\n  <li>Similarly, the number of bytes sent during this interval—<code>bytesSent</code>—is calculated by subtracting the starting statistics object's <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;RTCSentRtpStreamStats.bytesSent&quot;, &quot;bytesSent&quot;)}}\"><code>bytesSent</code></a> property from that of the ending statistics.</li>\n  <li>The number of frames decoded during this interval—<code>framesDecoded</code>—is determined by subtracting <code>startRecord</code>'s <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesDecoded\" title=\"framesDecoded\"><code>framesDecoded</code></a> from <code>endRecord.framesDecoded</code>.</li>\n  <li>Finally, the frame rate over the elapsed time span is calculated by dividing <code>framesDecoded</code> by <code>elapsedTime</code>.</li>\n</ul>\n<p>The remainder of the <code>networkTestStop()</code> function constructs the HTML used to display the output of the collected and computed results to the user, then append it to the element <code>statsBox</code>, which we're using to show the status updates to the user.</p>\n<p>The output log, given the styles used by the example, looks like this:</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/localId/rtc-log-screenshot.png\" alt=\"A screenshot of the example showing logged statistics taken from paired remote-outbound-rtp and inbound-rtp statistics records\" width=\"1456\" height=\"918\" loading=\"lazy\">\n</p>\n<p>\n  In the screenshot, we see a heading followed by the scrollable <a href=\"/en-US/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> we refer to as <code>statsBox</code>.\n  The box contains a number of log entries, the last handful of which are visible.\n  Each one represents approximately one second of time (since that's much time we're waiting between calling <code>networkTestStart()</code> and <code>networkTestStop()</code>).\n</p>"}},{"type":"prose","value":{"id":"try_it_and_fork_it","title":"Try it and fork it","isH3":true,"content":"<p>This example is <a href=\"https://websocket-webrtc-chat-with-stats.glitch.me\" class=\"external\" target=\"_blank\">available on Glitch for you to try out</a>, examine, or remix.</p>\n<p><a href=\"https://glitch.com/edit/?utm_content=project_websocket-webrtc-chat-with-stats&amp;utm_source=remix_this&amp;utm_medium=button&amp;utm_campaign=glitchButton#!/remix/websocket-webrtc-chat-with-stats\" class=\"external\" target=\"_blank\">Remix It</a></p>\n<p><a href=\"https://glitch.com/edit/?utm_content=project_websocket-webrtc-chat-with-stats&amp;utm_source=view_source&amp;utm_medium=button&amp;utm_campaign=glitchButton#!/websocket-webrtc-chat-with-stats\" class=\"external\" target=\"_blank\">View Source</a></p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-stats/#dom-rtcremoteoutboundrtpstreamstats-localid","title":"Identifiers for WebRTC's Statistics API"}],"query":"api.RTCStatsReport.type_remote-outbound-rtp.localId"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCStatsReport.type_remote-outbound-rtp.localId"}}],"toc":[{"text":"Value","id":"value"},{"text":"Usage notes","id":"usage_notes"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The RTCRemoteOutboundRtpStreamStats dictionary's localId property is a string which can be used to identify the RTCInboundRtpStreamStats object whose remoteId matches this value.","popularity":0,"modified":"2023-11-14T06:13:03.000Z","source":{"folder":"en-us/web/api/rtcremoteoutboundrtpstreamstats/localid","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcremoteoutboundrtpstreamstats/localid/index.md","last_commit_url":"https://github.com/mdn/content/commit/ffe914fa3268cbc0d84648d156d19c7df3a587b9","filename":"index.md"},"short_title":"localId","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats","title":"RTCRemoteOutboundRtpStreamStats"},{"uri":"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/localId","title":"localId"}],"pageTitle":"RTCRemoteOutboundRtpStreamStats: localId property - Web APIs | MDN","noIndexing":false}}