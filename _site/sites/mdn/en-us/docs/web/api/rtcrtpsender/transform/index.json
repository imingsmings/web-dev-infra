{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/SFrameTransform does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/SFrameTransform does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":8,"line":19,"column":50,"macroName":"domxref","sourceContext":"  | </p>\n  | <h3>Value</h3>\n> | <p>A {{domxref(\"RTCRtpScriptTransform\")}}<!-- or {{domxref(\"SFrameTransform\")}} -->, or <code>null</code> if the sender has no associated transform stream.</p>\n                                                     ^\n  | <h2>Example</h2>\n  | <p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/rtcrtpsender/transform/index.md","macroSource":"{{domxref(\"SFrameTransform\")}}"}]},"title":"RTCRtpSender: transform property","mdn_url":"/en-US/docs/Web/API/RTCRtpSender/transform","locale":"en-US","native":"English (US)","browserCompat":["api.RTCRtpSender.transform"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/dtmf\"><code>dtmf</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/track\"><code>track</code></a></li><li><em><code>transform</code> </em></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/transport\"><code>transport</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Static methods</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/getCapabilities_static\"><code>getCapabilities()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/getParameters\"><code>getParameters()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/getStats\"><code>getStats()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/replaceTrack\"><code>replaceTrack()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/setParameters\"><code>setParameters()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/setStreams\"><code>setStreams()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedAudioFrame\"><code>RTCEncodedAudioFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransformer\"><code>RTCRtpScriptTransformer</code></a></li><li><em><a href=\"/en-US/docs/Web/API/RTCRtpSender/transform\" aria-current=\"page\"><code>RTCRtpSender.transform</code></a></em></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTransformEvent\"><code>RTCTransformEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>transform</code></strong> property of the <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> object is used to insert a transform stream (<a href=\"/en-US/docs/Web/API/TransformStream\"><code>TransformStream</code></a>) running in a worker thread into the sender pipeline.\n  This allows stream transforms to be applied to encoded video and audio frames after they are output by a codec, and before they are sent.\n</p>\n<p>\n  The transform that is to be added is defined using an <a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a> and its associated <a href=\"/en-US/docs/Web/API/Worker\"><code>Worker</code></a>.\n  If the transform is set synchronously immediately after creating the <code>RTCRtpSender</code> it will receive the first full frame generated by the sender's encoder.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a><!-- or <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;SFrameTransform&quot;)}}\"><code>SFrameTransform</code></a> -->, or <code>null</code> if the sender has no associated transform stream.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>\n  This example shows how you might stream video from a user's webcam over WebRTC, adding a WebRTC encoded transform to modify the outgoing streams.\n  Note that this is is part of a larger example in the guide topic <a href=\"/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms\">Using WebRTC Encoded Transforms</a>.\n</p>\n<p>\n  The code assumes that there is an <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> called <code>peerConnection</code> that is already connected to a remote peer.\n  It first gets a <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>, using <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\" title=\"getUserMedia()\"><code>getUserMedia()</code></a> to get a video <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> from a media device, and then the <a href=\"/en-US/docs/Web/API/MediaStream/getTracks\"><code>MediaStream.getTracks()</code></a> method to get the first <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> in the stream.\n</p>\n<p>\n  The track is added to the peer connection using <a href=\"/en-US/docs/Web/API/RTCPeerConnection/addTrack\" title=\"addTrack()\"><code>addTrack()</code></a>.\n  This returns a new <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> that will be used to send it.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> mediaStream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>track<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> mediaStream<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> videoSender <span class=\"token operator\">=</span> peerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">addTrack</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">,</span> mediaStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The code above sets up the connection and starts sending the track.\n  To add a transform stream into the pipeline we need to construct an <a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a> and assign it to the sender's <code>transform</code> property.\n  As the transform is constructed immediately after creation of the <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>, it will receive the first frame generated by the sender's encoder, before it is sent.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvideoSender<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCRtpScriptTransform</span><span class=\"token punctuation\">(</span>worker<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"senderTransform\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Note that you can add the transform at any time.\n  However by adding it immediately after calling <code>addTrack()</code> the transform will get the first encoded frame that is sent.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-encoded-transform/#dom-rtcrtpsender-transform","title":"WebRTC Encoded Transform"}],"query":"api.RTCRtpSender.transform"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCRtpSender.transform"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms\">Using WebRTC Encoded Transforms</a></li>\n  <li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li>\n</ul>"}}],"toc":[{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The transform property of the RTCRtpSender object is used to insert a transform stream (TransformStream) running in a worker thread into the sender pipeline.\n  This allows stream transforms to be applied to encoded video and audio frames after they are output by a codec, and before they are sent.","popularity":0,"modified":"2023-09-08T02:40:33.000Z","source":{"folder":"en-us/web/api/rtcrtpsender/transform","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcrtpsender/transform/index.md","last_commit_url":"https://github.com/mdn/content/commit/4799bed9382147f0b0ff642a130a1c12ed59a28e","filename":"index.md"},"short_title":"transform","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCRtpSender","title":"RTCRtpSender"},{"uri":"/en-US/docs/Web/API/RTCRtpSender/transform","title":"transform"}],"pageTitle":"RTCRtpSender: transform property - Web APIs | MDN","noIndexing":false}}