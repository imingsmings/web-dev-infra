{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCRtpSender: setStreams() method","mdn_url":"/en-US/docs/Web/API/RTCRtpSender/setStreams","locale":"en-US","native":"English (US)","browserCompat":["api.RTCRtpSender.setStreams"],"sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> method <strong><code>setStreams()</code></strong> associates the sender's <a href=\"/en-US/docs/Web/API/RTCRtpSender/track\" title=\"track\"><code>track</code></a> with the specified <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> objects.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setStreams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">setStreams</span><span class=\"token punctuation\">(</span>mediaStream1<span class=\"token punctuation\">)</span>\n<span class=\"token function\">setStreams</span><span class=\"token punctuation\">(</span>mediaStream1<span class=\"token punctuation\">,</span> mediaStream2<span class=\"token punctuation\">)</span>\n<span class=\"token function\">setStreams</span><span class=\"token punctuation\">(</span>mediaStream1<span class=\"token punctuation\">,</span> mediaStream2<span class=\"token punctuation\">,</span> <span class=\"token comment\">/* â€¦, */</span> mediaStreamN<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"mediastreamn\"><a href=\"#mediastreamn\"><code>mediaStreamN</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      An arbitrary number of <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> objects specified as arguments, that identify the streams to which the <code>RTCRtpSender</code>'s <a href=\"/en-US/docs/Web/API/RTCRtpSender/track\" title=\"track\"><code>track</code></a> belongs.\n      If this parameter isn't specified, no new streams will be associated with the track.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><a href=\"#invalidstateerror\"><code>InvalidStateError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the sender's connection is closed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>\n  <code>setStreams()</code> is purely additive. It doesn't remove the track from any streams; it adds it to new ones.\n  If you specify streams to which the track already belongs, that stream is unaffected.\n</p>\n<p>Once the track has been added to all of the streams, renegotiation of the connection will be triggered by the <a href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\" title=\"negotiationneeded\"><code>negotiationneeded</code></a> event being dispatched to the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> to which the sender belongs.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>This example adds all of an <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>'s tracks to the specified stream.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">addTracksToStream</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> senders <span class=\"token operator\">=</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">getSenders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  senders<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sender</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">.</span>track <span class=\"token operator\">&amp;&amp;</span> sender<span class=\"token punctuation\">.</span>transport<span class=\"token punctuation\">.</span>state <span class=\"token operator\">===</span> connected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      sender<span class=\"token punctuation\">.</span><span class=\"token function\">setStreams</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  After calling the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\" title=\"getSenders()\"><code>getSenders()</code></a> to get the list of the connection's senders, the <code>addTracksToStream()</code> function iterates over the list.\n  For each sender, if the sender's track is non-null and its transport's state is <code>connected</code>, we call <code>setStreams()</code> to add the track to the <code>stream</code> specified.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-setstreams","title":"WebRTC: Real-Time Communication in Browsers"}],"query":"api.RTCRtpSender.setStreams"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCRtpSender.setStreams"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The RTCRtpSender method setStreams() associates the sender's track with the specified MediaStream objects.","popularity":0,"modified":"2023-09-01T03:14:41.000Z","source":{"folder":"en-us/web/api/rtcrtpsender/setstreams","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcrtpsender/setstreams/index.md","last_commit_url":"https://github.com/mdn/content/commit/bd4e8bce64f6e5d3d07ddf8c1cbb5aaffe060d0c","filename":"index.md"},"short_title":"setStreams()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCRtpSender","title":"RTCRtpSender"},{"uri":"/en-US/docs/Web/API/RTCRtpSender/setStreams","title":"setStreams()"}],"pageTitle":"RTCRtpSender: setStreams() method - Web APIs | MDN","noIndexing":false}}