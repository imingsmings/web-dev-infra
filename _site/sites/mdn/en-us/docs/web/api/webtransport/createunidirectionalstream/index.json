{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebTransport: createUnidirectionalStream() method","mdn_url":"/en-US/docs/Web/API/WebTransport/createUnidirectionalStream","locale":"en-US","native":"English (US)","browserCompat":["api.WebTransport.createUnidirectionalStream"],"baseline":{"baseline":false,"support":{}},"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebTransport_API\">WebTransport API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/WebTransport\"><code>WebTransport</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/WebTransport\"><code>WebTransport()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/closed\"><code>closed</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/congestionControl\"><code>congestionControl</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/WebTransport/datagrams\"><code>datagrams</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/incomingBidirectionalStreams\"><code>incomingBidirectionalStreams</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/incomingUnidirectionalStreams\"><code>incomingUnidirectionalStreams</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/ready\"><code>ready</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/reliability\"><code>reliability</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/createBidirectionalStream\"><code>createBidirectionalStream()</code></a></li><li><em><code>createUnidirectionalStream()</code> </em></li><li><a href=\"/en-US/docs/Web/API/WebTransport/getStats\"><code>getStats()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebTransport API</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\"><code>WebTransportBidirectionalStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportDatagramDuplexStream\"><code>WebTransportDatagramDuplexStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportError\"><code>WebTransportError</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportReceiveStream\"><code>WebTransportReceiveStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportSendStream\"><code>WebTransportSendStream</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>createUnidirectionalStream()</code></strong> method of the <a href=\"/en-US/docs/Web/API/WebTransport\"><code>WebTransport</code></a> interface asynchronously opens a unidirectional stream.</p>\n<p>The method returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <a href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code></a> object, which can be used to reliably write data to the server.</p><!-- Note, returns a `WebTransportSendStream` according to spec, but not yet implemented -->\n<p>\"Reliable\" means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than <a href=\"/en-US/docs/Web/API/WebTransport/datagrams\" title=\"datagrams\"><code>datagrams</code></a>, but is needed in situations where reliability and ordering are important, like chat applications.</p>\n<p>\n  The relative order in which queued bytes are emptied from created streams can be specified using the <code>sendOrder</code> option.\n  If set, queued bytes in streams with a higher send order are guaranteed to be sent before queued bytes for streams with a lower send order.\n  If the order number is not set then the order in which bytes are sent is implementation dependent.\n  Note however that even though bytes from higher send-order streams are sent first, they may not arrive first.\n</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createUnidirectionalStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">createUnidirectionalStream</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"options\"><a href=\"#options\"><code>options</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object that may have the following properties:</p>\n    <dl>\n      <dt id=\"sendorder\"><a href=\"#sendorder\"><code>sendOrder</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          A integer value specifying the send priority of this stream relative to other streams for which the value has been set.\n          Queued bytes are sent first for streams that have a higher value.\n          If not set, the send order depends on the implementation.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <code>WebTransportSendStream</code> object (this is a <a href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><a href=\"#invalidstateerror\"><code>InvalidStateError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if <code>createUnidirectionalStream()</code> is invoked while the WebTransport is closed or failed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Use the <code>createUnidirectionalStream()</code> method to get a reference to a <a href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code></a>. From this you can <a href=\"/en-US/docs/Web/API/WritableStream/getWriter\" title=\"get a writer\">get a writer</a> to allow data to be written to the stream and sent to the server.</p>\n<p>Use the <a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/close\" title=\"close()\"><code>close()</code></a> method of the resulting <a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> to close the associated HTTP/3 connection. The browser tries to send all pending data before actually closing the associated connection.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> transport<span class=\"token punctuation\">.</span><span class=\"token function\">createUnidirectionalStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">sendOrder</span><span class=\"token operator\">:</span> <span class=\"token string\">\"596996858\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span>writable<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> writer<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All data has been sent.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">An error occurred: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>You can also use <a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/abort\"><code>WritableStreamDefaultWriter.abort()</code></a> to abruptly terminate the stream. When using <code>abort()</code>, the browser may discard any pending data that hasn't yet been sent.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> transport<span class=\"token punctuation\">.</span><span class=\"token function\">createUnidirectionalStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> ws<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\nwriter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwriter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> writer<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Not all the data may have been written.</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webtransport/#dom-webtransport-createunidirectionalstream","title":"WebTransport"}],"query":"api.WebTransport.createUnidirectionalStream"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WebTransport.createUnidirectionalStream"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://developer.chrome.com/articles/webtransport/\" class=\"external\" target=\"_blank\">Using WebTransport</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebTransport/createBidirectionalStream\"><code>WebTransport.createBidirectionalStream()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API\" title=\"WebSockets API\">WebSockets API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Streams_API\" title=\"Streams API\">Streams API</a></li>\n  <li><a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/\" class=\"external\" target=\"_blank\">WebTransport over HTTP/3</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The createUnidirectionalStream() method of the WebTransport interface asynchronously opens a unidirectional stream.","popularity":0,"modified":"2023-12-07T22:31:41.000Z","source":{"folder":"en-us/web/api/webtransport/createunidirectionalstream","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/webtransport/createunidirectionalstream/index.md","last_commit_url":"https://github.com/mdn/content/commit/e47698f3649a14011e8a41fc681dfe965d1c58c5","filename":"index.md"},"short_title":"createUnidirectionalStream()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebTransport","title":"WebTransport"},{"uri":"/en-US/docs/Web/API/WebTransport/createUnidirectionalStream","title":"createUnidirectionalStream()"}],"pageTitle":"WebTransport: createUnidirectionalStream() method - Web APIs | MDN","noIndexing":false}}