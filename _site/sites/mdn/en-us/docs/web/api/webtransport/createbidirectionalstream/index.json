{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebTransport: createBidirectionalStream() method","mdn_url":"/en-US/docs/Web/API/WebTransport/createBidirectionalStream","locale":"en-US","native":"English (US)","browserCompat":["api.WebTransport.createBidirectionalStream"],"baseline":{"baseline":false,"support":{}},"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebTransport_API\">WebTransport API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/WebTransport\"><code>WebTransport</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/WebTransport\"><code>WebTransport()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/closed\"><code>closed</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/congestionControl\"><code>congestionControl</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/WebTransport/datagrams\"><code>datagrams</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/incomingBidirectionalStreams\"><code>incomingBidirectionalStreams</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/incomingUnidirectionalStreams\"><code>incomingUnidirectionalStreams</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/ready\"><code>ready</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/reliability\"><code>reliability</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/close\"><code>close()</code></a></li><li><em><code>createBidirectionalStream()</code> </em></li><li><a href=\"/en-US/docs/Web/API/WebTransport/createUnidirectionalStream\"><code>createUnidirectionalStream()</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/getStats\"><code>getStats()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebTransport API</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\"><code>WebTransportBidirectionalStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportDatagramDuplexStream\"><code>WebTransportDatagramDuplexStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportError\"><code>WebTransportError</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportReceiveStream\"><code>WebTransportReceiveStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportSendStream\"><code>WebTransportSendStream</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>createBidirectionalStream()</code></strong> method of the <a href=\"/en-US/docs/Web/API/WebTransport\"><code>WebTransport</code></a> interface asynchronously opens and returns a bidirectional stream.</p>\n<p>\n  The method returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\"><code>WebTransportBidirectionalStream</code></a> object, which has <code>readable</code> and <code>writable</code> properties that can be used to reliably read from and write to the server.\n  \"Reliable\" means that transmission and order of data are guaranteed.\n  This provides slower delivery (albeit faster than with WebSockets) than <a href=\"/en-US/docs/Web/API/WebTransport/datagrams\" title=\"datagrams\"><code>datagrams</code></a>, but is needed in situations where reliability and ordering are important, like chat applications.\n</p>\n<p>\n  The relative order in which queued bytes are emptied from created streams can be specified using the <code>sendOrder</code> option.\n  If set, queued bytes in streams with a higher send order are guaranteed to be sent before queued bytes for streams with a lower send order.\n  If the order number is not set then the order in which bytes are sent is implementation dependent.\n  Note however that even though bytes from higher send-order streams are sent first, they may not arrive first.\n</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createBidirectionalStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">createBidirectionalStream</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"options\"><a href=\"#options\"><code>options</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object that may have the following properties:</p>\n    <dl>\n      <dt id=\"sendorder\"><a href=\"#sendorder\"><code>sendOrder</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          A integer value specifying the send priority of this stream relative to other streams for which the value has been set.\n          Queued bytes are sent first for streams that have a higher value.\n          If not set, the send order depends on the implementation.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\"><code>WebTransportBidirectionalStream</code></a> object.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><a href=\"#invalidstateerror\"><code>InvalidStateError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if <code>createBidirectionalStream()</code> is invoked while the <code>WebTransport</code> is closed or failed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>An initial function is used to get references to the <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream/readable\"><code>WebTransportBidirectionalStream.readable</code></a> and <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream/writable\"><code>WebTransportBidirectionalStream.writable</code></a> properties. These are references to <code>WebTransportReceiveStream</code> and <code>WebTransportSendStream</code> instances, which are readable and writable streams that can be used to read from and write to the server.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setUpBidirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> transport<span class=\"token punctuation\">.</span><span class=\"token function\">createBidirectionalStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">sendOrder</span><span class=\"token operator\">:</span> <span class=\"token string\">\"596996858\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// stream is a WebTransportBidirectionalStream</span>\n  <span class=\"token comment\">// stream.readable is a ReadableStream</span>\n  <span class=\"token keyword\">const</span> readable <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span>readable<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// stream.writable is a WritableStream</span>\n  <span class=\"token keyword\">const</span> writable <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span>writable<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Reading from the <code>WebTransportReceiveStream</code> can then be done as follows:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">readable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> readable<span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">,</span> done <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// value is a Uint8Array.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>And writing to the <code>WebTransportSendStream</code> can be done like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">writable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> writable<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webtransport/#dom-webtransport-createbidirectionalstream","title":"WebTransport"}],"query":"api.WebTransport.createBidirectionalStream"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WebTransport.createBidirectionalStream"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://developer.chrome.com/articles/webtransport/\" class=\"external\" target=\"_blank\">Using WebTransport</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebTransport/createUnidirectionalStream\"><code>WebTransport.createUnidirectionalStream()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API\" title=\"WebSockets API\">WebSockets API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Streams_API\" title=\"Streams API\">Streams API</a></li>\n  <li><a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/\" class=\"external\" target=\"_blank\">WebTransport over HTTP/3</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The createBidirectionalStream() method of the WebTransport interface asynchronously opens and returns a bidirectional stream.","popularity":0.0006,"modified":"2023-12-07T22:31:41.000Z","source":{"folder":"en-us/web/api/webtransport/createbidirectionalstream","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/webtransport/createbidirectionalstream/index.md","last_commit_url":"https://github.com/mdn/content/commit/e47698f3649a14011e8a41fc681dfe965d1c58c5","filename":"index.md"},"short_title":"createBidirectionalStream()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebTransport","title":"WebTransport"},{"uri":"/en-US/docs/Web/API/WebTransport/createBidirectionalStream","title":"createBidirectionalStream()"}],"pageTitle":"WebTransport: createBidirectionalStream() method - Web APIs | MDN","noIndexing":false}}