{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebTransport: incomingBidirectionalStreams property","mdn_url":"/en-US/docs/Web/API/WebTransport/incomingBidirectionalStreams","locale":"en-US","native":"English (US)","browserCompat":["api.WebTransport.incomingBidirectionalStreams"],"baseline":{"baseline":false,"support":{}},"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebTransport_API\">WebTransport API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/WebTransport\"><code>WebTransport</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/WebTransport\"><code>WebTransport()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/closed\"><code>closed</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/congestionControl\"><code>congestionControl</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/WebTransport/datagrams\"><code>datagrams</code></a></li><li><em><code>incomingBidirectionalStreams</code> </em></li><li><a href=\"/en-US/docs/Web/API/WebTransport/incomingUnidirectionalStreams\"><code>incomingUnidirectionalStreams</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/ready\"><code>ready</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/reliability\"><code>reliability</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransport/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/createBidirectionalStream\"><code>createBidirectionalStream()</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/createUnidirectionalStream\"><code>createUnidirectionalStream()</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransport/getStats\"><code>getStats()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebTransport API</summary><ol><li><a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\"><code>WebTransportBidirectionalStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportDatagramDuplexStream\"><code>WebTransportDatagramDuplexStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportError\"><code>WebTransportError</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportReceiveStream\"><code>WebTransportReceiveStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WebTransportSendStream\"><code>WebTransportSendStream</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>incomingBidirectionalStreams</code></strong> read-only property of the <a href=\"/en-US/docs/Web/API/WebTransport\"><code>WebTransport</code></a> interface represents one or more bidirectional streams opened by the server. Returns a <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> of <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\"><code>WebTransportBidirectionalStream</code></a> objects. Each one can be used to reliably read data from the server and write data back to it.</p>\n<p>\"Reliable\" means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than <a href=\"/en-US/docs/Web/API/WebTransport/datagrams\" title=\"datagrams\"><code>datagrams</code></a>, but is needed in situations where reliability and ordering are important, like chat applications.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> of <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\"><code>WebTransportBidirectionalStream</code></a> objects.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>An initial function is used to read the <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream\"><code>WebTransportBidirectionalStream</code></a> objects from the <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a>. For each one, the <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream/readable\"><code>WebTransportBidirectionalStream.readable</code></a> and <a href=\"/en-US/docs/Web/API/WebTransportBidirectionalStream/writable\"><code>WebTransportBidirectionalStream.writable</code></a> values are passed to other functions to read from and write to those streams.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">receiveBidirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> bds <span class=\"token operator\">=</span> transport<span class=\"token punctuation\">.</span>incomingBidirectionalStreams<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> bds<span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> done<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// value is an instance of WebTransportBidirectionalStream</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>readable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>writable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">readable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> readable<span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">,</span> done <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// value is a Uint8Array.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">writeData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">writable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> writable<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webtransport/#dom-webtransport-incomingbidirectionalstreams","title":"WebTransport"}],"query":"api.WebTransport.incomingBidirectionalStreams"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WebTransport.incomingBidirectionalStreams"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://developer.chrome.com/articles/webtransport/\" class=\"external\" target=\"_blank\">Using WebTransport</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API\" title=\"WebSockets API\">WebSockets API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Streams_API\" title=\"Streams API\">Streams API</a></li>\n  <li><a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/\" class=\"external\" target=\"_blank\">WebTransport over HTTP/3</a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The incomingBidirectionalStreams read-only property of the WebTransport interface represents one or more bidirectional streams opened by the server. Returns a ReadableStream of WebTransportBidirectionalStream objects. Each one can be used to reliably read data from the server and write data back to it.","popularity":0,"modified":"2023-10-25T17:27:32.000Z","source":{"folder":"en-us/web/api/webtransport/incomingbidirectionalstreams","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/webtransport/incomingbidirectionalstreams/index.md","last_commit_url":"https://github.com/mdn/content/commit/835d6632d59993861a0458510402787f8a2c3cb3","filename":"index.md"},"short_title":"incomingBidirectionalStreams","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebTransport","title":"WebTransport"},{"uri":"/en-US/docs/Web/API/WebTransport/incomingBidirectionalStreams","title":"incomingBidirectionalStreams"}],"pageTitle":"WebTransport: incomingBidirectionalStreams property - Web APIs | MDN","noIndexing":false}}