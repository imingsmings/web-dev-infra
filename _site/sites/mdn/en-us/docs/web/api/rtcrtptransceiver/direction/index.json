{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCRtpTransceiver: direction property","mdn_url":"/en-US/docs/Web/API/RTCRtpTransceiver/direction","locale":"en-US","native":"English (US)","browserCompat":["api.RTCRtpTransceiver.direction"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection\"><code>currentDirection</code></a></li><li><em><code>direction</code> </em></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/mid\"><code>mid</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/receiver\"><code>receiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/sender\"><code>sender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/stopped\"><code>stopped</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences\"><code>setCodecPreferences()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/stop\"><code>stop()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedAudioFrame\"><code>RTCEncodedAudioFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransformer\"><code>RTCRtpScriptTransformer</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/transform\"><code>RTCRtpSender.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTransformEvent\"><code>RTCTransformEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> property <strong><code>direction</code></strong> is a string that indicates the transceiver's <em>preferred</em> directionality.</p>\n<p>\n  The directionality indicates whether the transceiver will offer to send and/or receive <a href=\"/en-US/docs/Glossary/RTP\">RTP</a> data, or whether it is inactive or stopped (terminated).\n  When setting the transceiver's direction, the value is not applied immediately.\n  The <em>current</em> direction is indicated by the <a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection\" title=\"currentDirection\"><code>currentDirection</code></a> property.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A string with one of the following values:</p>\n<dl>\n  <dt id=\"sendrecv\"><a href=\"#sendrecv\"><code>\"sendrecv\"</code></a></dt>\n  <dd>\n    <p>Transceiver offers to send and receive RTP data:</p>\n    <ul>\n      <li><code>RTCRtpSender</code>: Offers to send RTP data, and will do so if the remote peer accepts the connection and at least one of the sender's encodings is active.</li>\n      <li><code>RTCRtpReceiver</code>: Offers to receive RTP data, and does so if the remote peer accepts.</li>\n    </ul>\n  </dd>\n  <dt id=\"sendonly\"><a href=\"#sendonly\"><code>\"sendonly\"</code></a></dt>\n  <dd>\n    <p>Transceiver offers to send but not receive RTP data:</p>\n    <ul>\n      <li><code>RTCRtpSender</code>: Offers to send RTP data, and will do so if the remote peer accepts the connection and at least one of the sender's encodings is active.</li>\n      <li><code>RTCRtpReceiver</code>: Does <em>not</em> offer to receive RTP data and will not do so.</li>\n    </ul>\n  </dd>\n  <dt id=\"recvonly\"><a href=\"#recvonly\"><code>\"recvonly\"</code></a></dt>\n  <dd>\n    <p>Transceiver offers to receive but not set RTP data:</p>\n    <ul>\n      <li><code>RTCRtpSender</code>: Does <em>not</em> offer to send RTP data, and will not do so.</li>\n      <li><code>RTCRtpReceiver</code>: Offers to receive RTP data, and will do so if the remote peer offers.</li>\n    </ul>\n  </dd>\n  <dt id=\"inactive\"><a href=\"#inactive\"><code>\"inactive\"</code></a></dt>\n  <dd>\n    <p>Transceiver is inactive:</p>\n    <ul>\n      <li><code>RTCRtpSender</code>: Does <em>not</em> offer to send RTP data, and will not do so.</li>\n      <li><code>RTCRtpReceiver</code>: Does <em>not</em> offer to receive RTP data and will not do so.</li>\n    </ul>\n  </dd>\n  <dt id=\"stopped\"><a href=\"#stopped\"><code>\"stopped\"</code></a></dt>\n  <dd>\n    <p>\n      This is the terminal state of the transceiver.\n      The transceiver is stopped and will not send or receive RTP data or offer to do so.\n      Setting this value when the transceiver is not already stopped raises a <code>TypeError</code>.\n    </p>\n    <ul>\n      <li><code>RTCRtpSender</code>: Does <em>not</em> offer to send RTP data, and will not do so.</li>\n      <li><code>RTCRtpReceiver</code>: Does <em>not</em> offer to receive RTP data and will not do so.</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>When setting the value of <code>direction</code>, the following exception can occur:</p>\n<dl>\n  <dt id=\"invalidstateerror\"><a href=\"#invalidstateerror\"><code>InvalidStateError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>The receiver's <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> is closed or the <a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> is stopped.</p>\n  </dd>\n  <dt id=\"typeerror\"><a href=\"#typeerror\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>The value is being set to <code>stopped</code> when the current value is anything other than <code>stopped</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>The <strong><code>direction</code></strong> property can be used to set or get the transceiver's <em>preferred</em> directionality.</p>\n<p>\n  Updating the directionality does not take effect immediately.\n  If the new value of <code>direction</code> is different from the existing value, renegotiation of the connection is required, so a <a href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\" title=\"negotiationneeded\"><code>negotiationneeded</code></a> event is sent to the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.\n  A <code>direction</code> value (other than <code>stopped</code>) is then used by <a href=\"/en-US/docs/Web/API/RTCPeerConnection/createOffer\"><code>RTCPeerConnection.createOffer()</code></a> or <a href=\"/en-US/docs/Web/API/RTCPeerConnection/createAnswer\"><code>RTCPeerConnection.createAnswer()</code></a> in order to generate the <a href=\"/en-US/docs/Glossary/SDP\">SDP</a> message created those methods.\n  For example, if the <code>direction</code> is specified as <code>\"sendrecv\"</code>, the corresponding SDP a-line indicates the directionality:\n</p>\n<pre class=\"brush: plain notranslate\">a=sendrecv\n</pre>\n<p>The new directionality takes effect once the negotiation process is completed and the new session description is successfully applied.</p>\n<p>The transceiver's <em>current</em> direction is indicated by the <a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection\" title=\"currentDirection\"><code>currentDirection</code></a> property.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#dom-rtcrtptransceiver-direction","title":"WebRTC: Real-Time Communication in Browsers"}],"query":"api.RTCRtpTransceiver.direction"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCRtpTransceiver.direction"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection\"><code>RTCRtpTransceiver.currentDirection</code></a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Description","id":"description"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The RTCRtpTransceiver property direction is a string that indicates the transceiver's preferred directionality.","popularity":0.0008,"modified":"2023-09-17T23:32:50.000Z","source":{"folder":"en-us/web/api/rtcrtptransceiver/direction","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcrtptransceiver/direction/index.md","last_commit_url":"https://github.com/mdn/content/commit/e83d6f0c25d2b4c1ce34638ef34a0536a7e0c91e","filename":"index.md"},"short_title":"direction","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCRtpTransceiver","title":"RTCRtpTransceiver"},{"uri":"/en-US/docs/Web/API/RTCRtpTransceiver/direction","title":"direction"}],"pageTitle":"RTCRtpTransceiver: direction property - Web APIs | MDN","noIndexing":false}}