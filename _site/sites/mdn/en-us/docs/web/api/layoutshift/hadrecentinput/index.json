{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"LayoutShift: hadRecentInput property","mdn_url":"/en-US/docs/Web/API/LayoutShift/hadRecentInput","locale":"en-US","native":"English (US)","browserCompat":["api.LayoutShift.hadRecentInput"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Performance_API\">Performance API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/LayoutShift\"><code>LayoutShift</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><em><code>hadRecentInput</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li><a href=\"/en-US/docs/Web/API/LayoutShift/lastInputTime\"><code>lastInputTime</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/LayoutShift/sources\"><code>sources</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/LayoutShift/value\"><code>value</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/LayoutShift/toJSON\"><code>toJSON()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Performance API</summary><ol><li><a href=\"/en-US/docs/Web/API/EventCounts\"><code>EventCounts</code></a></li><li><a href=\"/en-US/docs/Web/API/LargestContentfulPaint\"><code>LargestContentfulPaint</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShiftAttribution\"><code>LayoutShiftAttribution</code></a></li><li><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceElementTiming\"><code>PerformanceElementTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming\"><code>PerformanceEventTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceLongTaskTiming\"><code>PerformanceLongTaskTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigation\"><code>PerformanceNavigation</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformancePaintTiming\"><code>PerformancePaintTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming\"><code>PerformanceServerTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/VisibilityStateEntry\"><code>VisibilityStateEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>hadRecentInput</code></strong> read-only property of the <a href=\"/en-US/docs/Web/API/LayoutShift\"><code>LayoutShift</code></a> interface returns <code>true</code> if <a href=\"/en-US/docs/Web/API/LayoutShift/lastInputTime\" title=\"lastInputTime\"><code>lastInputTime</code></a> is less than 500 milliseconds in the past.</p>\n<p>Layout shifts are only a problem if the user is not expecting them, so layout shifts that are the result of user interactions (such as a user expanding a UI element) are often not considered in layout shift metrics. The <code>hadRecentInput</code> property allows you to exclude these shifts.</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A boolean returning <code>true</code> if <a href=\"/en-US/docs/Web/API/LayoutShift/lastInputTime\" title=\"lastInputTime\"><code>lastInputTime</code></a> is less than 500 milliseconds in the past; <code>false</code> otherwise.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"ignoring_recent_user_input_for_layout_shift_scores","title":"Ignoring recent user input for layout shift scores","isH3":true,"content":"<p>The following example shows how the <code>hadRecentInput</code> property is used to only count layout shifts without recent user input.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> entry <span class=\"token keyword\">of</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Count layout shifts without recent user input only</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>entry<span class=\"token punctuation\">.</span>hadRecentInput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LayoutShift value:\"</span><span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> currentRect<span class=\"token punctuation\">,</span> previousRect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">of</span> entry<span class=\"token punctuation\">.</span>sources<span class=\"token punctuation\">)</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LayoutShift source:\"</span><span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            currentRect<span class=\"token punctuation\">,</span>\n            previousRect<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"layout-shift\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">buffered</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/layout-instability/#dom-layoutshift-hadrecentinput","title":"Layout Instability"}],"query":"api.LayoutShift.hadRecentInput"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.LayoutShift.hadRecentInput"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/LayoutShift/lastInputTime\"><code>LayoutShift.lastInputTime</code></a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The hadRecentInput read-only property of the LayoutShift interface returns true if lastInputTime is less than 500 milliseconds in the past.","popularity":0,"modified":"2023-04-13T13:28:29.000Z","source":{"folder":"en-us/web/api/layoutshift/hadrecentinput","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/layoutshift/hadrecentinput/index.md","last_commit_url":"https://github.com/mdn/content/commit/7b3ccaec4a93584da12939587ea746acaabe30bc","filename":"index.md"},"short_title":"hadRecentInput","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/LayoutShift","title":"LayoutShift"},{"uri":"/en-US/docs/Web/API/LayoutShift/hadRecentInput","title":"hadRecentInput"}],"pageTitle":"LayoutShift: hadRecentInput property - Web APIs | MDN","noIndexing":false}}