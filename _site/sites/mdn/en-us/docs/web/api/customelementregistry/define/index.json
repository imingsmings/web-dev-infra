{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CustomElementRegistry: define() method","mdn_url":"/en-US/docs/Web/API/CustomElementRegistry/define","locale":"en-US","native":"English (US)","browserCompat":["api.CustomElementRegistry.define"],"baseline":{"baseline":false,"support":{"chrome":"73","chrome_android":"73","edge":"79"}},"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_components\">Web components</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><em><code>define()</code> </em></li><li><a href=\"/en-US/docs/Web/API/CustomElementRegistry/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomElementRegistry/getName\"><code>getName()</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomElementRegistry/upgrade\"><code>upgrade()</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomElementRegistry/whenDefined\"><code>whenDefined()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Components</summary><ol><li><a href=\"/en-US/docs/Web/API/CustomStateSet\"><code>CustomStateSet</code></a></li><li><a href=\"/en-US/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/slot\"><code>Element.slot</code></a></li><li><a href=\"/en-US/docs/Web/API/ElementInternals\"><code>ElementInternals</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/composed\"><code>Event.composed</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/composedPath\"><code>Event.composedPath</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/attachInternals\"><code>HTMLElement.attachInternals()</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/getRootNode\"><code>Node.getRootNode()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/isConnected\"><code>Node.isConnected</code></a></li><li><a href=\"/en-US/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/customElements\"><code>Window.customElements</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>define()</code></strong> method of the <a href=\"/en-US/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a> interface adds a definition for a custom element to the custom element registry, mapping its name to the constructor which will be used to create it.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">define</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> constructor<span class=\"token punctuation\">)</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> constructor<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"name\"><a href=\"#name\"><code>name</code></a></dt>\n  <dd>\n    <p>Name for the new custom element. Must be a <a href=\"#valid_custom_element_names\">valid custom element name</a>.</p>\n  </dd>\n  <dt id=\"constructor\"><a href=\"#constructor\"><code>constructor</code></a></dt>\n  <dd>\n    <p>Constructor for the new custom element.</p>\n  </dd>\n  <dt id=\"options\"><a href=\"#options\"><code>options</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Object that controls how the element is defined. One option is currently supported:</p>\n    <dl>\n      <dt id=\"extends\"><a href=\"#extends\"><code>extends</code></a></dt>\n      <dd>\n        <p>\n          String specifying the name of a built-in element to\n          extend. Used to create a customized built-in element.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"notsupportederror\"><a href=\"#notsupportederror\"><code>NotSupportedError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if:</p>\n    <ul>\n      <li>The <a href=\"/en-US/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a> already contains an entry with the same name or the same constructor (or is otherwise already defined).</li>\n      <li>The <code>extends</code> option is specified and it is a <a href=\"#valid_custom_element_names\">valid custom element name</a></li>\n      <li>The <code>extends</code> option is specified but the element it is trying to extend is an unknown element.</li>\n    </ul>\n  </dd>\n  <dt id=\"syntaxerror\"><a href=\"#syntaxerror\"><code>SyntaxError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the provided name is not a <a href=\"#valid_custom_element_names\">valid custom element name</a>.</p>\n  </dd>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown if the referenced constructor is not a constructor.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>The <code>define()</code> method adds a definition for a custom element to the custom element registry, mapping its name to the constructor which will be used to create it.</p>\n<p>There are two types of custom element you can create:</p>\n<ul>\n  <li><em>Autonomous custom elements</em> are standalone elements, that don't inherit from built-in HTML elements.</li>\n  <li><em>Customized built-in elements</em> are elements that inherit from, and extend, built-in HTML elements.</li>\n</ul>\n<p>To define an autonomous custom element, you should omit the <code>options</code> parameter.</p>\n<p>To define a customized built-in element, you must pass the <code>options</code> parameter with its <code>extends</code> property set to the name of the built-in element that you are extending, and this must correspond to the interface that your custom element class definition inherits from. For example, to customize the <a href=\"/en-US/docs/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a> element, you must pass <code>{extends: \"p\"}</code> to <code>define()</code>, and the class definition for your element must inherit from <a href=\"/en-US/docs/Web/API/HTMLParagraphElement\"><code>HTMLParagraphElement</code></a>.</p>"}},{"type":"prose","value":{"id":"valid_custom_element_names","title":"Valid custom element names","isH3":true,"content":"<p>Custom element names must:</p>\n<ul>\n  <li>start with an ASCII lowercase letter (a-z)</li>\n  <li>contain a hyphen</li>\n  <li>not contain any ASCII uppercase letters</li>\n  <li>not contain certain other characters, as documented in the <a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\" class=\"external\" target=\"_blank\">valid custom element names</a> section of the Web Components specification</li>\n  <li>not be any of:\n    <ul>\n      <li>\"annotation-xml\"</li>\n      <li>\"color-profile\"</li>\n      <li>\"font-face\"</li>\n      <li>\"font-face-src\"</li>\n      <li>\"font-face-uri\"</li>\n      <li>\"font-face-format\"</li>\n      <li>\"font-face-name\"</li>\n      <li>\"missing-glyph\"</li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"defining_an_autonomous_custom_element","title":"Defining an autonomous custom element","isH3":true,"content":"<p>The following class implements a minimal autonomous custom element:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAutonomousElement</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This element doesn't do anything: a real autonomous element would implement its functionality in its constructor and in the lifecycle callbacks provided by the standard. See <a href=\"/en-US/docs/Web/API/Web_components/Using_custom_elements\">Implementing a custom element</a> in our guide to working with custom elements.</p>\n<p>However, the above class definition satisfies the requirements of the <code>define()</code> method, so we can define it with the following code:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>customElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-autonomous-element\"</span><span class=\"token punctuation\">,</span> MyAutonomousElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>We could then use it in an HTML page like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-autonomous-element</span><span class=\"token punctuation\">&gt;</span></span>Element contents<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-autonomous-element</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"defining_a_customized_built-in_element","title":"Defining a customized built-in element","isH3":true,"content":"<p>The following class implements a customized built-in element:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyCustomizedBuiltInElement</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLParagraphElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This element extends the built-in <a href=\"/en-US/docs/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a> element.</p>\n<p>In this minimal example the element doesn't implement any customization, so it will behave just like a normal <code>&lt;p&gt;</code> element. However, it does satisfy the requirements of <code>define()</code>, so we can define it like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>customElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"my-customized-built-in-element\"</span><span class=\"token punctuation\">,</span>\n  MyCustomizedBuiltInElement<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token string\">\"p\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>We could then use it in an HTML page like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-customized-built-in-element<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/custom-elements.html#dom-customelementregistry-define-dev","title":"HTML Standard"}],"query":"api.CustomElementRegistry.define"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CustomElementRegistry.define"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_components/Using_custom_elements\">Using custom elements</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The define() method of the CustomElementRegistry interface adds a definition for a custom element to the custom element registry, mapping its name to the constructor which will be used to create it.","popularity":0.0101,"modified":"2023-10-22T00:42:05.000Z","source":{"folder":"en-us/web/api/customelementregistry/define","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/customelementregistry/define/index.md","last_commit_url":"https://github.com/mdn/content/commit/66b6d40a37daef8aa0013c44c310eeb2f0bcd7e1","filename":"index.md"},"short_title":"define()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CustomElementRegistry","title":"CustomElementRegistry"},{"uri":"/en-US/docs/Web/API/CustomElementRegistry/define","title":"define()"}],"pageTitle":"CustomElementRegistry: define() method - Web APIs | MDN","noIndexing":false}}