{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Using the Window Management API","mdn_url":"/en-US/docs/Web/API/Window_Management_API/Using","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Window_Management_API\">Window Management API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><em><a href=\"/en-US/docs/Web/API/Window_Management_API/Using\" aria-current=\"page\">Using the Window Management API</a></em></li><li><a href=\"/en-US/docs/Web/API/Window_Management_API/Multi-screen_origin\">Multi-screen origin</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/ScreenDetails\"><code>ScreenDetails</code></a></li><li><a href=\"/en-US/docs/Web/API/ScreenDetailed\"><code>ScreenDetailed</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Screen/isExtended\"><code>Screen.isExtended</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Element/requestFullscreen\"><code>Element.requestFullscreen()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/getScreenDetails\"><code>Window.getScreenDetails()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/Screen/change_event\"><code>Screen</code>: <code>change</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>This guide explains how to use the <a href=\"/en-US/docs/Web/API/Window_Management_API\">Window Management API</a>. The example code seen below is taken from our <a href=\"https://mdn.github.io/dom-examples/window-management-api/\" class=\"external\" target=\"_blank\">Multi-window learning environment</a> example (see the <a href=\"https://github.com/mdn/dom-examples/tree/main/window-management-api\" class=\"external\" target=\"_blank\">source code</a>).</p>"}},{"type":"prose","value":{"id":"feature_detection","title":"Feature detection","isH3":false,"content":"<p>You can feature detect the Window Management API by checking for the existence of <code>getScreenDetails</code> in the current <code>window</code> instance. For example, you might want to provide a button to open a multi-window display if the API is supported, or a different experience such as creating links to the different pages if it isn't:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"getScreenDetails\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The Window Management API is supported</span>\n  <span class=\"token function\">createButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The Window Management API is not supported</span>\n  <span class=\"token function\">createLinks</span><span class=\"token punctuation\">(</span>sites<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"basic_usage","title":"Basic usage","isH3":false,"content":"<p>The core of the Windows Management API is the <a href=\"/en-US/docs/Web/API/Window/getScreenDetails\"><code>Window.getScreenDetails()</code></a> method, which returns an object containing details of all the screens available to the user's system:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> screenDetails <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getScreenDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Return the number of screens</span>\n<span class=\"token keyword\">const</span> noOfScreens <span class=\"token operator\">=</span> screenDetails<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>When <code>getScreenDetails()</code> is invoked, the user will be asked for permission to manage windows on all their displays (the status of this permission can be checked using <a href=\"/en-US/docs/Web/API/Permissions/query\"><code>Permissions.query()</code></a> to query <code>window-management</code>). If the user grants permission, a <a href=\"/en-US/docs/Web/API/ScreenDetails\"><code>ScreenDetails</code></a> object is returned. This object contains the following properties:</p>\n<ul>\n  <li><code>screens</code>: An array of <a href=\"/en-US/docs/Web/API/ScreenDetailed\"><code>ScreenDetailed</code></a> objects, each one containing detailed information about a separate screen available to the system (see below). This array is also useful for determining the number of available screens, via <code>screens.length</code>.</li>\n  <li><code>currentScreen</code>: A single <a href=\"/en-US/docs/Web/API/ScreenDetailed\"><code>ScreenDetailed</code></a> object containing detailed information about the screen that the current browser window is displayed in.</li>\n</ul>\n<p><a href=\"/en-US/docs/Web/API/ScreenDetailed\"><code>ScreenDetailed</code></a> objects inherit the properties of the <a href=\"/en-US/docs/Web/API/Screen\"><code>Screen</code></a> interface, and contain useful information for placing windows on specific screens.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> You can gate functionality based on whether the user has more than one screen available using the <a href=\"/en-US/docs/Web/API/Screen/isExtended\" title=\"Window.screen.isExtended\"><code>Window.screen.isExtended</code></a> property. This returns <code>true</code> if the device has multiple screens, and <code>false</code> if not.</p>\n</div>"}},{"type":"prose","value":{"id":"opening_windows","title":"Opening windows","isH3":true,"content":"<p>You'll still need to use <a href=\"/en-US/docs/Web/API/Window/open\"><code>Window.open()</code></a> to open and manage windows, but the above provides you with better information for doing so in a multi-screen environment. For example, a utility function might look like so:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Array to hold references to the currently open windows</span>\n<span class=\"token keyword\">let</span> windowRefs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">openWindow</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> windowFeatures <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">left=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>left<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,top=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>top<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,width=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>width<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,height=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>height<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> windowRef <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>\n    url<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"_blank\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// needed for it to open in a new window</span>\n    windowFeatures<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>windowRef <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If the browser is blocking new windows, close any windows that were</span>\n    <span class=\"token comment\">// able to open and display instructions to help the user fix this problem</span>\n    <span class=\"token function\">closeAllWindows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    popoverElem<span class=\"token punctuation\">.</span><span class=\"token function\">showPopover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Store a reference to the window in the windowRefs array</span>\n    windowRefs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>windowRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>You would then invoke this function and open windows on specific screens like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> screen1 <span class=\"token operator\">=</span> screenDetails<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> screen2 <span class=\"token operator\">=</span> screenDetails<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Windows will be a third the width and the full height of the screen</span>\n<span class=\"token comment\">// The available width of screen1, minus 3 times the horizontal browser chrome</span>\n<span class=\"token comment\">// width, divided by 3</span>\n<span class=\"token keyword\">const</span> windowWidth <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>screen1<span class=\"token punctuation\">.</span>availWidth <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token constant\">WINDOW_CHROME_X</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// The available height of screen1, minus the vertical browser chrome width</span>\n<span class=\"token keyword\">const</span> windowHeight <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>screen1<span class=\"token punctuation\">.</span>availHeight <span class=\"token operator\">-</span> <span class=\"token constant\">WINDOW_CHROME_Y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Open a window a third of the width and the entire height of the primary screen</span>\n<span class=\"token function\">openWindow</span><span class=\"token punctuation\">(</span>\n  screen1<span class=\"token punctuation\">.</span>availLeft<span class=\"token punctuation\">,</span>\n  screen1<span class=\"token punctuation\">.</span>availTop<span class=\"token punctuation\">,</span>\n  windowWidth<span class=\"token punctuation\">,</span>\n  windowHeight<span class=\"token punctuation\">,</span>\n  sites<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"closing_all_windows","title":"Closing all windows","isH3":true,"content":"<p>After opening each window, we add a reference to the <code>windowRefs</code> array. This allows you to, for example, close them all when one window is closed:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">closeAllWindows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Loop through all window refs and close each one</span>\n  windowRefs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">windowRef</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    windowRef<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  windowRefs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Check whether one of our popup windows has been closed</span>\n<span class=\"token comment\">// If so, close them all</span>\n\ncloseMonitor <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>checkWindowClose<span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">checkWindowClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>windowRefs<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">windowRef</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> windowRef<span class=\"token punctuation\">.</span>closed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">closeAllWindows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>closeMonitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> In our experiments, the <a href=\"/en-US/docs/Web/API/setInterval\"><code>setInterval()</code></a> polling method shown above seemed to work best for detecting window closure in the case of multiple windows. Using events such as <a href=\"/en-US/docs/Web/API/Window/beforeunload_event\" title=\"beforeunload\"><code>beforeunload</code></a>, <a href=\"/en-US/docs/Web/API/Window/pagehide_event\" title=\"pagehide\"><code>pagehide</code></a>, or <a href=\"/en-US/docs/Web/API/Document/visibilitychange_event\" title=\"visibilitychange\"><code>visibilitychange</code></a> proved unreliable because, when opening multiple windows at the same time, the rapid shift in focus/visibility seemed to fire the handler function prematurely.</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> One concern with the above example is that it uses constant values to represent the size of the Chrome window UI portions in the calculations — <code>WINDOW_CHROME_X</code> and <code>WINDOW_CHROME_Y</code> — to get the window size calculations correct. To create precisely-sized windows on other future implementations of the API, you'd need to keep a small library of browser chrome sizes, and employ browser detection to discover which browser is rendering your app and choose the correct size for calculations. Or you can rely on less precise window sizes.</p>\n</div>"}},{"type":"prose","value":{"id":"handling_browser_popup_blockers","title":"Handling browser popup blockers","isH3":true,"content":"<p>In modern browsers, a separate user gesture event is required for each <code>Window.open()</code> call, for security purposes. This prevents sites from spamming users with lots of windows. However, this poses an issue for multi-window applications. To work around this limitation, you can design your applications to:</p>\n<ul>\n  <li>Open no more than one new window at once.</li>\n  <li>Reuse existing windows to display different pages.</li>\n  <li>Advise users on how to update their browser settings to allow multiple windows.</li>\n</ul>\n<p>In our demo application, we have gone for the third option. Our <code>openWindow()</code> function contains the following section:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>windowRef <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If the browser is blocking new windows, close any windows that were</span>\n  <span class=\"token comment\">// able to open and display instructions to help the user fix this problem</span>\n  <span class=\"token function\">closeAllWindows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  popoverElem<span class=\"token punctuation\">.</span><span class=\"token function\">showPopover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Store a reference to the window in the windowRefs array</span>\n  windowRefs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>windowRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ...</span>\n</code></pre></div>\n<p>If the browser blocks a new window, the resulting <code>windowRef</code> will be <code>null</code>. In this case we run our <code>closeAllWindows()</code> function to close any windows that <em>did</em> manage to open before the blocking started, and show a <a href=\"/en-US/docs/Web/API/Popover_API\">popover element</a> that explains how to disable the popup blocker.</p>"}},{"type":"prose","value":{"id":"simple_single-window_per_display_case","title":"Simple single-window per display case","isH3":false,"content":"<p>If you want to open a single window on each available display that is the full width and height of the display, you could use a pattern like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Open a window on each screen of the device</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> screen <span class=\"token keyword\">of</span> screenDetails<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">openWindow</span><span class=\"token punctuation\">(</span>\n    screen<span class=\"token punctuation\">.</span>availLeft<span class=\"token punctuation\">,</span>\n    screen<span class=\"token punctuation\">.</span>availTop<span class=\"token punctuation\">,</span>\n    screen<span class=\"token punctuation\">.</span>availWidth<span class=\"token punctuation\">,</span>\n    screen<span class=\"token punctuation\">.</span>availHeight<span class=\"token punctuation\">,</span>\n    url<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"window_management_events","title":"Window management events","isH3":false,"content":"<p>The Window Management API provides some events for responding to changes in the available screens:</p>\n<dl>\n  <dt id=\"the\"><a href=\"#the\">The </a><code>ScreenDetails</code> <a href=\"/en-US/docs/Web/API/ScreenDetails/screenschange_event\" title=\"screenschange\"><code>screenschange</code></a> event</dt>\n  <dd>\n    <p>Fired when screens are connected to or disconnected from the system.</p>\n  </dd>\n  <dt id=\"the_2\"><a href=\"#the_2\">The </a><code>ScreenDetails</code> <a href=\"/en-US/docs/Web/API/ScreenDetails/currentscreenchange_event\" title=\"currentscreenchange\"><code>currentscreenchange</code></a> event</dt>\n  <dd>\n    <p>Fired when the window's current screen changes in some way.</p>\n  </dd>\n  <dt id=\"the_3\"><a href=\"#the_3\">The </a><code>Screen</code> <a href=\"/en-US/docs/Web/API/Screen/change_event\" title=\"change\"><code>change</code></a> event</dt>\n  <dd>\n    <p>Fired on a specific screen when it changes in some way.</p>\n  </dd>\n</dl>\n<p>So for example, you could use the <code>screenschange</code> event to detect when the available screens have changed (perhaps when a screen is plugged in or unplugged), report the change, close all windows, and update window arrangements to suit the new configuration:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>screenDetails<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"screenschange\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If the new number of screens is different to the old number of screens,</span>\n  <span class=\"token comment\">// report the difference</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>screenDetails<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> noOfScreens<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The screen count changed from </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>noOfScreens<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> to </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>screenDetails<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// If the windows are open, close them and then open them again</span>\n  <span class=\"token comment\">// So that they fit with the new screen configuration</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>windowRefs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">closeAllWindows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">openWindows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"requestfullscreen_screen_option","title":"requestFullscreen() screen option","isH3":false,"content":"<p>The Window Management API adds a new <code>screen</code> option to the <a href=\"/en-US/docs/Web/API/Element/requestFullscreen\" title=\"requestFullscreen()\"><code>requestFullscreen()</code></a> method that allows you to specify on which screen you want to put the element in fullscreen mode. For example, if you want to make it fullscreen on the primary OS screen:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> primaryScreen <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">getScreenDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">screen</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> screen<span class=\"token punctuation\">.</span>isPrimary<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">requestFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">screen</span><span class=\"token operator\">:</span> primaryScreen <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}}],"toc":[{"text":"Feature detection","id":"feature_detection"},{"text":"Basic usage","id":"basic_usage"},{"text":"Simple single-window per display case","id":"simple_single-window_per_display_case"},{"text":"Window management events","id":"window_management_events"},{"text":"requestFullscreen() screen option","id":"requestfullscreen_screen_option"}],"summary":"This guide explains how to use the Window Management API. The example code seen below is taken from our Multi-window learning environment example (see the source code).","popularity":0.0006,"modified":"2023-11-02T14:37:15.000Z","source":{"folder":"en-us/web/api/window_management_api/using","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/window_management_api/using/index.md","last_commit_url":"https://github.com/mdn/content/commit/bafc473d01411340a547b9fae11702ead2b28016","filename":"index.md"},"short_title":"Using the Window Management API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Window_Management_API","title":"Window Management API"},{"uri":"/en-US/docs/Web/API/Window_Management_API/Using","title":"Using the Window Management API"}],"pageTitle":"Using the Window Management API - Web APIs | MDN","noIndexing":false}}