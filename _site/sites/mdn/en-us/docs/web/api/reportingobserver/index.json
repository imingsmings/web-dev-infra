{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ReportingObserver","mdn_url":"/en-US/docs/Web/API/ReportingObserver","locale":"en-US","native":"English (US)","browserCompat":["api.ReportingObserver"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Reporting_API\">Reporting API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/ReportingObserver\" aria-current=\"page\"><code>ReportingObserver</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/ReportingObserver/ReportingObserver\"><code>ReportingObserver()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/ReportingObserver/disconnect\"><code>disconnect()</code></a></li><li><a href=\"/en-US/docs/Web/API/ReportingObserver/observe\"><code>observe()</code></a></li><li><a href=\"/en-US/docs/Web/API/ReportingObserver/takeRecords\"><code>takeRecords()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Reporting API</summary><ol><li><a href=\"/en-US/docs/Web/API/CSPViolationReportBody\"><code>CSPViolationReportBody</code></a></li><li><a href=\"/en-US/docs/Web/API/DeprecationReportBody\"><code>DeprecationReportBody</code></a></li><li><a href=\"/en-US/docs/Web/API/InterventionReportBody\"><code>InterventionReportBody</code></a></li><li><a href=\"/en-US/docs/Web/API/Report\"><code>Report</code></a></li><li><a href=\"/en-US/docs/Web/API/ReportBody\"><code>ReportBody</code></a></li><li><a href=\"/en-US/docs/Web/API/reportError\"><code>ReportError</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <code>ReportingObserver</code> interface of the <a href=\"/en-US/docs/Web/API/Reporting_API\">Reporting API</a> allows you to collect and access reports.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"reportingobserver\"><a href=\"/en-US/docs/Web/API/ReportingObserver/ReportingObserver\" title=\"ReportingObserver()\"><code>ReportingObserver()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>ReportingObserver</code> object instance, which can be used to collect and access reports.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p><em>This interface has no properties defined on it.</em></p>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"reportingobserver.disconnect\"><a href=\"/en-US/docs/Web/API/ReportingObserver/disconnect\"><code>ReportingObserver.disconnect()</code></a></dt>\n  <dd>\n    <p>Stops a reporting observer that had previously started observing from collecting reports.</p>\n  </dd>\n  <dt id=\"reportingobserver.observe\"><a href=\"/en-US/docs/Web/API/ReportingObserver/observe\"><code>ReportingObserver.observe()</code></a></dt>\n  <dd>\n    <p>Instructs a reporting observer to start collecting reports in its report queue.</p>\n  </dd>\n  <dt id=\"reportingobserver.takerecords\"><a href=\"/en-US/docs/Web/API/ReportingObserver/takeRecords\"><code>ReportingObserver.takeRecords()</code></a></dt>\n  <dd>\n    <p>Returns the current list of reports contained in the observer's report queue, and empties the queue.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<p><em>This interface has no events that fire on it.</em></p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In our <a href=\"https://mdn.github.io/dom-examples/reporting-api/deprecation_report.html\" class=\"external\" target=\"_blank\">deprecation_report.html</a> example, we create a simple reporting observer to observe usage of deprecated features on our web page:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"deprecation\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">buffered</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReportingObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reports<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  reportBtn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">displayReports</span><span class=\"token punctuation\">(</span>reports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>We then tell it to start observing reports using <a href=\"/en-US/docs/Web/API/ReportingObserver/observe\"><code>ReportingObserver.observe()</code></a>; this tells the observer to start collecting reports in its report queue, and runs the callback function specified inside the constructor:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>observer<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Later on in the example we deliberately use the deprecated version of <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a>:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>mozGetUserMedia<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span><span class=\"token function\">mozGetUserMedia</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">,</span> success<span class=\"token punctuation\">,</span> failure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">,</span> success<span class=\"token punctuation\">,</span> failure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This causes a deprecation report to be generated; because of the event handler we set up inside the <code>ReportingObserver()</code> constructor, we can now click the button to display the report details.</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/ReportingObserver/reporting_api_example.png\" alt=\"image of a jolly bearded man with various stats displayed below it about a deprecated feature\" width=\"902\" height=\"476\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> If you look at the <a href=\"https://github.com/mdn/dom-examples/blob/main/reporting-api/deprecation_report.html\" class=\"external\" target=\"_blank\">complete source code</a>, you'll notice that we actually call the deprecated <code>getUserMedia()</code> method twice. After the first time we call <a href=\"/en-US/docs/Web/API/ReportingObserver/takeRecords\"><code>ReportingObserver.takeRecords()</code></a>, which returns the first generated report and empties the queue. Because of this, when the button is pressed only the second report is listed.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/reporting/#interface-reporting-observer","title":"Reporting API"}],"query":"api.ReportingObserver"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ReportingObserver"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Reporting_API\">Reporting API</a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Events","id":"events"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The ReportingObserver interface of the Reporting API allows you to collect and access reports.","popularity":0.0008,"modified":"2023-03-08T05:17:44.000Z","source":{"folder":"en-us/web/api/reportingobserver","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/reportingobserver/index.md","last_commit_url":"https://github.com/mdn/content/commit/930683b0618a36a5bb497cfaedced2f4de767889","filename":"index.md"},"short_title":"ReportingObserver","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ReportingObserver","title":"ReportingObserver"}],"pageTitle":"ReportingObserver - Web APIs | MDN","noIndexing":false}}