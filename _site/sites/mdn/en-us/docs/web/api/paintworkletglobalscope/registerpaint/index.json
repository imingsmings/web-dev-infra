{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"wrong xref macro used (consider changing which macro you use)","name":"MacroWrongXRefError","error":{},"errorStack":"Error: wrong xref macro used (consider changing which macro you use)\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:91:37)\n    at buildIFList (\"/Users/jason/Code/yari/kumascript/macros/APIRef.ejs\":228:26)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/APIRef.ejs\":270:13)\n    at async Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:30)\n    at async render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:40)\n    at async Module.render (file:///Users/jason/Code/yari/kumascript/index.ts:59:36)\n    at async buildDocument (file:///Users/jason/Code/yari/build/index.ts:156:42)\n    at async buildDocumentInteractive (file:///Users/jason/Code/yari/build/cli.ts:35:18)\n    at async buildDocuments (file:///Users/jason/Code/yari/build/cli.ts:135:24)","offset":10,"line":11,"column":1,"macroName":"APIRef","sourceContext":"> | {{APIRef(\"CSS Painting API\")}}{{SeeCompatTable}}\n    ^\n  | <p>\n  |   The <strong><code>registerPaint()</code></strong> method of the","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/paintworkletglobalscope/registerpaint/index.md","macroSource":"{{APIRef(\"CSS Painting API\")}}"}]},"title":"PaintWorkletGlobalScope: registerPaint() method","mdn_url":"/en-US/docs/Web/API/PaintWorkletGlobalScope/registerPaint","locale":"en-US","native":"English (US)","browserCompat":["api.PaintWorkletGlobalScope.registerPaint"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CSS_Painting_API\">CSS Painting API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/PaintWorkletGlobalScope\"><code>PaintWorkletGlobalScope</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PaintWorkletGlobalScope/devicePixelRatio\"><code>devicePixelRatio</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><em><code>registerPaint()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/WorkletGlobalScope\"><code>WorkletGlobalScope</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for CSS Painting API</summary><ol><li><a href=\"/en-US/docs/Web/API/CSS/paintWorklet_static\" data-flaw-src=\"{{APIRef(&quot;CSS Painting API&quot;)}}\"><code>CSS.paintWorklet</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PaintRenderingContext2D</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PaintSize</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>registerPaint()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/PaintWorkletGlobalScope\"><code>PaintWorkletGlobalScope</code></a> interface registers a class to programmatically generate an\n  image where a CSS property expects a file.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> classRef<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"name\"><a href=\"#name\"><code>name</code></a></dt>\n  <dd>\n    <p>The name of the worklet class to register.</p>\n  </dd>\n  <dt id=\"classref\"><a href=\"#classref\"><code>classRef</code></a></dt>\n  <dd>\n    <p>A reference to the class that implements the worklet.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":false,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown when one of the arguments is invalid or missing.</p>\n  </dd>\n  <dt id=\"invalidmodificationerror\"><a href=\"#invalidmodificationerror\"><code>InvalidModificationError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown when the a worklet already exists with the specified name.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  The following shows registering an example worklet module. This should be in a separate\n  js file. Note that <code>registerPaint()</code> is called without a reference to\n  <code>PaintWorkletGlobalScope</code>. The file itself is loaded\n  through <code>CSS.paintWorklet.addModule()</code> (documented here on the parent class\n  of PaintWorklet, at <a href=\"/en-US/docs/Web/API/Worklet/addModule\"><code>Worklet.addModule()</code></a>.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/* checkboardWorklet.js */</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckerboardPainter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> geom<span class=\"token punctuation\">,</span> properties</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Use `ctx` as if it was a normal canvas</span>\n    <span class=\"token keyword\">const</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> geom<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> size<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> geom<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> size<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> colors<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> colors<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> size<span class=\"token punctuation\">,</span> y <span class=\"token operator\">*</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Register our class under a specific name</span>\n<span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"checkerboard\"</span><span class=\"token punctuation\">,</span> CheckerboardPainter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The first step in using a paintworklet is defining the paint worklet using the\n  <code>registerPaint()</code> function, as done above. To use it, you register it with\n  the <code>CSS.paintWorklet.addModule()</code> method:\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"checkboardWorklet.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>\n  You can then use the <code><a href=\"/en-US/docs/Web/CSS/image/paint\"><code>paint()</code></a></code> CSS function in your\n  CSS anywhere an <code><a href=\"/en-US/docs/Web/CSS/image\"><code>&lt;image&gt;</code></a></code> value is valid.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">css</span></p><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">li</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>checkerboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.css-houdini.org/css-paint-api/#dom-paintworkletglobalscope-registerpaint","title":"CSS Painting API Level 1"}],"query":"api.PaintWorkletGlobalScope.registerPaint"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PaintWorkletGlobalScope.registerPaint"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/CSS_Painting_API\">CSS Painting API</a></li>\n  <li><a href=\"/en-US/docs/Web/Guide/Houdini\">Houdini APIs</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Return value","id":"return_value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The registerPaint() method of the\n  PaintWorkletGlobalScope interface registers a class to programmatically generate an\n  image where a CSS property expects a file.","popularity":0,"modified":"2023-04-07T06:19:30.000Z","source":{"folder":"en-us/web/api/paintworkletglobalscope/registerpaint","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/paintworkletglobalscope/registerpaint/index.md","last_commit_url":"https://github.com/mdn/content/commit/312081aabba3885b35a81107b3c2fc53428896c5","filename":"index.md"},"short_title":"registerPaint()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PaintWorkletGlobalScope","title":"PaintWorkletGlobalScope"},{"uri":"/en-US/docs/Web/API/PaintWorkletGlobalScope/registerPaint","title":"registerPaint()"}],"pageTitle":"PaintWorkletGlobalScope: registerPaint() method - Web APIs | MDN","noIndexing":false}}