{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"GPUCommandEncoder: copyBufferToTexture() method","mdn_url":"/en-US/docs/Web/API/GPUCommandEncoder/copyBufferToTexture","locale":"en-US","native":"English (US)","browserCompat":["api.GPUCommandEncoder.copyBufferToTexture"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/label\"><code>label</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/beginComputePass\"><code>beginComputePass()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\"><code>beginRenderPass()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/clearBuffer\"><code>clearBuffer()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/copyBufferToBuffer\"><code>copyBufferToBuffer()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><em><code>copyBufferToTexture()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/copyTextureToBuffer\"><code>copyTextureToBuffer()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/copyTextureToTexture\"><code>copyTextureToTexture()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/finish\"><code>finish()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/insertDebugMarker\"><code>insertDebugMarker()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/popDebugGroup\"><code>popDebugGroup()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/pushDebugGroup\"><code>pushDebugGroup()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/resolveQuerySet\"><code>resolveQuerySet()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder/writeTimestamp\"><code>writeTimestamp()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebGPU API</summary><ol><li><a href=\"/en-US/docs/Web/API/GPU\"><code>GPU</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapterInfo\"><code>GPUAdapterInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroup\"><code>GPUBindGroup</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCanvasContext\"><code>GPUCanvasContext</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationInfo\"><code>GPUCompilationInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationMessage\"><code>GPUCompilationMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDeviceLostInfo\"><code>GPUDeviceLostInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUExternalTexture\"><code>GPUExternalTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUInternalError\"><code>GPUInternalError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUOutOfMemoryError\"><code>GPUOutOfMemoryError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQuerySet\"><code>GPUQuerySet</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundle\"><code>GPURenderBundle</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSampler\"><code>GPUSampler</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTextureView\"><code>GPUTextureView</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUUncapturedErrorEvent\"><code>GPUUncapturedErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/gpu\"><code>Navigator.gpu</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/gpu\"><code>WorkerNavigator.gpu</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>copyBufferToTexture()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a> interface encodes a command that copies data from a <a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a> to a <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a>.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">copyBufferToTexture</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> destination<span class=\"token punctuation\">,</span> copySize<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"source\"><a href=\"#source\"><code>source</code></a></dt>\n  <dd>\n    <p>An object that defines the buffer to copy from, plus the layout of the data in the buffer to be copied to the texture. Combined with <code>copySize</code>, it defines the region of the source buffer. <code>source</code> can take the following properties:</p>\n    <dl>\n      <dt id=\"buffer\"><a href=\"#buffer\"><code>buffer</code></a></dt>\n      <dd>\n        <p>The <a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a> to copy from.</p>\n      </dd>\n      <dt id=\"offset\"><a href=\"#offset\"><code>offset</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>The offset, in bytes, from the beginning of <code>data</code> to the start of the image data to be copied. If omitted, <code>offset</code> defaults to 0.</p>\n      </dd>\n      <dt id=\"bytesperrow\"><a href=\"#bytesperrow\"><code>bytesPerRow</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A number representing the stride, in bytes, between the start of each block row (i.e. a row of complete texel blocks) and the subsequent block row. This is required if there are multiple block rows (i.e. the copy height or depth is more than one block).</p>\n      </dd>\n      <dt id=\"rowsperimage\"><a href=\"#rowsperimage\"><code>rowsPerImage</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>The number of block rows per single image inside the data. <code>bytesPerRow</code> × <code>rowsPerImage</code> will give you the stride, in bytes, between the start of each complete image. This is required if there are multiple images to copy.</p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"destination\"><a href=\"#destination\"><code>destination</code></a></dt>\n  <dd>\n    <p>An object defining the texture to write the data to. Combined with <code>copySize</code>, defines the region of the destination texture subresource. <code>destination</code> can take the following properties:</p>\n    <dl>\n      <dt id=\"aspect\"><a href=\"#aspect\"><code>aspect</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An enumerated value defining which aspects of the texture to write the data to. Possible values are:</p>\n        <dl>\n          <dt id=\"all\"><a href=\"#all\"><code>\"all\"</code></a></dt>\n          <dd>\n            <p>All available aspects of the texture format will be written to, which can mean all or any of color, depth, and stencil, depending on what kind of format you are dealing with.</p>\n          </dd>\n          <dt id=\"depth-only\"><a href=\"#depth-only\"><code>\"depth-only\"</code></a></dt>\n          <dd>\n            <p>Only the depth aspect of a <a href=\"https://gpuweb.github.io/gpuweb/#combined-depth-stencil-format\" class=\"external\" target=\"_blank\">depth-or-stencil format</a> will be written to.</p>\n          </dd>\n          <dt id=\"stencil-only\"><a href=\"#stencil-only\"><code>\"stencil-only\"</code></a></dt>\n          <dd>\n            <p>Only the stencil aspect of a depth-or-stencil format will be written to.</p>\n          </dd>\n        </dl>\n        <p>If omitted, <code>aspect</code> takes a value of <code>\"all\"</code>.</p>\n      </dd>\n      <dt id=\"miplevel\"><a href=\"#miplevel\"><code>mipLevel</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A number representing the mip-map level of the texture to write the data to. If omitted, <code>mipLevel</code> defaults to 0.</p>\n      </dd>\n      <dt id=\"origin\"><a href=\"#origin\"><code>origin</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An object or array specifying the origin of the copy — the minimum corner of the texture region to write the data to. Together with <code>size</code>, this defines the full extent of the region to copy to. The <code>x</code>, <code>y</code>, and <code>z</code> values default to 0 if any of all of <code>origin</code> is omitted.</p>\n        <p>What follows is a sample array:</p>\n        <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n        <p>The object equivalent would look like this:</p>\n        <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">z</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n      </dd>\n      <dt id=\"texture\"><a href=\"#texture\"><code>texture</code></a></dt>\n      <dd>\n        <p>A <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a> object representing the texture to write the data to.</p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"copysize\"><a href=\"#copysize\"><code>copySize</code></a></dt>\n  <dd>\n    <p>An object or array specifying the width, height, and depth/array layer count of the copied data. The width value must always be specified, while the height and depth/array layer count values are optional and will default to 1 if omitted.</p>\n    <p>What follows is a sample <code>copySize</code> array:</p>\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n    <p>The object equivalent would look like this:</p>\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">depthOrArrayLayers</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>Undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"validation","title":"Validation","isH3":true,"content":"<p>The following criteria must be met when calling <strong><code>copyBufferToTexture()</code></strong>, otherwise a <a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a> is generated and the <a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a> becomes invalid.</p>\n<p>For the <code>source</code>:</p>\n<ul>\n  <li><code>source.bytesPerRow</code> is a multiple of 256.</li>\n  <li>The <code>source.buffer</code>'s <a href=\"/en-US/docs/Web/API/GPUBuffer/usage\"><code>GPUBuffer.usage</code></a> includes the <code>GPUBufferUsage.COPY_SRC</code> flag.</li>\n</ul>\n<p>For the <code>destination</code>:</p>\n<ul>\n  <li><code>mipLevel</code> is less than the <a href=\"/en-US/docs/Web/API/GPUTexture/mipLevelCount\"><code>GPUTexture.mipLevelCount</code></a>.</li>\n  <li><code>origin.x</code> is a multiple of the texel block width of the <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a>.</li>\n  <li><code>origin.y</code> is a multiple of the texel block height of the <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a>.</li>\n  <li>If the <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a> is a <a href=\"https://gpuweb.github.io/gpuweb/#combined-depth-stencil-format\" class=\"external\" target=\"_blank\">depth-or-stencil format</a> or <a href=\"/en-US/docs/Web/API/GPUTexture/sampleCount\"><code>GPUTexture.sampleCount</code></a> is more than 1, the subresource size is equal to <code>size</code>.</li>\n  <li>The <code>destination</code>'s <a href=\"/en-US/docs/Web/API/GPUTexture/usage\"><code>GPUTexture.usage</code></a> includes the <code>GPUTextureUsage.COPY_DST</code> flag.</li>\n  <li>The <code>destination</code>'s <a href=\"/en-US/docs/Web/API/GPUTexture/sampleCount\"><code>GPUTexture.sampleCount</code></a> is 1.</li>\n  <li><code>destination.aspect</code> refers to a single aspect of the <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a>.</li>\n  <li>That aspect is a valid image copy destination according to <a href=\"https://gpuweb.github.io/gpuweb/#combined-depth-stencil-format\" class=\"external\" target=\"_blank\">depth-or-stencil formats</a>.</li>\n  <li>The <code>destination</code> is compatible with the <code>copySize</code>.</li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>commandEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">copyBufferToTexture</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">buffer</span><span class=\"token operator\">:</span> sourceBuffer<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">texture</span><span class=\"token operator\">:</span> destinationTexture<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">depthOrArrayLayers</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-copybuffertotexture","title":"WebGPU"}],"query":"api.GPUCommandEncoder.copyBufferToTexture"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.GPUCommandEncoder.copyBufferToTexture"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The copyBufferToTexture() method of the\n  GPUCommandEncoder interface encodes a command that copies data from a GPUBuffer to a GPUTexture.","popularity":0,"modified":"2023-07-07T07:19:19.000Z","source":{"folder":"en-us/web/api/gpucommandencoder/copybuffertotexture","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/gpucommandencoder/copybuffertotexture/index.md","last_commit_url":"https://github.com/mdn/content/commit/acfe8c9f1f4145f77653a2bc64a9744b001358dc","filename":"index.md"},"short_title":"copyBufferToTexture()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/GPUCommandEncoder","title":"GPUCommandEncoder"},{"uri":"/en-US/docs/Web/API/GPUCommandEncoder/copyBufferToTexture","title":"copyBufferToTexture()"}],"pageTitle":"GPUCommandEncoder: copyBufferToTexture() method - Web APIs | MDN","noIndexing":false}}