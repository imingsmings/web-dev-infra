{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebSocket: binaryType property","mdn_url":"/en-US/docs/Web/API/WebSocket/binaryType","locale":"en-US","native":"English (US)","browserCompat":["api.WebSocket.binaryType"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebSocket\"><code>WebSocket</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/WebSocket/WebSocket\"><code>WebSocket()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><em><code>binaryType</code> </em></li><li><a href=\"/en-US/docs/Web/API/WebSocket/bufferedAmount\"><code>bufferedAmount</code></a></li><li><a href=\"/en-US/docs/Web/API/WebSocket/extensions\"><code>extensions</code></a></li><li><a href=\"/en-US/docs/Web/API/WebSocket/protocol\"><code>protocol</code></a></li><li><a href=\"/en-US/docs/Web/API/WebSocket/readyState\"><code>readyState</code></a></li><li><a href=\"/en-US/docs/Web/API/WebSocket/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/WebSocket/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/WebSocket/send\"><code>send()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/WebSocket/close_event\"><code>close</code></a></li><li><a href=\"/en-US/docs/Web/API/WebSocket/error_event\"><code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/WebSocket/message_event\"><code>message</code></a></li><li><a href=\"/en-US/docs/Web/API/WebSocket/open_event\"><code>open</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>WebSocket.binaryType</code></strong> property controls the type of\n  binary data being received over the WebSocket connection.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A string:</p>\n<dl>\n  <dt id=\"blob\"><a href=\"#blob\"><code>\"blob\"</code></a></dt>\n  <dd>\n    <p>Use <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> objects for binary data. This is the default value.</p>\n  </dd>\n  <dt id=\"arraybuffer\"><a href=\"#arraybuffer\"><code>\"arraybuffer\"</code></a></dt>\n  <dd>\n    <p>Use <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> objects for binary data.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create WebSocket connection.</span>\n<span class=\"token keyword\">const</span> socket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8080\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Change binary type from \"blob\" to \"arraybuffer\"</span>\nsocket<span class=\"token punctuation\">.</span>binaryType <span class=\"token operator\">=</span> <span class=\"token string\">\"arraybuffer\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Listen for messages</span>\nsocket<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// binary frame</span>\n    <span class=\"token keyword\">const</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">.</span><span class=\"token function\">getInt32</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// text frame</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://websockets.spec.whatwg.org/#ref-for-dom-websocket-binarytypeâ‘ ","title":"WebSockets Standard"}],"query":"api.WebSocket.binaryType"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WebSocket.binaryType"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The WebSocket.binaryType property controls the type of\n  binary data being received over the WebSocket connection.","popularity":0.008,"modified":"2023-04-08T06:46:30.000Z","source":{"folder":"en-us/web/api/websocket/binarytype","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/websocket/binarytype/index.md","last_commit_url":"https://github.com/mdn/content/commit/eda49877b9078b24cd18f794470e5e225add9b94","filename":"index.md"},"short_title":"binaryType","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebSocket","title":"WebSocket"},{"uri":"/en-US/docs/Web/API/WebSocket/binaryType","title":"binaryType"}],"pageTitle":"WebSocket: binaryType property - Web APIs | MDN","noIndexing":false}}