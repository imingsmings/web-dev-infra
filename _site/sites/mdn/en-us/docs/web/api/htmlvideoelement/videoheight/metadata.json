{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/HTMLMediaElement/resize does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/HTMLMediaElement/resize does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":8,"line":32,"column":168,"macroName":"domxref","sourceContext":"  | <p>If the element is currently displaying the poster frame rather than rendered video, the poster frame's intrinsic size is considered to be the size of the <code>&#x3C;video></code> element.</p>\n  | <p>\n> |   If at any time the intrinsic size of the media changes and the element's {{domxref(\"HTMLMediaElement.readyState\", \"readyState\")}} isn't <code>HAVE_NOTHING</code>, a {{domxref(\"HTMLMediaElement.resize\", \"resize\")}} event will be sent to the <code>&#x3C;video></code> element.\n                                                                                                                                                                           ^\n  |   This can happen when the element switches from displaying the poster frame to displaying video content, or when the displayed video track changes.\n  | </p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/htmlvideoelement/videoheight/index.md","macroSource":"{{domxref(\"HTMLMediaElement.resize\", \"resize\")}}"},{"id":"macro1","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/HTMLVideoElement/resize does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/HTMLVideoElement/resize does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":8,"line":36,"column":43,"macroName":"domxref","sourceContext":"  | </p>\n  | <h2>Examples</h2>\n> | <p>This example creates a handler for the {{domxref(\"HTMLVideoElement.resize\", \"resize\")}} event that resizes the {{HTMLElement(\"video\")}} element to match the intrinsic size of its contents.</p>\n                                              ^\n  | <pre class=\"brush: js\">let v = document.getElementById(\"myVideo\");\n  | ","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/htmlvideoelement/videoheight/index.md","macroSource":"{{domxref(\"HTMLVideoElement.resize\", \"resize\")}}"}]},"title":"HTMLVideoElement: videoHeight property","mdn_url":"/en-US/docs/Web/API/HTMLVideoElement/videoHeight","locale":"en-US","native":"English (US)","browserCompat":["api.HTMLVideoElement.videoHeight"],"summary":"The HTMLVideoElement interface's read-only videoHeight property indicates the intrinsic height of the video, expressed in CSS pixels.\n  In simple terms, this is the height of the media in its natural size.","popularity":0.0019,"modified":"2023-07-07T07:19:19.000Z","source":{"folder":"en-us/web/api/htmlvideoelement/videoheight","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/htmlvideoelement/videoheight/index.md","last_commit_url":"https://github.com/mdn/content/commit/acfe8c9f1f4145f77653a2bc64a9744b001358dc","filename":"index.md"},"short_title":"videoHeight","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/HTMLVideoElement","title":"HTMLVideoElement"},{"uri":"/en-US/docs/Web/API/HTMLVideoElement/videoHeight","title":"videoHeight"}],"pageTitle":"HTMLVideoElement: videoHeight property - Web APIs | MDN","noIndexing":false,"hash":"dace5736b7d9cdb22e561eadb14f09a0a8971697fe55dfa699d9a95acd036c3d"}