{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"The WebSocket API (WebSockets)","mdn_url":"/en-US/docs/Web/API/WebSockets_API","locale":"en-US","native":"English (US)","browserCompat":["api.WebSocket"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Websockets_API\">Websockets API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\">Writing WebSocket client applications</a></li><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\">Writing WebSocket servers</a></li><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_server\">Writing a WebSocket server in C#</a></li><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_Java\">Writing a WebSocket server in Java</a></li><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_JavaScript_Deno\">Writing a WebSocket server in JavaScript (Deno)</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/WebSocket\"><code>WebSocket</code></a></li><li><a href=\"/en-US/docs/Web/API/CloseEvent\"><code>CloseEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong>WebSocket API</strong> is an advanced technology that makes it possible to open a two-way interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> While a WebSocket connection is functionally somewhat similar to standard Unix-style sockets, they are not related.</p>\n</div>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"websocket\"><a href=\"/en-US/docs/Web/API/WebSocket\"><code>WebSocket</code></a></dt>\n  <dd>\n    <p>The primary interface for connecting to a WebSocket server and then sending and receiving data on the connection.</p>\n  </dd>\n  <dt id=\"closeevent\"><a href=\"/en-US/docs/Web/API/CloseEvent\"><code>CloseEvent</code></a></dt>\n  <dd>\n    <p>The event sent by the WebSocket object when the connection closes.</p>\n  </dd>\n  <dt id=\"messageevent\"><a href=\"/en-US/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></dt>\n  <dd>\n    <p>The event sent by the WebSocket object when a message is received from the server.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"guides","title":"Guides","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\">Writing WebSocket client applications</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\">Writing WebSocket servers</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_server\">Writing a WebSocket server in C#</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_Java\">Writing a WebSocket server in Java</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_JavaScript_Deno\">Writing a WebSocket server in JavaScript (Deno)</a></li>\n</ul>"}},{"type":"prose","value":{"id":"tools","title":"Tools","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.asyncapi.com/\" class=\"external\" target=\"_blank\">AsyncAPI</a>: A specification for describing event-driven architectures based on protocols like WebSocket. You can use it to describe WebSocket-based APIs just as you would describe REST APIs with the OpenAPI specification. Learn <a href=\"https://www.asyncapi.com/blog/websocket-part1\" class=\"external\" target=\"_blank\">why you should consider using AsyncAPI with WebSocket</a> and <a href=\"https://www.asyncapi.com/blog/websocket-part2\" class=\"external\" target=\"_blank\">how to do so</a>.</li>\n  <li><a href=\"https://hacks.mozilla.org/2017/06/introducing-humblenet-a-cross-platform-networking-library-that-works-in-the-browser/\" class=\"external\" target=\"_blank\">HumbleNet</a>: A cross-platform networking library that works in the browser. It consists of a C wrapper around WebSockets and WebRTC that abstracts away cross-browser differences, facilitating the creation of multi-user networking functionality for games and other apps.</li>\n  <li><a href=\"https://github.com/uNetworking/uWebSockets\" class=\"external\" target=\"_blank\">µWebSockets</a>: Highly scalable WebSocket server and client implementation for <a href=\"https://isocpp.org/\" class=\"external\" target=\"_blank\">C++11</a> and <a href=\"https://nodejs.org\" class=\"external\" target=\"_blank\">Node.js</a>.</li>\n  <li><a href=\"https://socket.io\" class=\"external\" target=\"_blank\">Socket.IO</a>: A long polling/WebSocket based third party transfer protocol for <a href=\"https://nodejs.org\" class=\"external\" target=\"_blank\">Node.js</a>.</li>\n  <li><a href=\"https://socketcluster.io/\" class=\"external\" target=\"_blank\">SocketCluster</a>: A pub/sub WebSocket framework for <a href=\"https://nodejs.org\" class=\"external\" target=\"_blank\">Node.js</a> with a focus on scalability.</li>\n  <li><a href=\"https://github.com/theturtle32/WebSocket-Node\" class=\"external\" target=\"_blank\">WebSocket-Node</a>: A WebSocket server API implementation for <a href=\"https://nodejs.org\" class=\"external\" target=\"_blank\">Node.js</a>.</li>\n  <li><a href=\"https://www.totaljs.com\" class=\"external\" target=\"_blank\">Total.js</a>: Web application framework for <a href=\"https://nodejs.org/en/\" class=\"external\" target=\"_blank\">Node.js</a> (Example: <a href=\"https://github.com/totaljs/examples/tree/master/websocket\" class=\"external\" target=\"_blank\">WebSocket chat</a>)</li>\n  <li><a href=\"https://www.npmjs.com/package/faye-websocket\" class=\"external\" target=\"_blank\">Faye</a>: A <a href=\"/en-US/docs/Web/API/WebSocket\"><code>WebSocket</code></a> (two-ways connections) and <a href=\"/en-US/docs/Web/API/EventSource\">EventSource</a> (one-way connections) for <a href=\"https://nodejs.org\" class=\"external\" target=\"_blank\">Node.js</a> Server and Client.</li>\n  <li><a href=\"https://dotnet.microsoft.com/en-us/apps/aspnet/signalr\" class=\"external\" target=\"_blank\">SignalR</a>: SignalR will use WebSockets under the covers when it's available, and gracefully fallback to other techniques and technologies when it isn't, while your application code stays the same.</li>\n  <li><a href=\"https://caddyserver.com/\" class=\"external\" target=\"_blank\">Caddy</a>: A web server capable of proxying arbitrary commands (stdin/stdout) as a websocket.</li>\n  <li><a href=\"https://github.com/websockets/ws\" class=\"external\" target=\"_blank\">ws</a>: a popular WebSocket client &amp; server library for <a href=\"https://nodejs.org/\" class=\"external\" target=\"_blank\">Node.js</a>.</li>\n  <li><a href=\"https://github.com/bigstepinc/jsonrpc-bidirectional\" class=\"external\" target=\"_blank\">jsonrpc-bidirectional</a>: Asynchronous RPC which, on a single connection, may have functions exported on the server and, and the same time, on the client (client may call server, server may also call client).</li>\n  <li><a href=\"https://github.com/ninenines/cowboy\" class=\"external\" target=\"_blank\">cowboy</a>: Cowboy is a small, fast and modern HTTP server for Erlang/OTP with WebSocket support.</li>\n  <li><a href=\"https://zeromq.org\" class=\"external\" target=\"_blank\">ZeroMQ</a>: ZeroMQ is embeddable networking library that carries messages across in-process, IPC, TCP, UDP, TIPC, multicast and WebSocket.</li>\n  <li><a href=\"https://websocketking.com\" class=\"external\" target=\"_blank\">WebSocket King</a>: A client tool to help develop, test and work with WebSocket servers.</li>\n  <li><a href=\"https://github.com/napengam/phpWebSocketServer\" class=\"external\" target=\"_blank\">PHP WebSocket Server</a>: Server written in PHP to handle connections via websockets wss:// or ws://and normal sockets over ssl:// ,tcp://</li>\n  <li><a href=\"https://channels.readthedocs.io/en/stable/index.html\" class=\"external\" target=\"_blank\">Channels</a>: Django library that adds support for WebSockets (and other protocols that require long running asynchronous connections).</li>\n  <li><a href=\"https://flask-socketio.readthedocs.io/en/latest/\" class=\"external\" target=\"_blank\">Flask-SocketIO</a>: gives Flask applications access to low latency bi-directional communications between the clients and the server.</li>\n  <li><a href=\"https://pkg.go.dev/github.com/gorilla/websocket\" class=\"external\" target=\"_blank\">Gorilla WebSocket</a>: Gorilla WebSocket is a <a href=\"https://go.dev/\" class=\"external\" target=\"_blank\">Go</a> implementation of the WebSocket protocol.</li>\n</ul>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://websockets.spec.whatwg.org/#the-websocket-interface","title":"WebSockets Standard"}],"query":"api.WebSocket"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WebSocket"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://datatracker.ietf.org/doc/html/rfc6455\" class=\"external\" target=\"_blank\">RFC 6455 — The WebSocket Protocol</a></li>\n  <li><a href=\"https://websockets.spec.whatwg.org/\" class=\"external\" target=\"_blank\">WebSocket API Specification</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Server-sent_events\">Server-Sent Events</a></li>\n</ul>"}}],"toc":[{"text":"Interfaces","id":"interfaces"},{"text":"Guides","id":"guides"},{"text":"Tools","id":"tools"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The WebSocket API is an advanced technology that makes it possible to open a two-way interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.","popularity":0.1282,"modified":"2023-11-22T00:58:37.000Z","source":{"folder":"en-us/web/api/websockets_api","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/websockets_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/c215109b90da51435eaa2c94a8f6764909f628e0","filename":"index.md"},"short_title":"The WebSocket API (WebSockets)","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebSockets_API","title":"The WebSocket API (WebSockets)"}],"pageTitle":"The WebSocket API (WebSockets) - Web APIs | MDN","noIndexing":false}}