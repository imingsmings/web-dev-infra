{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Writing a WebSocket server in Java","mdn_url":"/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_Java","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Websockets_API\">Websockets API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\">Writing WebSocket client applications</a></li><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\">Writing WebSocket servers</a></li><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_server\">Writing a WebSocket server in C#</a></li><li><em><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_Java\" aria-current=\"page\">Writing a WebSocket server in Java</a></em></li><li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_JavaScript_Deno\">Writing a WebSocket server in JavaScript (Deno)</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/WebSocket\"><code>WebSocket</code></a></li><li><a href=\"/en-US/docs/Web/API/CloseEvent\"><code>CloseEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>This example shows you how to create a WebSocket API server using Oracle Java.</p>\n<p>Although other server-side languages can be used to create a WebSocket server, this example uses Oracle Java to simplify the example code.</p>\n<p>This server conforms to <a href=\"https://datatracker.ietf.org/doc/html/rfc6455\" class=\"external\" target=\"_blank\">RFC 6455</a>, so it only handles connections from Chrome version 16, Firefox 11, IE 10 and higher.</p>"}},{"type":"prose","value":{"id":"first_steps","title":"First steps","isH3":false,"content":"<p>WebSockets communicate over a <a href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol\" class=\"external\" target=\"_blank\">TCP (Transmission Control Protocol)</a> connection. Java's <a href=\"https://docs.oracle.com/javase/8/docs/api/java/net/ServerSocket.html\" class=\"external\" target=\"_blank\">ServerSocket</a> class is located in the <code>java.net</code> package.</p>"}},{"type":"prose","value":{"id":"serversocket","title":"ServerSocket","isH3":true,"content":"<p>The <code>ServerSocket</code> constructor accepts a single parameter <code>port</code> of type <code>int</code>.</p>\n<p>When you instantiate the ServerSocket class, it is bound to the port number you specified by the <em>port</em> argument.</p>\n<p>Here's an implementation split into parts:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">java</span></p><pre class=\"brush: java notranslate\"><code><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OutputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerSocket</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Socket</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageDigest</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NoSuchAlgorithmException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Base64</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>regex<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Matcher</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>regex<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Pattern</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebSocket</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">NoSuchAlgorithmException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ServerSocket</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerSocket</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Server has started on 127.0.0.1:80.\\r\\nWaiting for a connectionâ€¦\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Socket</span> client <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A client connected.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"socket_methods","title":"Socket Methods","isH3":true,"content":"<dl>\n  <dt id=\"java.net.socket.getinputstream\"><a href=\"#java.net.socket.getinputstream\"><code>java.net.Socket.getInputStream()</code></a></dt>\n  <dd>\n    <p>Returns an input stream for this socket.</p>\n  </dd>\n  <dt id=\"java.net.socket.getoutputstream\"><a href=\"#java.net.socket.getoutputstream\"><code>java.net.Socket.getOutputStream()</code></a></dt>\n  <dd>\n    <p>Returns an output stream for this socket.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"outputstream_methods","title":"OutputStream Methods","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">java</span></p><pre class=\"brush: java notranslate\"><code><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> off<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Writes <code>len</code> bytes from the specified byte array starting at offset <code>off</code> to this output stream.</p>"}},{"type":"prose","value":{"id":"inputstream_methods","title":"InputStream Methods","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">java</span></p><pre class=\"brush: java notranslate\"><code><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> off<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Reads up to <em>len</em> bytes of data from the input stream into an array of bytes.</p>\n<p>Let us extend our example.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">java</span></p><pre class=\"brush: java notranslate\"><code><span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">OutputStream</span> out <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Scanner</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"handshaking","title":"Handshaking","isH3":false,"content":"<p>When a client connects to a server, it sends a GET request to upgrade the connection to a WebSocket from a simple HTTP request. This is known as handshaking.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">java</span></p><pre class=\"brush: java notranslate\"><code><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">String</span> data <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">useDelimiter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\r\\\\n\\\\r\\\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Matcher</span> get <span class=\"token operator\">=</span> <span class=\"token class-name\">Pattern</span><span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"^GET\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">matcher</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Creating the response is easier than understanding why you must do it in this way.</p>\n<p>You must,</p>\n<ol>\n  <li>Obtain the value of <em>Sec-WebSocket-Key</em> request header without any leading and trailing whitespace</li>\n  <li>Link it with \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\"</li>\n  <li>Compute SHA-1 and Base64 code of it</li>\n  <li>Write it back as value of <em>Sec-WebSocket-Accept</em> response header as part of an HTTP response.</li>\n</ol>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">java</span></p><pre class=\"brush: java notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>get<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Matcher</span> match <span class=\"token operator\">=</span> <span class=\"token class-name\">Pattern</span><span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sec-WebSocket-Key: (.*)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">matcher</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  match<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> response <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"HTTP/1.1 101 Switching Protocols\\r\\n\"</span>\n    <span class=\"token operator\">+</span> <span class=\"token string\">\"Connection: Upgrade\\r\\n\"</span>\n    <span class=\"token operator\">+</span> <span class=\"token string\">\"Upgrade: websocket\\r\\n\"</span>\n    <span class=\"token operator\">+</span> <span class=\"token string\">\"Sec-WebSocket-Accept: \"</span>\n    <span class=\"token operator\">+</span> <span class=\"token class-name\">Base64</span><span class=\"token punctuation\">.</span><span class=\"token function\">getEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">encodeToString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageDigest</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SHA-1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"decoding_messages","title":"Decoding messages","isH3":false,"content":"<p>After a successful handshake, client can send messages to the server, but now these are encoded.</p>\n<p>If we send \"abcdef\", we get these bytes:</p>\n<pre class=\"brush: plain notranslate\">129 134 167 225 225 210 198 131 130 182 194 135\n</pre>\n<ul>\n  <li>\n    129:\n    <figure class=\"table-container\"><table>\n      <thead>\n        <tr>\n          <th>FIN (Is this the whole message?)</th>\n          <th>RSV1</th>\n          <th>RSV2</th>\n          <th>RSV3</th>\n          <th>Opcode</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>1</td>\n          <td>0</td>\n          <td>0</td>\n          <td>0</td>\n          <td>0x1=0001</td>\n        </tr>\n      </tbody>\n    </table></figure>FIN: You can send your message in frames, but now keep things simple.\n    Opcode <em>0x1</em> means this is a text. <a href=\"https://datatracker.ietf.org/doc/html/rfc6455#section-5.2\" class=\"external\" target=\"_blank\">Full list of Opcodes</a>\n  </li>\n  <li>\n    134:\n    If the second byte minus 128 is between 0 and 125, this is the length of the message. If it is 126, the following 2 bytes (16-bit unsigned integer), if 127, the following 8 bytes (64-bit unsigned integer, the most significant bit MUST be 0) are the length.\n    <div class=\"notecard note\" id=\"sect1\">\n      <p><strong>Note:</strong> It can take 128 because the first bit is always 1.</p>\n    </div>\n  </li>\n  <li>167, 225, 225 and 210 are the bytes of the key to decode. It changes every time.</li>\n  <li>The remaining encoded bytes are the message.</li>\n</ul>"}},{"type":"prose","value":{"id":"decoding_algorithm","title":"Decoding algorithm","isH3":true,"content":"<p>decoded byte = encoded byte XOR (position of encoded byte BITWISE AND 0x3)th byte of key</p>\n<p>Example in Java:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">java</span></p><pre class=\"brush: java notranslate\"><code>          <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> decoded <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> encoded <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">198</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">131</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">182</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">194</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">135</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> key <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">167</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">225</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">225</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token number\">210</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> encoded<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            decoded<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n        s<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      server<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"related","title":"Related","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\">Writing WebSocket servers</a></li>\n</ul>"}}],"toc":[{"text":"First steps","id":"first_steps"},{"text":"Handshaking","id":"handshaking"},{"text":"Decoding messages","id":"decoding_messages"},{"text":"Related","id":"related"}],"summary":"This example shows you how to create a WebSocket API server using Oracle Java.","popularity":0.0099,"modified":"2023-07-25T00:27:48.000Z","source":{"folder":"en-us/web/api/websockets_api/writing_a_websocket_server_in_java","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/websockets_api/writing_a_websocket_server_in_java/index.md","last_commit_url":"https://github.com/mdn/content/commit/592f6ec42e54981b6573b58ec0343c9aa8cbbda8","filename":"index.md"},"short_title":"Writing a WebSocket server in Java","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebSockets_API","title":"The WebSocket API (WebSockets)"},{"uri":"/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_Java","title":"Writing a WebSocket server in Java"}],"pageTitle":"Writing a WebSocket server in Java - Web APIs | MDN","noIndexing":false}}