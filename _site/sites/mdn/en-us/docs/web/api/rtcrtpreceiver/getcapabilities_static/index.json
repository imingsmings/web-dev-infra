{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCRtpReceiver: getCapabilities() static method","mdn_url":"/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities_static","locale":"en-US","native":"English (US)","browserCompat":["api.RTCRtpReceiver.getCapabilities_static"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Protocols\">Introduction to WebRTC protocols</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Perfect_negotiation\">Establishing a connection: The WebRTC perfect negotiation pattern</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Session_lifetime\">Lifetime of a WebRTC session</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling\">Signaling and video calling</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Using_data_channels\">Using WebRTC data channels</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Using_DTMF\">Using DTMF with WebRTC</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms\">Using WebRTC Encoded Transforms</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API#interoperability\">WebRTC API</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Simple_RTCDataChannel_sample\">A simple RTCDataChannel sample</a></li><li><a href=\"/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs\">Building an Internet-Connected Phone with PeerJS</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransformer\"><code>RTCRtpScriptTransformer</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedAudioFrame\"><code>RTCEncodedAudioFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTransformEvent\"><code>RTCTransformEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/transform\"><code>RTCRtpSender.transform</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope/rtctransform_event\"><code>DedicatedWorkerGlobalScope</code>: <code>rtctransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender/tonechange_event\"><code>RTCDTMFSender</code>: <code>tonechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/bufferedamountlow_event\"><code>RTCDataChannel</code>: <code>bufferedamountlow</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/close_event\"><code>RTCDataChannel</code>: <code>close</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/closing_event\"><code>RTCDataChannel</code>: <code>closing</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/error_event\"><code>RTCDataChannel</code>: <code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/message_event\"><code>RTCDataChannel</code>: <code>message</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel/open_event\"><code>RTCDataChannel</code>: <code>open</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport/error_event\"><code>RTCDtlsTransport</code>: <code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport/statechange_event\"><code>RTCDtlsTransport</code>: <code>statechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/error_event\"><code>RTCIceTransport</code>: <code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event\"><code>RTCIceTransport</code>: <code>gatheringstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event\"><code>RTCIceTransport</code>: <code>selectedcandidatepairchange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/statechange_event\"><code>RTCIceTransport</code>: <code>statechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event\"><code>RTCPeerConnection</code>: <code>connectionstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/datachannel_event\"><code>RTCPeerConnection</code>: <code>datachannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event\"><code>RTCPeerConnection</code>: <code>icecandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event\"><code>RTCPeerConnection</code>: <code>icecandidateerror</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\"><code>RTCPeerConnection</code>: <code>iceconnectionstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\"><code>RTCPeerConnection</code>: <code>icegatheringstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>RTCPeerConnection</code>: <code>negotiationneeded</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\"><code>RTCPeerConnection</code>: <code>signalingstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/track_event\"><code>RTCPeerConnection</code>: <code>track</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport/error_event\"><code>RTCSctpTransport</code>: <code>error</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <em>static method</em> <strong><code>RTCRtpReceiver.getCapabilities()</code></strong> returns an object describing the codec and header extension capabilities supported by <a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> objects on the current device.</p>\n<p>You can, similarly, obtain the capabilities of <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> objects by calling the static function <a href=\"/en-US/docs/Web/API/RTCRtpSender/getCapabilities_static\" title=\"RTCRtpSender.getCapabilities()\"><code>RTCRtpSender.getCapabilities()</code></a>.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>RTCRtpReceiver<span class=\"token punctuation\">.</span><span class=\"token function\">getCapabilities</span><span class=\"token punctuation\">(</span>kind<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"kind\"><a href=\"#kind\"><code>kind</code></a></dt>\n  <dd>\n    <p>\n      A string indicating the type of media for which the browser's receiver capabilities are requested.\n      The supported media kinds are: <code>audio</code> and <code>video</code>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A new object that indicates what capabilities the browser has for receiving the specified media kind over an <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.\n  If the browser doesn't have any support for the given media <code>kind</code>, the returned value is <code>null</code>.\n</p>\n<p>The returned object has the following properties:</p>\n<dl>\n  <dt id=\"codecs\"><a href=\"#codecs\"><code>codecs</code></a></dt>\n  <dd>\n    <p>An array of objects, each describing the basic capabilities of a single <a href=\"/en-US/docs/Web/Media/Formats/WebRTC_codecs\">media codec</a> supported by the <a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a>.</p>\n    <div class=\"notecard note\" id=\"sect1\">\n      <p>\n        <strong>Note:</strong> The array contains special entries that represent the underlying components of the transport — these may be ignored if you're only interested in the actual codecs used for the media itself.\n        These are described below in the section <a href=\"#the_codecs_array\">The codecs array</a>.\n      </p>\n    </div>\n    <p>Each codec object has the following properties:</p>\n    <dl>\n      <dt id=\"channels\"><a href=\"#channels\"><code>channels</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A positive integer value indicating the maximum number of channels supported by the codec; for example, a codec that supports only mono sound would have a value of 1; stereo codecs would have a 2, etc.</p>\n      </dd>\n      <dt id=\"clockrate\"><a href=\"#clockrate\"><code>clockRate</code></a></dt>\n      <dd>\n        <p>\n          A positive integer specifying the codec's clock rate in Hertz (Hz).\n          The IANA maintains a <a href=\"https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml#rtp-parameters-1\" class=\"external\" target=\"_blank\">list of codecs and their parameters</a>, including their clock rates.\n        </p>\n      </dd>\n      <dt id=\"mimetype\"><a href=\"#mimetype\"><code>mimeType</code></a></dt>\n      <dd>\n        <p>\n          A string indicating the codec's MIME media type and subtype.\n          The MIME type strings used by RTP differ from those used elsewhere.\n          See <a href=\"https://datatracker.ietf.org/doc/html/rfc3555#section-4\" class=\"external\" target=\"_blank\">RFC 3555, section 4</a> for the complete IANA registry of these types.\n          Also see <a href=\"/en-US/docs/Web/Media/Formats/WebRTC_codecs\">Codecs used by WebRTC</a> for details about potential codecs that might be referenced here.\n        </p>\n      </dd>\n      <dt id=\"sdpfmtpline\"><a href=\"#sdpfmtpline\"><code>sdpFmtpLine</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          A string giving the format specific parameters field from the <code>a=fmtp</code> line in the SDP which corresponds to the codec, if such a line exists.\n          If there is no parameters field, this property is left out.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"headerextensions\"><a href=\"#headerextensions\"><code>headerExtensions</code></a></dt>\n  <dd>\n    <p>\n      An array of objects, each providing the URI of a <a href=\"https://datatracker.ietf.org/doc/html/rfc3550#section-5.3.1\" class=\"external\" target=\"_blank\">header extension</a> supported for the current <code>kind</code> of media.\n      Each object has the following property:\n    </p>\n    <dl>\n      <dt id=\"uri\"><a href=\"#uri\"><code>uri</code></a></dt>\n      <dd>\n        <p>\n          A string, specifying the URI of a header extension.\n          The URI is formatted as described in <a href=\"https://datatracker.ietf.org/doc/html/rfc5285\" class=\"external\" target=\"_blank\">RFC 5285</a>.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>As a static function, this is always called using the form:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>capabilities <span class=\"token operator\">=</span> RTCRtpReceiver<span class=\"token punctuation\">.</span><span class=\"token function\">getCapabilities</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"audio\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The returned set of capabilities is the most optimistic possible list.\n  It is entirely possible that certain combinations of options may fail to work when you actually try to use them.\n</p>\n<p>\n  Calling <code>RTCRtpReceiver.getCapabilities()</code> doesn't prime the browser in any way to handle media. Nothing is loaded, fetched, or otherwise prepared.\n  It's a means of determining what might be usable before starting to try to access media.\n</p>\n<p>\n  Because the set of capabilities available tend to be stable for a length of time (people don't install and uninstall codecs and the like very often), the media capabilities can in whole or in part provide a cross-origin method for identifying a user.\n  For that reason, in privacy-sensitive contexts, the browser may choose to obscure the capabilities; this might be done, for example, by leaving out rarely-used codec configurations.\n</p>"}},{"type":"prose","value":{"id":"the_codecs_array","title":"The codecs array","isH3":true,"content":"<p>\n  The <code>codecs</code> array is an array of objects that describes a single codec and its basic capabilities.\n  The browser will only report distinct capability combinations separately.\n  If two sets of capabilities can be described as one, they will be.\n  That means that, for instance, if there are two entries for the H.264 codec (as identified by the <a href=\"#mimetype\"><code>mimeType</code></a> being \"video/H264\"), there are other values in the capabilities objects indicating how they're different in some way.\n</p>\n<p>There are three special entries that should always be present, representing underlying components of the transport. Those components are:</p>\n<dl>\n  <dt id=\"red_redundant_audio_data\"><a href=\"#red_redundant_audio_data\">RED (REDundant Audio Data)</a></dt>\n  <dd>\n    <p>\n      The media type of an RED entry may vary due to there being several versions of it, but it will end with <code>red</code>, such as <code>video/red</code> or <code>video/fwdred</code>.\n      The base RED standard can be found in <a href=\"https://datatracker.ietf.org/doc/html/rfc2198\" class=\"external\" target=\"_blank\">RFC 2198</a>. There may be multiple entries for RED if different forms are supported; each will have a unique media type in that case.\n    </p>\n  </dd>\n  <dt id=\"fec_forward_error_correction\"><a href=\"#fec_forward_error_correction\">FEC (Forward Error Correction)</a></dt>\n  <dd>\n    <p>\n      An FEC component handles error correction data; its media type may also vary due to there being advanced versions of the standard available, but it will always end with <code>fec</code>.\n      One possible value is <code>video/ulpfec</code> (a generic error connection model).\n      There may also be multiple FEC entries if more than one form is supported.\n    </p>\n  </dd>\n  <dt id=\"rtx_retransmission\"><a href=\"#rtx_retransmission\">RTX (Retransmission)</a></dt>\n  <dd>\n    <p>\n      This component is responsible for retransmission of data; it's media type should be <code>video/rtx</code>.\n      There will only be one entry for RTX, and it will not have an <a href=\"#sdpfmtpline\"><code>sdpFmtpLine</code></a> property.\n    </p>\n  </dd>\n</dl>\n<p>These entries should be ignored if only codecs related to the media are of interest.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"feature_support","title":"Feature support","isH3":true,"content":"<p>You can use <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\"><code>Object.hasOwn()</code></a> to check that <code>RTCRtpReceiver.getCapabilities()</code> is supported:</p>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token keyword\">const</span> log <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">RTCRtpReceiver.getCapabilities() supported: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>\n  RTCRtpReceiver<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"getCapabilities\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div><div class=\"code-example\" id=\"sect2\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Feature support sample\" id=\"frame_feature_support\" width=\"100%\" height=\"60\" src=\"http://localhost:5042/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities_static/runner.html?id=feature_support\" loading=\"lazy\"></iframe></div>"}},{"type":"prose","value":{"id":"checking_support_for_a_particular_codec","title":"Checking support for a particular codec","isH3":true,"content":"<p>The function below returns a Boolean indicating whether or not the device supports receiving H.264 video on a WebRTC connection.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> Since <code>RTCRtpReceiver.getCapabilities()</code> actually only indicates &gt; <em>probable</em> support, attempting to receive H.264 video might still fail even after getting a positive response from this function.</p>\n</div>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">canReceiveH264</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> capabilities <span class=\"token operator\">=</span> RTCRtpReceiver<span class=\"token punctuation\">.</span><span class=\"token function\">getCapabilities</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  capabilities<span class=\"token punctuation\">.</span>codecs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">codec</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">.</span>mimeType <span class=\"token operator\">===</span> <span class=\"token string\">\"video/H264\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"getting_all_capabilities","title":"Getting all capabilities","isH3":true,"content":"<p>\n  This code example shows how we might get all supported codecs and headers.\n  The HTML defines a selection list for the two kinds of capabilities, and a log area.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>kind<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audio<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>audio<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>video<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>40<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>\n  The JavaScript defines a function to log the capabilities for a particular \"kind\".\n  This is called initially with the value <code>audio</code>.\n  A listener updates the value when the selection list <code>kind</code> is changed.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> log <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> kindSelector <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#kind\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">logMediaCapabilities</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"audio\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nkindSelector<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">logMediaCapabilities</span><span class=\"token punctuation\">(</span>kindSelector<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logMediaCapabilities</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">kind</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>RTCRtpReceiver<span class=\"token punctuation\">,</span> <span class=\"token string\">\"getCapabilities\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"RTCRtpReceiver.getCapabilities() not supported\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> capabilities <span class=\"token operator\">=</span> RTCRtpReceiver<span class=\"token punctuation\">.</span><span class=\"token function\">getCapabilities</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>kind<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token string\">\"Headers\\n\"</span><span class=\"token punctuation\">;</span>\n  capabilities<span class=\"token punctuation\">.</span>headerExtensions<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">header</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> uri: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>header<span class=\"token punctuation\">.</span>uri<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\nCodecs\\n\"</span><span class=\"token punctuation\">;</span>\n  capabilities<span class=\"token punctuation\">.</span>codecs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">codec</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> mime type: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>codec<span class=\"token punctuation\">.</span>mimeType<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">   channels: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>codec<span class=\"token punctuation\">.</span>channels<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//max channels - e.g. 2 is stereo</span>\n    log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">   clockRate: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>codec<span class=\"token punctuation\">.</span>clockRate<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// clock rate in Hz</span>\n    log<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">   sdpFmtpLine: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>codec<span class=\"token punctuation\">.</span>sdpFmtpLine<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// mime media type and subtype</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"result\">Result</h4><div class=\"code-example\" id=\"sect4\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Getting all capabilities sample\" id=\"frame_getting_all_capabilities\" width=\"100%\" height=\"500px\" src=\"http://localhost:5042/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities_static/runner.html?id=getting_all_capabilities\" loading=\"lazy\"></iframe></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#dom-rtcrtpreceiver-getcapabilities","title":"WebRTC: Real-Time Communication in Browsers"}],"query":"api.RTCRtpReceiver.getCapabilities_static"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCRtpReceiver.getCapabilities_static"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The static method RTCRtpReceiver.getCapabilities() returns an object describing the codec and header extension capabilities supported by RTCRtpReceiver objects on the current device.","popularity":0,"modified":"2023-08-24T22:17:15.000Z","source":{"folder":"en-us/web/api/rtcrtpreceiver/getcapabilities_static","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcrtpreceiver/getcapabilities_static/index.md","last_commit_url":"https://github.com/mdn/content/commit/381c51574a3e6a07ee09c63493452440f046038d","filename":"index.md"},"short_title":"getCapabilities()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCRtpReceiver","title":"RTCRtpReceiver"},{"uri":"/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities_static","title":"getCapabilities()"}],"pageTitle":"RTCRtpReceiver: getCapabilities() static method - Web APIs | MDN","noIndexing":false}}