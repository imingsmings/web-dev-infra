{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"NDEFReader: write() method","mdn_url":"/en-US/docs/Web/API/NDEFReader/write","locale":"en-US","native":"English (US)","browserCompat":["api.NDEFReader.write"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_NFC_API\">Web NFC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/NDEFReader\"><code>NDEFReader</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/NDEFReader/NDEFReader\"><code>NDEFReader()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/NDEFReader/scan\"><code>scan()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><em><code>write()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/NDEFReader/reading_event\"><code>reading</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/NDEFReader/readingerror_event\"><code>readingerror</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web NFC API</summary><ol><li><a href=\"/en-US/docs/Web/API/NDEFMessage\"><code>NDEFMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <code>write()</code> method of the <a href=\"/en-US/docs/Web/API/NDEFReader\"><code>NDEFReader</code></a> interface attempts to write an NDEF message to a tag and returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that either resolves when a message has been written to the tag or rejects if a hardware or permission error is encountered. This method triggers a permission prompt if the \"nfc\" permission has not been previously granted.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n<span class=\"token function\">write</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"message\"><a href=\"#message\"><code>message</code></a></dt>\n  <dd>\n    <p>\n      The message to be written, either a string object or literal, an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>, a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a>,\n      a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a>, or an array of records. A record has the following members:\n    </p>\n    <dl>\n      <dt id=\"data\"><a href=\"#data\"><code>data</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          Contains the data to be transmitted, a string object or literal, an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>, a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a>,\n          a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a>, or an array of nested records\n        </p>\n      </dd>\n      <dt id=\"encoding\"><a href=\"#encoding\"><code>encoding</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A string specifying the record's encoding.</p>\n      </dd>\n      <dt id=\"id\"><a href=\"#id\"><code>id</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A developer-defined identifier for the record.</p>\n      </dd>\n      <dt id=\"lang\"><a href=\"#lang\"><code>lang</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A valid language tag according to <a href=\"https://datatracker.ietf.org/doc/html/rfc5646\" class=\"external\" target=\"_blank\">RFC 5646: Tags for Identifying Languages (also known as BCP 47)</a>.</p>\n      </dd>\n      <dt id=\"mediatype\"><a href=\"#mediatype\"><code>mediaType</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A valid <a href=\"/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">MIME type</a>.</p>\n      </dd>\n      <dt id=\"recordtype\"><a href=\"#recordtype\"><code>recordType</code></a></dt>\n      <dd>\n        <p>A string indicating the type of data stored in <code>data</code>. It must be one of the following values:</p>\n        <dl>\n          <dt id=\"absolute-url\"><a href=\"#absolute-url\"><code>\"absolute-url\"</code></a></dt>\n          <dd>\n            <p>An absolute URL to the data.</p>\n          </dd>\n          <dt id=\"empty\"><a href=\"#empty\"><code>\"empty\"</code></a></dt>\n          <dd>\n            <p>An empty <a href=\"/en-US/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a>.</p>\n          </dd>\n          <dt id=\"mime\"><a href=\"#mime\"><code>\"mime\"</code></a></dt>\n          <dd>\n            <p>A valid <a href=\"/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">MIME type</a>.</p>\n          </dd>\n          <dt id=\"smart-poster\"><a href=\"#smart-poster\"><code>\"smart-poster\"</code></a></dt>\n          <dd>\n            <p>A smart poster as defined by the <a href=\"https://w3c.github.io/web-nfc/#bib-ndef-smartposter\" class=\"external\" target=\"_blank\">NDEF-SMARTPOSTER</a> specification.</p>\n          </dd>\n          <dt id=\"text\"><a href=\"#text\"><code>\"text\"</code></a></dt>\n          <dd>\n            <p>Text as defined by the <a href=\"https://w3c.github.io/web-nfc/#bib-ndef-text\" class=\"external\" target=\"_blank\">NDEF-TEXT</a> specification.</p>\n          </dd>\n          <dt id=\"unknown\"><a href=\"#unknown\"><code>\"unknown\"</code></a></dt>\n          <dd>\n            <p>The record type is not known.</p>\n          </dd>\n          <dt id=\"url\"><a href=\"#url\"><code>\"URL\"</code></a></dt>\n          <dd>\n            <p>A URL as defined by the <a href=\"https://w3c.github.io/web-nfc/#bib-ndef-uri\" class=\"external\" target=\"_blank\">NDEF-URI</a> specification.</p>\n          </dd>\n        </dl>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"options\"><a href=\"#options\"><code>options</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object with the following properties:</p>\n    <dl>\n      <dt id=\"overwrite\"><a href=\"#overwrite\"><code>overwrite</code></a></dt>\n      <dd>\n        <p>A boolean value specifying whether or not existing records should be overwritten, if such exists.</p>\n      </dd>\n      <dt id=\"signal\"><a href=\"#signal\"><code>signal</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> that allows the current write operation to be canceled.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that either resolves when a message has been written to the tag or rejects if a hardware or permission error is encountered.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":false,"content":"<p>\n  This method doesn't throw exceptions; instead, it rejects the returned promise,\n  passing a <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a> whose <code>name</code> is one of the\n  following:\n</p>\n<dl>\n  <dt id=\"aborterror\"><a href=\"#aborterror\"><code>AbortError</code></a></dt>\n  <dd>\n    <p>The scan operation was aborted with the <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> passed in the <code>options</code> argument.</p>\n  </dd>\n  <dt id=\"notallowederror\"><a href=\"#notallowederror\"><code>NotAllowedError</code></a></dt>\n  <dd>\n    <p>\n      The permission for this operation was rejected or <code>overwrite</code> is\n      <code>false</code> and there are already records on the tag.\n    </p>\n  </dd>\n  <dt id=\"notsupportederror\"><a href=\"#notsupportederror\"><code>NotSupportedError</code></a></dt>\n  <dd>\n    <p>\n      There is no NFC adapter compatible with Web NFC, or the available NFC adapter does\n      not support pushing messages, or connection can not be established.\n    </p>\n  </dd>\n  <dt id=\"notreadableerror\"><a href=\"#notreadableerror\"><code>NotReadableError</code></a></dt>\n  <dd>\n    <p>\n      The UA is not allowed to access underlying NFC adapter (e.g., due to user\n      preference).\n    </p>\n  </dd>\n  <dt id=\"networkerror\"><a href=\"#networkerror\"><code>NetworkError</code></a></dt>\n  <dd>\n    <p>\n      Transfer failed after it already started (e.g., the tag was removed from the\n      reader).\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"write_a_text_string","title":"Write a text string","isH3":true,"content":"<p>The following example shows how to write a string to an NFC tag and process any errors that occur.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ndef <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NDEFReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nndef\n  <span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Message written.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Write failed :-( try again: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"write_a_url","title":"Write a URL","isH3":true,"content":"<p>The following example shows how to write a record object (described above) to an NFC tag and process any errors that occur.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ndef <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NDEFReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> ndef<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">records</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">recordType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"url\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://example.com/\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write failed :-( try again.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"scheduling_a_write_with_a_timeout","title":"Scheduling a write with a timeout","isH3":true,"content":"<p>It's sometimes useful to set a time limit on a write operation. For example, you ask the user to touch a tag, but no tag is found within a certain amount of time, then you time out.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ndef <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NDEFReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nndef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreading</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"We read a tag!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> timeout <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> ctlr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctlr<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onabort</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Time is up, bailing out!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> ctlr<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ndef<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"reading\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        ndef<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> ctlr<span class=\"token punctuation\">.</span>signal <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">once</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">await</span> ndef<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Let's wait for 5 seconds only.</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">5_000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"We wrote to a tag!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/web-nfc/#dom-ndefreader-write","title":"Web NFC API"}],"query":"api.NDEFReader.write"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.NDEFReader.write"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Exceptions","id":"exceptions"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The write() method of the NDEFReader interface attempts to write an NDEF message to a tag and returns a Promise that either resolves when a message has been written to the tag or rejects if a hardware or permission error is encountered. This method triggers a permission prompt if the \"nfc\" permission has not been previously granted.","popularity":0.0008,"modified":"2023-07-07T07:19:19.000Z","source":{"folder":"en-us/web/api/ndefreader/write","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/ndefreader/write/index.md","last_commit_url":"https://github.com/mdn/content/commit/acfe8c9f1f4145f77653a2bc64a9744b001358dc","filename":"index.md"},"short_title":"write()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/NDEFReader","title":"NDEFReader"},{"uri":"/en-US/docs/Web/API/NDEFReader/write","title":"write()"}],"pageTitle":"NDEFReader: write() method - Web APIs | MDN","noIndexing":false}}