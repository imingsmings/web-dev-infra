{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Navigator: requestMediaKeySystemAccess() method","mdn_url":"/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess","locale":"en-US","native":"English (US)","browserCompat":["api.Navigator.requestMediaKeySystemAccess"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Encrypted_Media_Extensions_API\">Encrypted Media Extensions API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaEncryptedEvent\"><code>MediaEncryptedEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeyMessageEvent\"><code>MediaKeyMessageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeys\"><code>MediaKeys</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeySession\"><code>MediaKeySession</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap\"><code>MediaKeyStatusMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeySystemAccess\"><code>MediaKeySystemAccess</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/mediaKeys\"><code>HTMLMediaElement.mediaKeys</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><em><a href=\"/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess\" aria-current=\"page\"><code>Navigator.requestMediaKeySystemAccess()</code></a></em></li><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/setMediaKeys\"><code>HTMLMediaElement.setMediaKeys()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/encrypted_event\"><code>HTMLMediaElement</code>: <code>encrypted</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>Navigator.requestMediaKeySystemAccess()</code></strong> method\n  returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which delivers a <a href=\"/en-US/docs/Web/API/MediaKeySystemAccess\"><code>MediaKeySystemAccess</code></a>\n  object that can be used to access a particular media key system, which can in turn be\n  used to create keys for decrypting a media stream. This method is part of the <a href=\"/en-US/docs/Web/API/Encrypted_Media_Extensions_API\">Encrypted Media Extensions API</a>, which brings support for encrypted media and DRM-protected video to the web.\n</p>\n<p>\n  This method may have user-visible effects such as asking for permission to access one\n  or more system resources. Consider that when deciding when to call\n  <code>requestMediaKeySystemAccess()</code>; you don't want those requests\n  to happen at inconvenient times. As a general rule, this function should be called only\n  when it's about time to create and use a <a href=\"/en-US/docs/Web/API/MediaKeys\"><code>MediaKeys</code></a> object by calling the\n  returned <a href=\"/en-US/docs/Web/API/MediaKeySystemAccess\"><code>MediaKeySystemAccess</code></a> object's\n  <a href=\"/en-US/docs/Web/API/MediaKeySystemAccess/createMediaKeys\" title=\"createMediaKeys()\"><code>createMediaKeys()</code></a> method.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">requestMediaKeySystemAccess</span><span class=\"token punctuation\">(</span>keySystem<span class=\"token punctuation\">,</span> supportedConfigurations<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"keysystem\"><a href=\"#keysystem\"><code>keySystem</code></a></dt>\n  <dd>\n    <p>\n      A string identifying the key system. For example\n      <code>com.example.somesystem</code> or <code>org.w3.clearkey</code>.\n    </p>\n  </dd>\n  <dt id=\"supportedconfigurations\"><a href=\"#supportedconfigurations\"><code>supportedConfigurations</code></a></dt>\n  <dd>\n    <p>A non-empty <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of objects conforming to the object returned by <a href=\"/en-US/docs/Web/API/MediaKeySystemAccess/getConfiguration\"><code>MediaKeySystemAccess.getConfiguration</code></a>. The first element with a satisfiable configuration will be used.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that, when resolved, delivers a\n  <a href=\"/en-US/docs/Web/API/MediaKeySystemAccess\"><code>MediaKeySystemAccess</code></a> object to your fulfillment handler function. The\n  fulfillment handler receives as input just one parameter:\n</p>\n<dl>\n  <dt id=\"mediakeysystemaccess\"><a href=\"#mediakeysystemaccess\"><code>mediaKeySystemAccess</code></a></dt>\n  <dd>\n    <p>\n      A <a href=\"/en-US/docs/Web/API/MediaKeySystemAccess\"><code>MediaKeySystemAccess</code></a> object representing the media key system\n      configuration described by <code>keySystem</code> and\n      <code>supportedConfigurations</code>\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>\n  In case of an error, the returned <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> is rejected with a\n  <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a> whose name indicates what kind of error occurred.\n</p>\n<dl>\n  <dt id=\"notsupportederror\"><a href=\"#notsupportederror\"><code>NotSupportedError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Either the specified <code>keySystem</code> isn't supported by the platform or the\n      browser, or none of the configurations specified by\n      <code>supportedConfigurations</code> can be satisfied (if, for example, none of the\n      <code>codecs</code> specified in <code>contentType</code> are available).\n    </p>\n  </dd>\n  <dt id=\"securityerror\"><a href=\"#securityerror\"><code>SecurityError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Use of this feature was blocked by a <a href=\"/en-US/docs/Web/HTTP/Permissions_Policy\">Permissions Policy</a>.</p>\n  </dd>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>`</dt>\n  <dd>\n    <p>\n      Either <code>keySystem</code> is an empty string or the\n      <code>supportedConfigurations</code> array is empty.\n    </p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/encrypted-media/#navigator-extension-requestmediakeysystemaccess","title":"Encrypted Media Extensions"}],"query":"api.Navigator.requestMediaKeySystemAccess"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Navigator.requestMediaKeySystemAccess"}},{"type":"prose","value":{"id":"firefox_compatibility_notes","title":"Firefox compatibility notes","isH3":true,"content":"<p>\n  Firefox 55 outputs a warning to the console if a candidate\n  <code>MediaKeySystemConfiguration</code> included in\n  <code>supportedConfigurations</code> includes an <code>audioCapabilities</code> or\n  <code>videoCapabilities</code> object whose value of <code>contentType</code> doesn't\n  specify a <code>\"codecs\"</code> substring defining which codecs within the media wrapper\n  format should be allowed.\n</p>\n<p>For example:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">const</span> clearKeyOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">initDataTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"keyids\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"webm\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">audioCapabilities</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"audio/webm\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">videoCapabilities</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"video/webm\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nnavigator\n  <span class=\"token punctuation\">.</span><span class=\"token function\">requestMediaKeySystemAccess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"org.w3.clearkey\"</span><span class=\"token punctuation\">,</span> clearKeyOptions<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">keySystemAccess</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* use the access to get create keys */</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The code above works in Firefox up to version 55, but version 55 onwards will output a\n  warning to console, because <code>\"codecs\"</code> is not included in the\n  <code>contentType</code> strings. This could be corrected as follows:\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js example-good notranslate\"><code><span class=\"token keyword\">const</span> clearKeyOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">initDataTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"keyids\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"webm\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">audioCapabilities</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">'audio/webm; codecs=\"opus\"'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">'audio/webm; codecs=\"vorbis\"'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">videoCapabilities</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">'video/webm; codecs=\"vp9\"'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">'video/webm; codecs=\"vp8\"'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nnavigator\n  <span class=\"token punctuation\">.</span><span class=\"token function\">requestMediaKeySystemAccess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"org.w3.clearkey\"</span><span class=\"token punctuation\">,</span> clearKeyOptions<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">keySystemAccess</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* use the access to get create keys */</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  In this revised example, the audio and video capabilities include possible codecs which\n  should be permitted, and therefore are valid requests.\n</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Encrypted_Media_Extensions_API\">Encrypted Media Extensions API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API\">Media Capture and Streams API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Navigator.requestMediaKeySystemAccess() method\n  returns a Promise which delivers a MediaKeySystemAccess\n  object that can be used to access a particular media key system, which can in turn be\n  used to create keys for decrypting a media stream. This method is part of the Encrypted Media Extensions API, which brings support for encrypted media and DRM-protected video to the web.","popularity":0.0034,"modified":"2023-08-04T07:12:32.000Z","source":{"folder":"en-us/web/api/navigator/requestmediakeysystemaccess","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/navigator/requestmediakeysystemaccess/index.md","last_commit_url":"https://github.com/mdn/content/commit/56c76424a5edb45f6716ac4ee48861dac8e7ae38","filename":"index.md"},"short_title":"requestMediaKeySystemAccess()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Navigator","title":"Navigator"},{"uri":"/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess","title":"requestMediaKeySystemAccess()"}],"pageTitle":"Navigator: requestMediaKeySystemAccess() method - Web APIs | MDN","noIndexing":false}}