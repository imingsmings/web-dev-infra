{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/SourceBuffer/abort_event does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/SourceBuffer/abort_event does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":79,"column":7,"macroName":"domxref","sourceContext":"  | <h2>Events</h2>\n  | <dl>\n> |   <dt>{{domxref(\"SourceBuffer.abort_event\", \"abort\")}}</dt>\n          ^\n  |   <dd>\n  |     <p>Fired whenever {{domxref(\"SourceBuffer.appendBuffer()\")}} is ended by a call to {{domxref(\"SourceBuffer.abort()\")}}. {{domxref(\"SourceBuffer.updating\")}} changes from <code>true</code> to <code>false</code>.</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/sourcebuffer/index.md","macroSource":"{{domxref(\"SourceBuffer.abort_event\", \"abort\")}}"},{"id":"macro1","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/SourceBuffer/error_event does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/SourceBuffer/error_event does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":83,"column":7,"macroName":"domxref","sourceContext":"  |     <p>Fired whenever {{domxref(\"SourceBuffer.appendBuffer()\")}} is ended by a call to {{domxref(\"SourceBuffer.abort()\")}}. {{domxref(\"SourceBuffer.updating\")}} changes from <code>true</code> to <code>false</code>.</p>\n  |   </dd>\n> |   <dt>{{domxref(\"SourceBuffer.error_event\", \"error\")}}</dt>\n          ^\n  |   <dd>\n  |     <p>Fired whenever an error occurs during {{domxref(\"SourceBuffer.appendBuffer()\")}}. {{domxref(\"SourceBuffer.updating\")}} changes from <code>true</code> to <code>false</code>.</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/sourcebuffer/index.md","macroSource":"{{domxref(\"SourceBuffer.error_event\", \"error\")}}"},{"id":"macro2","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/SourceBuffer/update_event does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/SourceBuffer/update_event does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":87,"column":7,"macroName":"domxref","sourceContext":"  |     <p>Fired whenever an error occurs during {{domxref(\"SourceBuffer.appendBuffer()\")}}. {{domxref(\"SourceBuffer.updating\")}} changes from <code>true</code> to <code>false</code>.</p>\n  |   </dd>\n> |   <dt>{{domxref(\"SourceBuffer.update_event\", \"update\")}}</dt>\n          ^\n  |   <dd>\n  |     <p>Fired whenever {{domxref(\"SourceBuffer.appendBuffer()\")}} or {{domxref(\"SourceBuffer.remove()\")}} completes. {{domxref(\"SourceBuffer.updating\")}} changes from <code>true</code> to <code>false</code>. This event is fired before <code>updateend</code>.</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/sourcebuffer/index.md","macroSource":"{{domxref(\"SourceBuffer.update_event\", \"update\")}}"},{"id":"macro3","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/SourceBuffer/updateend_event does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/SourceBuffer/updateend_event does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":91,"column":7,"macroName":"domxref","sourceContext":"  |     <p>Fired whenever {{domxref(\"SourceBuffer.appendBuffer()\")}} or {{domxref(\"SourceBuffer.remove()\")}} completes. {{domxref(\"SourceBuffer.updating\")}} changes from <code>true</code> to <code>false</code>. This event is fired before <code>updateend</code>.</p>\n  |   </dd>\n> |   <dt>{{domxref(\"SourceBuffer.updateend_event\", \"updateend\")}}</dt>\n          ^\n  |   <dd>\n  |     <p>Fired after {{domxref(\"SourceBuffer.appendBuffer()\")}} or {{domxref(\"SourceBuffer.remove()\")}} ends. This event is fired after <code>update</code>.</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/sourcebuffer/index.md","macroSource":"{{domxref(\"SourceBuffer.updateend_event\", \"updateend\")}}"},{"id":"macro4","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/SourceBuffer/updatestart_event does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/SourceBuffer/updatestart_event does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":95,"column":7,"macroName":"domxref","sourceContext":"  |     <p>Fired after {{domxref(\"SourceBuffer.appendBuffer()\")}} or {{domxref(\"SourceBuffer.remove()\")}} ends. This event is fired after <code>update</code>.</p>\n  |   </dd>\n> |   <dt>{{domxref(\"SourceBuffer.updatestart_event\", \"updatestart\")}}</dt>\n          ^\n  |   <dd>\n  |     <p>Fired whenever the value of {{domxref(\"SourceBuffer.updating\")}} changes from <code>false</code> to <code>true</code>.</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/sourcebuffer/index.md","macroSource":"{{domxref(\"SourceBuffer.updatestart_event\", \"updatestart\")}}"}]},"title":"SourceBuffer","mdn_url":"/en-US/docs/Web/API/SourceBuffer","locale":"en-US","native":"English (US)","browserCompat":["api.SourceBuffer"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/SourceBuffer\" aria-current=\"page\"><code>SourceBuffer</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowEnd\"><code>appendWindowEnd</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowStart\"><code>appendWindowStart</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/audioTracks\"><code>audioTracks</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/buffered\"><code>buffered</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/mode\"><code>mode</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/textTracks\"><code>textTracks</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/timestampOffset\"><code>timestampOffset</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/updating\"><code>updating</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/videoTracks\"><code>videoTracks</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/SourceBuffer/abort\"><code>abort()</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\"><code>appendBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/appendBufferAsync\"><code>appendBufferAsync()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/changeType\"><code>changeType()</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/remove\"><code>remove()</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBuffer/removeAsync\"><code>removeAsync()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr><abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Media Source Extensions</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaSourceHandle\"><code>MediaSourceHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>TextTrack.sourceBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoTrack/sourceBuffer\"><code>VideoTrack.sourceBuffer</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>SourceBuffer</code></strong> interface represents a chunk of media to be passed into an <a href=\"/en-US/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> and played, via a <a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a> object. This can be made up of one or several media segments.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/SourceBuffer\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"96\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"166\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      SourceBuffer\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"sourcebuffer.appendwindowend\"><a href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowEnd\"><code>SourceBuffer.appendWindowEnd</code></a></dt>\n  <dd>\n    <p>Controls the timestamp for the end of the append window.</p>\n  </dd>\n  <dt id=\"sourcebuffer.appendwindowstart\"><a href=\"/en-US/docs/Web/API/SourceBuffer/appendWindowStart\"><code>SourceBuffer.appendWindowStart</code></a></dt>\n  <dd>\n    <p>Controls the timestamp for the start of the <a href=\"https://w3c.github.io/media-source/#append-window\" class=\"external\" target=\"_blank\">append window</a>. This is a timestamp range that can be used to filter what media data is appended to the <code>SourceBuffer</code>. Coded media frames with timestamps within this range will be appended, whereas those outside the range will be filtered out.</p>\n  </dd>\n  <dt id=\"sourcebuffer.audiotracks\"><a href=\"/en-US/docs/Web/API/SourceBuffer/audioTracks\"><code>SourceBuffer.audioTracks</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A list of the audio tracks currently contained inside the <code>SourceBuffer</code>.</p>\n  </dd>\n  <dt id=\"sourcebuffer.buffered\"><a href=\"/en-US/docs/Web/API/SourceBuffer/buffered\"><code>SourceBuffer.buffered</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the time ranges that are currently buffered in the <code>SourceBuffer</code>.</p>\n  </dd>\n  <dt id=\"sourcebuffer.mode\"><a href=\"/en-US/docs/Web/API/SourceBuffer/mode\"><code>SourceBuffer.mode</code></a></dt>\n  <dd>\n    <p>Controls how the order of media segments in the <code>SourceBuffer</code> is handled, in terms of whether they can be appended in any order, or they have to be kept in a strict sequence.</p>\n  </dd>\n  <dt id=\"sourcebuffer.texttracks\"><a href=\"/en-US/docs/Web/API/SourceBuffer/textTracks\"><code>SourceBuffer.textTracks</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A list of the text tracks currently contained inside the <code>SourceBuffer</code>.</p>\n  </dd>\n  <dt id=\"sourcebuffer.timestampoffset\"><a href=\"/en-US/docs/Web/API/SourceBuffer/timestampOffset\"><code>SourceBuffer.timestampOffset</code></a></dt>\n  <dd>\n    <p>Controls the offset applied to timestamps inside media segments that are subsequently appended to the <code>SourceBuffer</code>.</p>\n  </dd>\n  <dt id=\"sourcebuffer.updating\"><a href=\"/en-US/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A boolean indicating whether the <code>SourceBuffer</code> is currently being updated — i.e. whether an <a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a> or <a href=\"/en-US/docs/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a> operation is currently in progress.</p>\n  </dd>\n  <dt id=\"sourcebuffer.videotracks\"><a href=\"/en-US/docs/Web/API/SourceBuffer/videoTracks\"><code>SourceBuffer.videoTracks</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A list of the video tracks currently contained inside the <code>SourceBuffer</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<p><em>Inherits methods from its parent interface, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"sourcebuffer.abort\"><a href=\"/en-US/docs/Web/API/SourceBuffer/abort\"><code>SourceBuffer.abort()</code></a></dt>\n  <dd>\n    <p>Aborts the current segment and resets the segment parser.</p>\n  </dd>\n  <dt id=\"sourcebuffer.appendbuffer\"><a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a></dt>\n  <dd>\n    <p>Appends media segment data from an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>, a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a> or a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a> object to the <code>SourceBuffer</code>.</p>\n  </dd>\n  <dt id=\"sourcebuffer.appendbufferasync\"><a href=\"/en-US/docs/Web/API/SourceBuffer/appendBufferAsync\"><code>SourceBuffer.appendBufferAsync()</code></a> <abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Starts the process of asynchronously appending the specified buffer to the <code>SourceBuffer</code>. Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once the buffer has been appended.</p>\n  </dd>\n  <dt id=\"sourcebuffer.changetype\"><a href=\"/en-US/docs/Web/API/SourceBuffer/changeType\"><code>SourceBuffer.changeType()</code></a></dt>\n  <dd>\n    <p>Changes the <a href=\"/en-US/docs/Glossary/MIME_type\">MIME type</a> that future calls to <a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\" title=\"appendBuffer()\"><code>appendBuffer()</code></a> will expect the new data to conform to.</p>\n  </dd>\n  <dt id=\"sourcebuffer.remove\"><a href=\"/en-US/docs/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a></dt>\n  <dd>\n    <p>Removes media segments within a specific time range from the <code>SourceBuffer</code>.</p>\n  </dd>\n  <dt id=\"sourcebuffer.removeasync\"><a href=\"/en-US/docs/Web/API/SourceBuffer/removeAsync\"><code>SourceBuffer.removeAsync()</code></a> <abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Starts the process of asynchronously removing media segments in the specified range from the <code>SourceBuffer</code>. Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which is fulfilled once all matching segments have been removed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<dl>\n  <dt id=\"abort\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;SourceBuffer.abort_event&quot;, &quot;abort&quot;)}}\"><code>abort</code></a></dt>\n  <dd>\n    <p>Fired whenever <a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a> is ended by a call to <a href=\"/en-US/docs/Web/API/SourceBuffer/abort\"><code>SourceBuffer.abort()</code></a>. <a href=\"/en-US/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> changes from <code>true</code> to <code>false</code>.</p>\n  </dd>\n  <dt id=\"error\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;SourceBuffer.error_event&quot;, &quot;error&quot;)}}\"><code>error</code></a></dt>\n  <dd>\n    <p>Fired whenever an error occurs during <a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a>. <a href=\"/en-US/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> changes from <code>true</code> to <code>false</code>.</p>\n  </dd>\n  <dt id=\"update\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;SourceBuffer.update_event&quot;, &quot;update&quot;)}}\"><code>update</code></a></dt>\n  <dd>\n    <p>Fired whenever <a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a> or <a href=\"/en-US/docs/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a> completes. <a href=\"/en-US/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> changes from <code>true</code> to <code>false</code>. This event is fired before <code>updateend</code>.</p>\n  </dd>\n  <dt id=\"updateend\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;SourceBuffer.updateend_event&quot;, &quot;updateend&quot;)}}\"><code>updateend</code></a></dt>\n  <dd>\n    <p>Fired after <a href=\"/en-US/docs/Web/API/SourceBuffer/appendBuffer\"><code>SourceBuffer.appendBuffer()</code></a> or <a href=\"/en-US/docs/Web/API/SourceBuffer/remove\"><code>SourceBuffer.remove()</code></a> ends. This event is fired after <code>update</code>.</p>\n  </dd>\n  <dt id=\"updatestart\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;SourceBuffer.updatestart_event&quot;, &quot;updatestart&quot;)}}\"><code>updatestart</code></a></dt>\n  <dd>\n    <p>Fired whenever the value of <a href=\"/en-US/docs/Web/API/SourceBuffer/updating\"><code>SourceBuffer.updating</code></a> changes from <code>false</code> to <code>true</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"loading_a_video_chunk_by_chunk","title":"Loading a video chunk by chunk","isH3":true,"content":"<p>The following example loads a video chunk by chunk as fast as possible, playing it as soon as it can.</p>\n<p>You can see the complete code at <a href=\"https://github.com/mdn/dom-examples/tree/main/sourcebuffer\" class=\"external\" target=\"_blank\">https://github.com/mdn/dom-examples/tree/main/sourcebuffer</a> and try the demo live at <a href=\"https://mdn.github.io/dom-examples/sourcebuffer/\" class=\"external\" target=\"_blank\">https://mdn.github.io/dom-examples/sourcebuffer/</a>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> assetURL <span class=\"token operator\">=</span> <span class=\"token string\">\"frag_bunny.mp4\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Need to be specific for Blink regarding codecs</span>\n<span class=\"token keyword\">const</span> mimeCodec <span class=\"token operator\">=</span> <span class=\"token string\">'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">loadVideo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">isTypeSupported</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mediaSource<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// closed</span>\n    video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>mediaSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sourceopen\"</span><span class=\"token punctuation\">,</span> sourceOpen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unsupported MIME type or codec: \"</span><span class=\"token punctuation\">,</span> mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sourceOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// open</span>\n  <span class=\"token keyword\">const</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sourceBuffer <span class=\"token operator\">=</span> mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addSourceBuffer</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>assetURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateend\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">endOfStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mediaSource<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ended</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">appendBuffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> load <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#load\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nload<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> loadVideo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/media-source/#sourcebuffer","title":"Media Source Extensions™"}],"query":"api.SourceBuffer"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.SourceBuffer"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Events","id":"events"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The SourceBuffer interface represents a chunk of media to be passed into an HTMLMediaElement and played, via a MediaSource object. This can be made up of one or several media segments.","popularity":0.0053,"modified":"2023-11-24T05:37:26.000Z","source":{"folder":"en-us/web/api/sourcebuffer","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/sourcebuffer/index.md","last_commit_url":"https://github.com/mdn/content/commit/b5c0f9e662492bb94fa14f62ed2d0599cbb5c5ba","filename":"index.md"},"short_title":"SourceBuffer","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/SourceBuffer","title":"SourceBuffer"}],"pageTitle":"SourceBuffer - Web APIs | MDN","noIndexing":false}}