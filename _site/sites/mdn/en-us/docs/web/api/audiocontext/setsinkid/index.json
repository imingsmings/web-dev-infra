{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AudioContext: setSinkId() method","mdn_url":"/en-US/docs/Web/API/AudioContext/setSinkId","locale":"en-US","native":"English (US)","browserCompat":["api.AudioContext.setSinkId"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioContext/AudioContext\"><code>AudioContext()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioContext/baseLatency\"><code>baseLatency</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext/outputLatency\"><code>outputLatency</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext/sinkId\"><code>sinkId</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioContext/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext/createMediaElementSource\"><code>createMediaElementSource()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext/createMediaStreamDestination\"><code>createMediaStreamDestination()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext/createMediaStreamSource\"><code>createMediaStreamSource()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext/createMediaStreamTrackSource\"><code>createMediaStreamTrackSource()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext/getOutputTimestamp\"><code>getOutputTimestamp()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext/resume\"><code>resume()</code></a></li><li><em><code>setSinkId()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li><a href=\"/en-US/docs/Web/API/AudioContext/suspend\"><code>suspend()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioContext/sinkchange_event\"><code>sinkchange</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioSinkInfo\"><code>AudioSinkInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>setSinkId()</code></strong> method of the <a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a> interface sets the output audio device for the <code>AudioContext</code>. If a sink ID is not explicitly set, the default system audio output device will be used.</p>\n<p>To set the audio device to a device different than the default one, the developer needs permission to access to audio devices. If required, the user can be prompted to grant the required permission via a <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a> call.</p>\n<p>In addition, this feature may be blocked by a <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/speaker-selection\"><code>speaker-selection</code></a> <a href=\"/en-US/docs/Web/HTTP/Permissions_Policy\">Permissions Policy</a>.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setSinkId</span><span class=\"token punctuation\">(</span>sinkId<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"sinkid\"><a href=\"#sinkid\"><code>sinkId</code></a></dt>\n  <dd>\n    <p>The sink ID of the device you want to set as the output audio device. This can take one of the following value types:</p>\n    <dl>\n      <dt id=\"string\"><a href=\"#string\">String</a></dt>\n      <dd>\n        <p>A string representing the sink ID, retrieved for example via the <code>deviceId</code> property of the <a href=\"/en-US/docs/Web/API/MediaDeviceInfo\"><code>MediaDeviceInfo</code></a> objects returned by <a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\"><code>MediaDevices.enumerateDevices()</code></a>.</p>\n      </dd>\n      <dt id=\"audiosinkoptions\"><a href=\"#audiosinkoptions\"><code>AudioSinkOptions</code></a></dt>\n      <dd>\n        <p>An object representing different options for a sink ID. Currently this takes a single property, <code>type</code>, with a value of <code>none</code>. Setting this parameter causes the audio to be processed without being played through any audio output device. This is a useful option to minimize power consumption when you don't need playback along with processing.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with a value of <code>undefined</code>.</p>\n<p>Attempting to set the sink ID to its existing value (i.e. returned by <a href=\"/en-US/docs/Web/API/AudioContext/sinkId\"><code>AudioContext.sinkId</code></a>), throws no errors, but it aborts the process immediately.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidaccesserror\"><a href=\"#invalidaccesserror\"><code>InvalidAccessError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if accessing the selected audio output device failed.</p>\n  </dd>\n  <dt id=\"notallowederror\"><a href=\"#notallowederror\"><code>NotAllowedError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the browser does not have permission to access audio devices.</p>\n  </dd>\n  <dt id=\"notfounderror\"><a href=\"#notfounderror\"><code>NotFoundError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the passed <code>sinkId</code> does not match any audio device found on the system.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In our <a href=\"https://set-sink-id.glitch.me/\" class=\"external\" target=\"_blank\">SetSinkId test example</a> (check out the <a href=\"https://glitch.com/edit/#!/set-sink-id\" class=\"external\" target=\"_blank\">source code</a>), we create an audio graph that generates a three-second burst of white noise via an <a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a>, which we also run through a <a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a> to quiet things down a bit.</p>\n<p>We also provide the user with a dropdown menu to allow them to change the audio output device on the fly. To do this, we:</p>\n<ol>\n  <li>Provide a button to populate the dropdown menu. We first invoke <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a> to trigger the permissions prompt we need to allow device enumeration, then use <a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\"><code>MediaDevices.enumerateDevices()</code></a> to get all the available devices. We loop through the different devices and make each one available as an option in a <a href=\"/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element. We also create a \"None\" option for the case where you don't want to play your audio in any output.\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>mediaDeviceBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"setSinkId\"</span> <span class=\"token keyword\">in</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    selectDiv<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> devices <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">enumerateDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Most of the DOM scripting to generate the dropdown cut out for brevity</span>\n\n    <span class=\"token keyword\">const</span> audioOutputs <span class=\"token operator\">=</span> devices<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n       <span class=\"token punctuation\">(</span><span class=\"token parameter\">device</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> device<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">'audiooutput'</span> <span class=\"token operator\">&amp;&amp;</span> device<span class=\"token punctuation\">.</span>deviceId <span class=\"token operator\">!==</span> <span class=\"token string\">'default'</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    audioOutputs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">device</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> option <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'option'</span><span class=\"token punctuation\">)</span>\n      option<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">;</span>\n      option<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">;</span>\n      select<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> option <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'option'</span><span class=\"token punctuation\">)</span>\n    option<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n    option<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'None'</span><span class=\"token punctuation\">;</span>\n    select<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//...</span>\n</code></pre></div>\n  </li>\n  <li>Add a <a href=\"/en-US/docs/Web/API/HTMLElement/change_event\" title=\"change\"><code>change</code></a> event listener to the <a href=\"/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element to change the sink ID and therefore the audio output device when a new value is selected. If \"None\" is selected in the dropdown, we invoke <code>setSinkId()</code> with the <code>{ type : 'none' }</code> object parameter to select no audio device, otherwise we run it with the audio device ID contained in the <code>&lt;select&gt;</code> element <code>value</code> attribute` as the parameter.\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>    <span class=\"token comment\">// ...</span>\n\n    select<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>select<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">setSinkId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">await</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">setSinkId</span><span class=\"token punctuation\">(</span>select<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n</ol>\n<p>The output device can be changed during audio playback, as well as before, or between plays.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-audiocontext-setsinkid","title":"Web Audio API"}],"query":"api.AudioContext.setSinkId"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.AudioContext.setSinkId"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://set-sink-id.glitch.me/\" class=\"external\" target=\"_blank\">SetSinkId test example</a></li>\n  <li><a href=\"https://developer.chrome.com/blog/audiocontext-setsinkid/\" class=\"external\" target=\"_blank\">Change the destination output device in Web Audio</a></li>\n  <li><a href=\"/en-US/docs/Web/API/AudioContext/sinkId\"><code>AudioContext.sinkId</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/AudioContext/sinkchange_event\" title=\"sinkchange\"><code>sinkchange</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The setSinkId() method of the AudioContext interface sets the output audio device for the AudioContext. If a sink ID is not explicitly set, the default system audio output device will be used.","popularity":0.0012,"modified":"2023-04-06T14:57:25.000Z","source":{"folder":"en-us/web/api/audiocontext/setsinkid","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/audiocontext/setsinkid/index.md","last_commit_url":"https://github.com/mdn/content/commit/135b8311a5e3d12789e8421845be3ce026ef72b8","filename":"index.md"},"short_title":"setSinkId()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/AudioContext","title":"AudioContext"},{"uri":"/en-US/docs/Web/API/AudioContext/setSinkId","title":"setSinkId()"}],"pageTitle":"AudioContext: setSinkId() method - Web APIs | MDN","noIndexing":false}}