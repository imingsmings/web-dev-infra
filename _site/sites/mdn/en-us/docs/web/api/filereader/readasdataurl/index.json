{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"FileReader: readAsDataURL() method","mdn_url":"/en-US/docs/Web/API/FileReader/readAsDataURL","locale":"en-US","native":"English (US)","browserCompat":["api.FileReader.readAsDataURL"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/File_API\">File API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/FileReader\"><code>FileReader</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/FileReader/FileReader\"><code>FileReader()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/FileReader/error\"><code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/readyState\"><code>readyState</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/result\"><code>result</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/FileReader/abort\"><code>abort()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/readAsArrayBuffer\"><code>readAsArrayBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/readAsBinaryString\"><code>readAsBinaryString()</code></a><abbr class=\"icon icon-deprecated\" title=\"Deprecated. Not for use in new websites.\">\n  <span class=\"visually-hidden\">Deprecated</span>\n</abbr></li><li><em><code>readAsDataURL()</code> </em></li><li><a href=\"/en-US/docs/Web/API/FileReader/readAsText\"><code>readAsText()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/FileReader/abort_event\"><code>abort</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/error_event\"><code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/load_event\"><code>load</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/loadend_event\"><code>loadend</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/loadstart_event\"><code>loadstart</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader/progress_event\"><code>progress</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for File API</summary><ol><li><a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a></li><li><a href=\"/en-US/docs/Web/API/File\"><code>File</code></a></li><li><a href=\"/en-US/docs/Web/API/FileList\"><code>FileList</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<p>\n  The <strong><code>readAsDataURL</code></strong> method of the <a href=\"/en-US/docs/Web/API/FileReader\"><code>FileReader</code></a> interface is used to read the contents of the specified\n  <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> or <a href=\"/en-US/docs/Web/API/File\"><code>File</code></a>. When the read operation is finished, the\n  <a href=\"/en-US/docs/Web/API/FileReader/readyState\" title=\"readyState\"><code>readyState</code></a> becomes <code>DONE</code>, and the\n  <a href=\"/en-US/docs/Web/API/FileReader/loadend_event\" title=\"loadend\"><code>loadend</code></a> is triggered. At that time, the\n  <a href=\"/en-US/docs/Web/API/FileReader/result\" title=\"result\"><code>result</code></a> attribute contains the data as a <a href=\"/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\">data: URL</a> representing the\n  file's data as a base64 encoded string.\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> The blob's <a href=\"/en-US/docs/Web/API/FileReader/result\" title=\"result\"><code>result</code></a> cannot be\n    directly decoded as Base64 without first removing the Data-URL declaration preceding\n    the Base64-encoded data. To retrieve only the Base64 encoded string, first\n    remove <code>data:*/*;base64,</code> from the result.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">readAsDataURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"blob\"><a href=\"#blob\"><code>blob</code></a></dt>\n  <dd>\n    <p>The <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> or <a href=\"/en-US/docs/Web/API/File\"><code>File</code></a> from which to read.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"reading_a_single_file","title":"Reading a single file","isH3":true,"content":"<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">previewFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Image preview<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">previewFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> preview <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[type=file]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  reader<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// convert image file to base64 string</span>\n      preview<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsDataURL</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"result\">Result</h4><div class=\"code-example\" id=\"sect3\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Reading a single file sample\" id=\"frame_reading_a_single_file\" width=\"100%\" height=\"240\" src=\"http://localhost:5042/en-US/docs/Web/API/FileReader/readAsDataURL/runner.html?id=reading_a_single_file\" loading=\"lazy\"></iframe></div>"}},{"type":"prose","value":{"id":"reading_multiple_files","title":"Reading multiple files","isH3":true,"content":"<h4 id=\"html_2\">HTML</h4>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>browse<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preview<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript_2\">JavaScript</h4>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">previewFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> preview <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#preview\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> files <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[type=file]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">readAndPreview</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Make sure `file.name` matches our extensions criteria</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token special-escape escape\">\\.</span><span class=\"token group punctuation\">(</span>jpe<span class=\"token quantifier number\">?</span>g<span class=\"token alternation keyword\">|</span>png<span class=\"token alternation keyword\">|</span>gif<span class=\"token group punctuation\">)</span><span class=\"token anchor function\">$</span></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      reader<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          image<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n          image<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n          image<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n          preview<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsDataURL</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">,</span> readAndPreview<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> picker <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#browse\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npicker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> previewFiles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"result_2\">Result</h4><div class=\"code-example\" id=\"sect4\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Reading multiple files sample\" id=\"frame_reading_multiple_files\" width=\"100%\" height=\"240\" src=\"http://localhost:5042/en-US/docs/Web/API/FileReader/readAsDataURL/runner.html?id=reading_multiple_files\" loading=\"lazy\"></iframe></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/FileAPI/#readAsDataURL","title":"File API"}],"query":"api.FileReader.readAsDataURL"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.FileReader.readAsDataURL"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/FileReader\"><code>FileReader</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/URL/createObjectURL_static\" title=\"URL.createObjectURL()\"><code>URL.createObjectURL()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The readAsDataURL method of the FileReader interface is used to read the contents of the specified\n  Blob or File. When the read operation is finished, the\n  readyState becomes DONE, and the\n  loadend is triggered. At that time, the\n  result attribute contains the data as a data: URL representing the\n  file's data as a base64 encoded string.","popularity":0.0469,"modified":"2023-12-02T08:06:49.000Z","source":{"folder":"en-us/web/api/filereader/readasdataurl","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/filereader/readasdataurl/index.md","last_commit_url":"https://github.com/mdn/content/commit/497d322c61511b11e4877a77660f8d7b394a8277","filename":"index.md"},"short_title":"readAsDataURL()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/FileReader","title":"FileReader"},{"uri":"/en-US/docs/Web/API/FileReader/readAsDataURL","title":"readAsDataURL()"}],"pageTitle":"FileReader: readAsDataURL() method - Web APIs | MDN","noIndexing":false}}