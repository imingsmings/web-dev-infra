{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MutationObserver","mdn_url":"/en-US/docs/Web/API/MutationObserver","locale":"en-US","native":"English (US)","browserCompat":["api.MutationObserver"],"sidebarHTML":"<ol><li><strong><em><a href=\"/en-US/docs/Web/API/MutationObserver\" aria-current=\"page\"><code>MutationObserver</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/MutationObserver/MutationObserver\"><code>MutationObserver()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MutationObserver/disconnect\"><code>disconnect()</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver/observe\"><code>observe()</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver/takeRecords\"><code>takeRecords()</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/API/MutationObserver\" aria-current=\"page\"><code>MutationObserver</code></a> interface provides the ability to watch for changes being made to the <a href=\"/en-US/docs/Web/API/Document_Object_Model\">DOM</a> tree. It is designed as a replacement for the older <a href=\"/en-US/docs/Web/API/MutationEvent\">Mutation Events</a> feature, which was part of the DOM3 Events specification.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"mutationobserver\"><a href=\"/en-US/docs/Web/API/MutationObserver/MutationObserver\" title=\"MutationObserver()\"><code>MutationObserver()</code></a></dt>\n  <dd>\n    <p>Creates and returns a new <code>MutationObserver</code> which will invoke a specified callback function when DOM changes occur.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"disconnect\"><a href=\"/en-US/docs/Web/API/MutationObserver/disconnect\" title=\"disconnect()\"><code>disconnect()</code></a></dt>\n  <dd>\n    <p>Stops the <code>MutationObserver</code> instance from receiving further notifications until and unless <a href=\"/en-US/docs/Web/API/MutationObserver/observe\" title=\"observe()\"><code>observe()</code></a> is called again.</p>\n  </dd>\n  <dt id=\"observe\"><a href=\"/en-US/docs/Web/API/MutationObserver/observe\" title=\"observe()\"><code>observe()</code></a></dt>\n  <dd>\n    <p>Configures the <code>MutationObserver</code> to begin receiving notifications through its callback function when DOM changes matching the given options occur.</p>\n  </dd>\n  <dt id=\"takerecords\"><a href=\"/en-US/docs/Web/API/MutationObserver/takeRecords\" title=\"takeRecords()\"><code>takeRecords()</code></a></dt>\n  <dd>\n    <p>Removes all pending notifications from the <code>MutationObserver</code>'s notification queue and returns them in a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"/en-US/docs/Web/API/MutationRecord\"><code>MutationRecord</code></a> objects.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"mutation_observer_customize_resize_event_listener_demo","title":"Mutation Observer &amp; customize resize event listener &amp; demo","isH3":false,"content":"<p><a href=\"https://codepen.io/milofultz/pen/LYjPXPw\" class=\"external\" target=\"_blank\">https://codepen.io/milofultz/pen/LYjPXPw</a></p>","titleAsText":"Mutation Observer & customize resize event listener & demo"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>The following example was adapted from <a href=\"https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\" class=\"external\" target=\"_blank\">this blog post</a>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Select the node that will be observed for mutations</span>\n<span class=\"token keyword\">const</span> targetNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"some-id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Options for the observer (which mutations to observe)</span>\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">childList</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">subtree</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Callback function to execute when mutations are observed</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">callback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">mutationList<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> mutation <span class=\"token keyword\">of</span> mutationList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mutation<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"childList\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A child node has been added or removed.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mutation<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"attributes\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>mutation<span class=\"token punctuation\">.</span>attributeName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> attribute was modified.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create an observer instance linked to the callback function</span>\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MutationObserver</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Start observing the target node for configured mutations</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>targetNode<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Later, you can stop observing</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-mutationobserver","title":"DOM Standard"}],"query":"api.MutationObserver"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MutationObserver"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/ResizeObserver\"><code>ResizeObserver</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a></li>\n  <li><a href=\"https://developer.chrome.com/blog/detect-dom-changes-with-mutation-observers/\" class=\"external\" target=\"_blank\">A brief overview</a></li>\n  <li><a href=\"https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\" class=\"external\" target=\"_blank\">A more in-depth discussion</a></li>\n  <li><a href=\"https://www.youtube.com/watch?v=eRZ4pO0gVWw\" class=\"external\" target=\"_blank\">A screencast by Chromium developer Rafael Weinstein</a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Instance methods","id":"instance_methods"},{"text":"Mutation Observer &amp; customize resize event listener &amp; demo","id":"mutation_observer_customize_resize_event_listener_demo"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MutationObserver interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification.","popularity":0.1167,"modified":"2023-02-28T14:00:22.000Z","source":{"folder":"en-us/web/api/mutationobserver","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/mutationobserver/index.md","last_commit_url":"https://github.com/mdn/content/commit/2ba2c0efbdf0c34b1da02203e4e84b571c883629","filename":"index.md"},"short_title":"MutationObserver","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MutationObserver","title":"MutationObserver"}],"pageTitle":"MutationObserver - Web APIs | MDN","noIndexing":false}}