{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Using the CSS properties and values API","mdn_url":"/en-US/docs/Web/API/CSS_Properties_and_Values_API/guide","locale":"en-US","native":"English (US)","browserCompat":["api.CSS.registerProperty_static"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CSS_Properties_and_Values_API\">CSS Properties and Values API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><em><a href=\"/en-US/docs/Web/API/CSS_Properties_and_Values_API/guide\" aria-current=\"page\">Using the CSS properties and values API</a></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/CSSPropertyRule\"><code>CSSPropertyRule</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/CSS/registerProperty\"><code>CSS.registerProperty</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong>CSS Properties and Values API</strong> — part of the <a href=\"/en-US/docs/Web/Guide/Houdini\">CSS Houdini</a> umbrella of APIs — allows the registration of <a href=\"/en-US/docs/Web/CSS/--*\"><code>CSS custom properties</code></a>, allowing for property type checking, default values, and properties that do or do not inherit their value.</p>"}},{"type":"prose","value":{"id":"registering_a_custom_property","title":"Registering a custom property","isH3":false,"content":"<p>Registering a custom property allows you to tell the browser how the custom property should behave; what types are allowed, whether the custom property inherits its value, and what the default value of the custom property is. There are two ways to register a property, in <a href=\"/en-US/docs/Web/JavaScript\">JavaScript</a> or in <a href=\"/en-US/docs/Web/CSS\">CSS</a>.</p>"}},{"type":"prose","value":{"id":"css.registerproperty","title":"CSS.registerProperty","isH3":true,"content":"<p>The following will register a <a href=\"/en-US/docs/Web/CSS/--*\"><code>CSS custom property</code></a> named <code>--my-prop</code> using <a href=\"/en-US/docs/Web/API/CSS/registerProperty_static\" title=\"CSS.registerProperty\"><code>CSS.registerProperty</code></a>. <code>--my-prop</code> will use the CSS color syntax, it will have a default value of <code>#c0ffee</code>, and it will not inherit its value:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"--my-prop\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">syntax</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;color&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">inherits</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">initialValue</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#c0ffee\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"property","title":"@property","isH3":true,"content":"<p>The same registration can take place in CSS. The following will register a <a href=\"/en-US/docs/Web/CSS/--*\"><code>CSS custom property</code></a> named <code>--my-prop</code> using the <a href=\"/en-US/docs/Web/CSS/@property\"><code>@property</code></a> <a href=\"/en-US/docs/Web/CSS/At-rule\">at-rule</a>. <code>--my-prop</code> will use the CSS color syntax, it will have a default value of <code>#c0ffee</code>, and it will not inherit its value:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">css</span></p><pre class=\"brush: css notranslate\"><code><span class=\"token atrule\"><span class=\"token rule\">@property</span> --my-prop</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">syntax</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&lt;color&gt;\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">inherits</span><span class=\"token punctuation\">:</span> false<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">initial-value</span><span class=\"token punctuation\">:</span> #c0ffee<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"using_registered_custom_properties","title":"Using registered custom properties","isH3":false,"content":"<p>One of the advantages of registering a property is that the browser now knows how to handle your custom property through things like transitions! When a property isn't registered, the browser doesn't know how to treat it, so it assumes that any value can be used and therefore can't animate it. When a property has a registered syntax, though, the browser can optimize around that syntax, including being able to animate it!</p>\n<p>In this example, the custom property <code>--registered</code> has been registered using the syntax <code>&lt;color&gt;</code> and then used in a linear gradient. That property is then transitioned on hover or focus to a different color. Notice that the transition works with the registered property but not the unregistered one!</p>"}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>registered<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Background Registered<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>unregistered<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Background Not Registered<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">css</span></p><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.registered</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--registered</span><span class=\"token punctuation\">:</span> #c0ffee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to right<span class=\"token punctuation\">,</span> #fff<span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--registered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> --registered 1s ease-in-out<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.registered:hover,\n.registered:focus</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--registered</span><span class=\"token punctuation\">:</span> #b4d455<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.unregistered</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--unregistered</span><span class=\"token punctuation\">:</span> #c0ffee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to right<span class=\"token punctuation\">,</span> #fff<span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--unregistered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> --unregistered 1s ease-in-out<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.unregistered:hover,\n.unregistered:focus</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--unregistered</span><span class=\"token punctuation\">:</span> #b4d455<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40vh<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 3vw<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"--registered\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">syntax</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;color&gt;\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">inherits</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">initialValue</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":true,"content":"<div class=\"code-example\" id=\"sect1\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Using registered custom properties sample\" id=\"frame_using_registered_custom_properties\" width=\"320\" height=\"320\" src=\"http://localhost:5042/en-US/docs/Web/API/CSS_Properties_and_Values_API/guide/runner.html?id=using_registered_custom_properties\" loading=\"lazy\"></iframe></div>\n<p>While not functionally accurate, a good way to think about the difference between the unregistered property in the above example and the registered property is the difference between a <a href=\"/en-US/docs/Web/CSS/custom-ident\"><code>&lt;custom-ident&gt;</code></a> and a number when trying to animate <a href=\"/en-US/docs/Web/CSS/height\"><code>height</code></a>. You cannot transition or animate from <code>auto</code> to a number because the browser doesn't know the value of <code>auto</code> until it's calculated. With an unregistered property, the browser likewise doesn't know what the value <em>may be</em> until it's calculated, and because of that, it can't set up a transition from one value to another. When registered, though, you've told the browser what type of value it should expect, and because it knows that, it can then set up the transitions properly.</p>"}},{"type":"prose","value":{"id":"gotchas","title":"Gotchas","isH3":false,"content":"<p>There are two gotchas when registering a property. The first is that, once a property is registered, there's no way to update it, and trying to re-register it with <a href=\"/en-US/docs/Web/JavaScript\">JavaScript</a> will throw an error indicating it's already been defined.</p>\n<p>Second, unlike standard properties, registered properties aren't validated when they're parsed. Rather, they're validated when they're computed. That means both that invalid values won't appear as invalid when inspecting the element's properties, and that including an invalid property after a valid one won't fall back to the valid property. An invalid property will, however, fall back to its registered default.</p>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CSS.registerProperty_static"}}],"toc":[{"text":"Registering a custom property","id":"registering_a_custom_property"},{"text":"Using registered custom properties","id":"using_registered_custom_properties"},{"text":"Gotchas","id":"gotchas"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The CSS Properties and Values API — part of the CSS Houdini umbrella of APIs — allows the registration of CSS custom properties, allowing for property type checking, default values, and properties that do or do not inherit their value.","popularity":0.0006,"modified":"2023-12-06T05:37:07.000Z","source":{"folder":"en-us/web/api/css_properties_and_values_api/guide","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/css_properties_and_values_api/guide/index.md","last_commit_url":"https://github.com/mdn/content/commit/702463c4b6abb99c2ec8f06b07c8d33b8dff69eb","filename":"index.md"},"short_title":"Using the CSS properties and values API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CSS_Properties_and_Values_API","title":"CSS Properties and Values API"},{"uri":"/en-US/docs/Web/API/CSS_Properties_and_Values_API/guide","title":"Using the CSS properties and values API"}],"pageTitle":"Using the CSS properties and values API - Web APIs | MDN","noIndexing":false}}