{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"createImageBitmap() global function","mdn_url":"/en-US/docs/Web/API/createImageBitmap","locale":"en-US","native":"English (US)","browserCompat":["api.createImageBitmap"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Canvas_API\">Canvas API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/createImageBitmap\" aria-current=\"page\"><code>CreateImageBitmap</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Canvas API</summary><ol><li><a href=\"/en-US/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a href=\"/en-US/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a></li><li><a href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code></a></li><li><a href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code></a></li><li><em><a href=\"/en-US/docs/Web/API/createImageBitmap\" aria-current=\"page\"><code>createImageBitmap</code></a></em></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<p>\n  The <strong><code>createImageBitmap()</code></strong> method creates a bitmap from a\n  given source, optionally cropped to contain only a portion of that source. The method\n  exists on the global scope in both windows and workers. It accepts a variety of\n  different image sources, and returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to an\n  <a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createImageBitmap</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span>\n<span class=\"token function\">createImageBitmap</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n<span class=\"token function\">createImageBitmap</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> sx<span class=\"token punctuation\">,</span> sy<span class=\"token punctuation\">,</span> sw<span class=\"token punctuation\">,</span> sh<span class=\"token punctuation\">)</span>\n<span class=\"token function\">createImageBitmap</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> sx<span class=\"token punctuation\">,</span> sy<span class=\"token punctuation\">,</span> sw<span class=\"token punctuation\">,</span> sh<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"image\"><a href=\"#image\"><code>image</code></a></dt>\n  <dd>\n    <p>An image source, which can be any one of the following:</p>\n    <ul>\n      <li><a href=\"/en-US/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a></li>\n      <li><a href=\"/en-US/docs/Web/API/SVGImageElement\"><code>SVGImageElement</code></a></li>\n      <li><a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></li>\n      <li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n      <li><a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a></li>\n      <li><a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n      <li><a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li>\n      <li><a href=\"/en-US/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a></li>\n    </ul>\n  </dd>\n  <dt id=\"sx\"><a href=\"#sx\"><code>sx</code></a></dt>\n  <dd>\n    <p>\n      The x coordinate of the reference point of the rectangle from which the\n      <code>ImageBitmap</code> will be extracted.\n    </p>\n  </dd>\n  <dt id=\"sy\"><a href=\"#sy\"><code>sy</code></a></dt>\n  <dd>\n    <p>\n      The y coordinate of the reference point of the rectangle from which the\n      <code>ImageBitmap</code> will be extracted.\n    </p>\n  </dd>\n  <dt id=\"sw\"><a href=\"#sw\"><code>sw</code></a></dt>\n  <dd>\n    <p>\n      The width of the rectangle from which the <code>ImageBitmap</code> will be\n      extracted. This value can be negative.\n    </p>\n  </dd>\n  <dt id=\"sh\"><a href=\"#sh\"><code>sh</code></a></dt>\n  <dd>\n    <p>\n      The height of the rectangle from which the <code>ImageBitmap</code> will be\n      extracted. This value can be negative.\n    </p>\n  </dd>\n  <dt id=\"options\"><a href=\"#options\"><code>options</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object that sets options for the image's extraction. The available options are:</p>\n    <dl>\n      <dt id=\"imageorientation\"><a href=\"#imageorientation\"><code>imageOrientation</code></a></dt>\n      <dd>\n        <p>\n          Specifies whether the image should be presented\n          as is or flipped vertically. Either <code>none</code> (default) or\n          <code>flipY</code>.\n        </p>\n      </dd>\n      <dt id=\"premultiplyalpha\"><a href=\"#premultiplyalpha\"><code>premultiplyAlpha</code></a></dt>\n      <dd>\n        <p>\n          Specifies whether the bitmap's color channels\n          should be premultiplied by the alpha channel. One of <code>none</code>,\n          <code>premultiply</code>, or <code>default</code> (default).\n        </p>\n      </dd>\n      <dt id=\"colorspaceconversion\"><a href=\"#colorspaceconversion\"><code>colorSpaceConversion</code></a></dt>\n      <dd>\n        <p>\n          Specifies whether the image should be decoded\n          using color space conversion. Either <code>none</code> or <code>default</code>\n          (default). The value <code>default</code> indicates that implementation-specific\n          behavior is used.\n        </p>\n      </dd>\n      <dt id=\"resizewidth\"><a href=\"#resizewidth\"><code>resizeWidth</code></a></dt>\n      <dd>\n        <p>A long integer that indicates the output width.</p>\n      </dd>\n      <dt id=\"resizeheight\"><a href=\"#resizeheight\"><code>resizeHeight</code></a></dt>\n      <dd>\n        <p>A long integer that indicates the output height.</p>\n      </dd>\n      <dt id=\"resizequality\"><a href=\"#resizequality\"><code>resizeQuality</code></a></dt>\n      <dd>\n        <p>\n          Specifies the algorithm to be used for resizing the\n          input to match the output dimensions. One of <code>pixelated</code>,\n          <code>low</code> (default), <code>medium</code>, or <code>high</code>.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to an <a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> object\n  containing bitmap data from the given rectangle.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"creating_sprites_from_a_sprite_sheet","title":"Creating sprites from a sprite sheet","isH3":true,"content":"<p>\n  This example loads a sprite sheet, extracts individual sprites, and then renders each\n  sprite to the canvas. A sprite sheet is an image containing multiple smaller images,\n  each of which you want to be able to render separately.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myCanvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Wait for the sprite sheet to load</span>\nimage<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// Cut out two sprites from the sprite sheet</span>\n    <span class=\"token function\">createImageBitmap</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">createImageBitmap</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sprites</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Draw each sprite onto the canvas</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>sprites<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>sprites<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Load the sprite sheet from an image file</span>\nimage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"sprites.png\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/imagebitmap-and-animations.html#dom-createimagebitmap-dev","title":"HTML Standard"}],"query":"api.createImageBitmap"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.createImageBitmap"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\"><code>CanvasRenderingContext2D.drawImage()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The createImageBitmap() method creates a bitmap from a\n  given source, optionally cropped to contain only a portion of that source. The method\n  exists on the global scope in both windows and workers. It accepts a variety of\n  different image sources, and returns a Promise which resolves to an\n  ImageBitmap.","popularity":0.0155,"modified":"2023-11-09T07:42:44.000Z","source":{"folder":"en-us/web/api/createimagebitmap","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/createimagebitmap/index.md","last_commit_url":"https://github.com/mdn/content/commit/cb279e20569055b200f93802d1704846c28aa04f","filename":"index.md"},"short_title":"createImageBitmap()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/createImageBitmap","title":"createImageBitmap()"}],"pageTitle":"createImageBitmap() global function - Web APIs | MDN","noIndexing":false}}