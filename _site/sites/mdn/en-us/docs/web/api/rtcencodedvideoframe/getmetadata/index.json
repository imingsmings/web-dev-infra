{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCEncodedVideoFrame: getMetadata() method","mdn_url":"/en-US/docs/Web/API/RTCEncodedVideoFrame/getMetadata","locale":"en-US","native":"English (US)","browserCompat":["api.RTCEncodedVideoFrame.getMetadata"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame/data\"><code>data</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame/timestamp\"><code>timestamp</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><em><code>getMetadata()</code> </em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedAudioFrame\"><code>RTCEncodedAudioFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransformer\"><code>RTCRtpScriptTransformer</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/transform\"><code>RTCRtpSender.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTransformEvent\"><code>RTCTransformEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>getMetadata()</code></strong> method of the <a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a> interface returns an object containing the metadata associated with the frame.</p>\n<p>This includes information about the frame, including its size, video encoding, other frames needed to construct a full image, timestamp, and other information.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>An object with the following properties:</p>\n<dl>\n  <dt id=\"frameid\"><a href=\"#frameid\"><code>frameId</code></a></dt>\n  <dd>\n    <p>A positive integer value indicating the id of this frame.</p>\n  </dd>\n  <dt id=\"dependencies\"><a href=\"#dependencies\"><code>dependencies</code></a></dt>\n  <dd>\n    <p>\n      An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of positive integers indicating the frameIds of frames on which this frame depends.\n      For a key frame this will be empty, as a key frame contains all the information it needs to construct the image.\n      For a delta frame this will list all the frames needed to render this frame.\n      The type of frame can be determined using <a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame/type\"><code>RTCEncodedVideoFrame.type</code></a>.\n    </p>\n  </dd>\n  <dt id=\"width\"><a href=\"#width\"><code>width</code></a></dt>\n  <dd>\n    <p>\n      A positive integer indicating the width of the frame.\n      The maximum value is 65535.\n    </p>\n  </dd>\n  <dt id=\"height\"><a href=\"#height\"><code>height</code></a></dt>\n  <dd>\n    <p>\n      A positive integer indicating the height of the frame.\n      The maximum value is 65535.\n    </p>\n  </dd>\n  <dt id=\"spatialindex\"><a href=\"#spatialindex\"><code>spatialIndex</code></a></dt>\n  <dd>\n    <p>\n      A positive integer indicating the spatial index of the frame.\n      Some codecs allow generation of layers of frames with different layers of resolutions.\n      Frames in higher layers can be selectively dropped in order to reduce bit rate when needed, while maintaining acceptable video quality.\n    </p>\n  </dd>\n  <dt id=\"temporalindex\"><a href=\"#temporalindex\"><code>temporalIndex</code></a></dt>\n  <dd>\n    <p>\n      A positive integer indicating the temporal index of the frame.\n      Some codecs group frames in layers, based on whether dropping the a frame will prevent others from being decoded.\n      Frames in higher layers can be selectively dropped in order to reduce bit rate when needed, while maintaining acceptable video quality.\n    </p>\n  </dd>\n  <dt id=\"synchronizationsource\"><a href=\"#synchronizationsource\"><code>synchronizationSource</code></a></dt>\n  <dd>\n    <p>\n      A positive integer value indicating synchronization source (\"ssrc\") of the stream of RTP packets that are described by this encoded video frame.\n      A source might be something like a camera or microphone, or some kind of mixer app that combines multiple sources.\n      All packets from the same source share the same time source and sequence space, and so can be ordered relative to each other.\n      Note two frames with the same value refer to the same source (for more information see <a href=\"/en-US/docs/Web/API/RTCRtpStreamStats/ssrc\"><code>RTCRtpStreamStats.ssrc</code></a>).\n    </p>\n  </dd>\n  <dt id=\"payloadtype\"><a href=\"#payloadtype\"><code>payloadType</code></a></dt>\n  <dd>\n    <p>\n      A positive integer value in the range from 0 to 127 that describes the format of the RTP payload.\n      The mappings of values to formats is defined in RFC3550.\n    </p>\n  </dd>\n  <dt id=\"contributingsources\"><a href=\"#contributingsources\"><code>contributingSources</code></a></dt>\n  <dd>\n    <p>\n      An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of sources (ssrc) that have contributed to the frame.\n      Consider the case of a conferencing application that combines the audio and video from multiple users.\n      The <code>synchronizationSource</code> would include the ssrc of the application, while <code>contributingSources</code> would include the ssrc values of all the individual video and audio sources.\n    </p>\n  </dd>\n  <dt id=\"timestamp\"><a href=\"#timestamp\"><code>timestamp</code></a></dt>\n  <dd>\n    <p>\n      The <a href=\"https://en.wikipedia.org/wiki/Presentation_timestamp\" class=\"external\" target=\"_blank\">media presentation timestamp (PTS)</a> in microseconds of raw frame, matching the timestamp for raw frames which correspond to this frame.\n      This is used to synchronize separate video, audio, subtitle and other streams belonging to the same presentation.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>This example <a href=\"/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms\">WebRTC encoded transform</a> implementation shows how you might get the frame metadata in a <code>transform()</code> function and log it.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rtctransform\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token keyword\">async</span> transform <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">encodedFrame<span class=\"token punctuation\">,</span> controller</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token comment\">// Get the metadata and log</span>\n      <span class=\"token keyword\">const</span> frameMetaData <span class=\"token operator\">=</span> encodedFrame<span class=\"token punctuation\">.</span><span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>frameMetaData<span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\">// Enqueue the frame without modifying</span>\n      controller<span class=\"token punctuation\">.</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span>encodedFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span>transformer<span class=\"token punctuation\">.</span>readable\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipeThrough</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipeTo</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>transformer<span class=\"token punctuation\">.</span>writable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The resulting object from a local webcam might look like the one shown below.\n  Note that there are no contributing sources because there is just one source.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"contributingSources\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token number\">405</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"frameId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">406</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"height\"</span><span class=\"token operator\">:</span> <span class=\"token number\">480</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"payloadType\"</span><span class=\"token operator\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"spatialIndex\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"synchronizationSource\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3956716931</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"temporalIndex\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"width\"</span><span class=\"token operator\">:</span> <span class=\"token number\">640</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-encoded-transform/#dom-rtcencodedvideoframe-getmetadata","title":"WebRTC Encoded Transform"}],"query":"api.RTCEncodedVideoFrame.getMetadata"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCEncodedVideoFrame.getMetadata"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms\">Using WebRTC Encoded Transforms</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The getMetadata() method of the RTCEncodedVideoFrame interface returns an object containing the metadata associated with the frame.","popularity":0,"modified":"2023-09-08T02:40:33.000Z","source":{"folder":"en-us/web/api/rtcencodedvideoframe/getmetadata","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcencodedvideoframe/getmetadata/index.md","last_commit_url":"https://github.com/mdn/content/commit/4799bed9382147f0b0ff642a130a1c12ed59a28e","filename":"index.md"},"short_title":"getMetadata()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCEncodedVideoFrame","title":"RTCEncodedVideoFrame"},{"uri":"/en-US/docs/Web/API/RTCEncodedVideoFrame/getMetadata","title":"getMetadata()"}],"pageTitle":"RTCEncodedVideoFrame: getMetadata() method - Web APIs | MDN","noIndexing":false}}