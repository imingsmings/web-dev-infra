{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCEncodedVideoFrame: data property","mdn_url":"/en-US/docs/Web/API/RTCEncodedVideoFrame/data","locale":"en-US","native":"English (US)","browserCompat":["api.RTCEncodedVideoFrame.data"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><em><code>data</code> </em></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame/timestamp\"><code>timestamp</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame/getMetadata\"><code>getMetadata()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedAudioFrame\"><code>RTCEncodedAudioFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransformer\"><code>RTCRtpScriptTransformer</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/transform\"><code>RTCRtpSender.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTransformEvent\"><code>RTCTransformEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>data</code></strong> property of the <a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a> interface returns a buffer containing the frame data.</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>This example <a href=\"/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms\">WebRTC encoded transform</a> shows how you might get the frame data in a <a href=\"/en-US/docs/Web/API/TransformStream\"><code>TransformStream</code></a> <code>transform()</code> function and negate all the bits.</p>\n<p>\n  The <code>transform()</code> function constructs a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a> on the buffer in the frame <code>data</code> property, and also creates a view on a new <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>.\n  It then writes the inverted bytes in the original data to the new buffer, assigns the buffer to the encoded frame <code>data</code> property, and enqueues the modified frame on the stream.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rtctransform\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> transform <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">encodedFrame<span class=\"token punctuation\">,</span> controller</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Reconstruct the original frame.</span>\n      <span class=\"token keyword\">const</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span>encodedFrame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Construct a new buffer</span>\n      <span class=\"token keyword\">const</span> newData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span>encodedFrame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> newView <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span>newData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Negate all bits in the incoming frame</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> encodedFrame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        newView<span class=\"token punctuation\">.</span><span class=\"token function\">setInt8</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token operator\">~</span>view<span class=\"token punctuation\">.</span><span class=\"token function\">getInt8</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      encodedFrame<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> newData<span class=\"token punctuation\">;</span>\n      controller<span class=\"token punctuation\">.</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span>encodedFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span>transformer<span class=\"token punctuation\">.</span>readable\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipeThrough</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipeTo</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>transformer<span class=\"token punctuation\">.</span>writable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Note that the surrounding code shown here is described in <a href=\"/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms\">Using WebRTC Encoded Transforms</a>.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-encoded-transform/#dom-rtcencodedvideoframe-data","title":"WebRTC Encoded Transform"}],"query":"api.RTCEncodedVideoFrame.data"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCEncodedVideoFrame.data"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms\">Using WebRTC Encoded Transforms</a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The data property of the RTCEncodedVideoFrame interface returns a buffer containing the frame data.","popularity":0,"modified":"2023-09-08T02:40:33.000Z","source":{"folder":"en-us/web/api/rtcencodedvideoframe/data","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcencodedvideoframe/data/index.md","last_commit_url":"https://github.com/mdn/content/commit/4799bed9382147f0b0ff642a130a1c12ed59a28e","filename":"index.md"},"short_title":"data","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCEncodedVideoFrame","title":"RTCEncodedVideoFrame"},{"uri":"/en-US/docs/Web/API/RTCEncodedVideoFrame/data","title":"data"}],"pageTitle":"RTCEncodedVideoFrame: data property - Web APIs | MDN","noIndexing":false}}