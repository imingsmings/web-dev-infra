{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"GPUQueue: copyExternalImageToTexture() method","mdn_url":"/en-US/docs/Web/API/GPUQueue/copyExternalImageToTexture","locale":"en-US","native":"English (US)","browserCompat":["api.GPUQueue.copyExternalImageToTexture"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUQueue/label\"><code>label</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><em><code>copyExternalImageToTexture()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li><a href=\"/en-US/docs/Web/API/GPUQueue/onSubmittedWorkDone\"><code>onSubmittedWorkDone()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUQueue/submit\"><code>submit()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUQueue/writeBuffer\"><code>writeBuffer()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUQueue/writeTexture\"><code>writeTexture()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebGPU API</summary><ol><li><a href=\"/en-US/docs/Web/API/GPU\"><code>GPU</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapterInfo\"><code>GPUAdapterInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroup\"><code>GPUBindGroup</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCanvasContext\"><code>GPUCanvasContext</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationInfo\"><code>GPUCompilationInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationMessage\"><code>GPUCompilationMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDeviceLostInfo\"><code>GPUDeviceLostInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUExternalTexture\"><code>GPUExternalTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUInternalError\"><code>GPUInternalError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUOutOfMemoryError\"><code>GPUOutOfMemoryError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQuerySet\"><code>GPUQuerySet</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundle\"><code>GPURenderBundle</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSampler\"><code>GPUSampler</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTextureView\"><code>GPUTextureView</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUUncapturedErrorEvent\"><code>GPUUncapturedErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/gpu\"><code>Navigator.gpu</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/gpu\"><code>WorkerNavigator.gpu</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>copyExternalImageToTexture()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a> interface copies a snapshot taken from a source image, video, or canvas into a given <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a>.\n</p>\n<p>Using this function allows the user agent to determine the most efficient way to copy the data over for each source type.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">copyExternalImageToTexture</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> destination<span class=\"token punctuation\">,</span> copySize<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"source\"><a href=\"#source\"><code>source</code></a></dt>\n  <dd>\n    <p>An object representing the source to write to the destination, and its origin. This can take the following properties:</p>\n    <dl>\n      <dt id=\"source_2\"><a href=\"#source_2\"><code>source</code></a></dt>\n      <dd>\n        <p>An object providing the source of the snapshot to copy. This can be an <a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>, <a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>, <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a>, <a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>, or <a href=\"/en-US/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a>. The image source data is captured at the exact moment <code>copyExternalImageToTexture()</code> is invoked.</p>\n      </dd>\n      <dt id=\"origin\"><a href=\"#origin\"><code>origin</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An object or array specifying the origin of the copy â€” the top-left corner of the source sub-region to copy from. Together with <code>copySize</code>, this defines the full extent of the source sub-region. The <code>x</code> and <code>y</code> values default to 0 if any of all of <code>origin</code> is omitted.</p>\n        <p>What follows is a sample array:</p>\n        <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n        <p>The object equivalent would look like this:</p>\n        <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n      </dd>\n      <dt id=\"flipy\"><a href=\"#flipy\"><code>flipY</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A boolean. If set to <code>true</code>, the image capture is flipped vertically. If omitted, <code>flipY</code> defaults to <code>false</code>.</p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"destination\"><a href=\"#destination\"><code>destination</code></a></dt>\n  <dd>\n    <p>An object defining the texture subresource and origin to write the captured image to, plus encoding metadata. This can take the following properties:</p>\n    <dl>\n      <dt id=\"aspect\"><a href=\"#aspect\"><code>aspect</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An enumerated value defining which aspects of the texture to write the image to. Possible values are:</p>\n        <dl>\n          <dt id=\"all\"><a href=\"#all\"><code>\"all\"</code></a></dt>\n          <dd>\n            <p>All available aspects of the texture format will be written to, which can mean all or any of color, depth, and stencil, depending on what kind of format you are dealing with.</p>\n          </dd>\n          <dt id=\"depth-only\"><a href=\"#depth-only\"><code>\"depth-only\"</code></a></dt>\n          <dd>\n            <p>Only the depth aspect of a <a href=\"https://gpuweb.github.io/gpuweb/#combined-depth-stencil-format\" class=\"external\" target=\"_blank\">depth-or-stencil format</a> will be written to.</p>\n          </dd>\n          <dt id=\"stencil-only\"><a href=\"#stencil-only\"><code>\"stencil-only\"</code></a></dt>\n          <dd>\n            <p>Only the stencil aspect of a depth-or-stencil format will be written to.</p>\n          </dd>\n        </dl>\n        <p>If omitted, <code>aspect</code> takes a value of <code>\"all\"</code>.</p>\n      </dd>\n      <dt id=\"colorspace\"><a href=\"#colorspace\"><code>colorSpace</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An enumerated value describing the color space and encoding used to encode data into the destination texture. Possible values are <code>\"srgb\"</code> and <code>\"display-p3\"</code>. If omitted, <code>colorSpace</code> defaults to <code>\"srgb\"</code>.</p>\n        <div class=\"notecard note\" id=\"sect2\">\n          <p><strong>Note:</strong> The encoding may result in values outside of the range <code>[0, 1]</code> being written to the target texture, if its format can represent them. Otherwise, the results are clamped to the target texture format's range. Conversion may not be necessary if <code>colorSpace</code> matches the source image color space.</p>\n        </div>\n      </dd>\n      <dt id=\"miplevel\"><a href=\"#miplevel\"><code>mipLevel</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A number representing the mip-map level of the texture to write the image to. If omitted, <code>mipLevel</code> defaults to 0.</p>\n      </dd>\n      <dt id=\"origin_2\"><a href=\"#origin_2\"><code>origin</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An object or array specifying the origin of the copy â€” the minimum corner of the texture region to write the image data to. Together with <code>copySize</code>, this defines the full extent of the region to copy to. The <code>x</code>, <code>y</code>, and <code>z</code> values default to 0 if any of all of <code>origin</code> is omitted.</p>\n        <p>What follows is a sample array:</p>\n        <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n        <p>The object equivalent would look like this:</p>\n        <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">z</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n      </dd>\n      <dt id=\"premultipliedalpha\"><a href=\"#premultipliedalpha\"><code>premultipliedAlpha</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A boolean. If set to <code>true</code>, the image data written into the texture will have its RGB channels premultiplied by the alpha channel. If omitted, <code>premultipliedAlpha</code> defaults to <code>false</code>.</p>\n        <div class=\"notecard note\" id=\"sect3\">\n          <p><strong>Note:</strong> If this option is set to <code>true</code> and the <code>source</code> is also premultiplied, the source RGB values must be preserved even if they exceed their corresponding alpha values.</p>\n        </div>\n      </dd>\n      <dt id=\"texture\"><a href=\"#texture\"><code>texture</code></a></dt>\n      <dd>\n        <p>A <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a> object representing the texture to write the data to.</p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"copysize\"><a href=\"#copysize\"><code>copySize</code></a></dt>\n  <dd>\n    <p>An object or array specifying <code>width</code>, <code>height</code>, and <code>depthOrArrayLayers</code> â€” of the region to copy from/to.</p>\n    <p>What follows is a sample array:</p>\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n    <p>The object equivalent would look like this:</p>\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">depthOrArrayLayers</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n    <p>The <code>width</code> value has to be included. If the <code>height</code> or <code>depthOrArrayLayers</code> values are omitted, they default to 1.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>Undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"operationerror\"><a href=\"#operationerror\"><code>OperationError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>The method throws an <code>OperationError</code> if the following criteria are not met:</p>\n    <ul>\n      <li><code>source.origin.x</code> + the width of the region to copy to is less than or equal to the width of the source image.</li>\n      <li><code>source.origin.y</code> + the height of the region to copy to is less than or equal to the height of the source image.</li>\n      <li><code>source.origin.z</code> + the depthOrArrayLayers of the region to copy to is less than or equal to 1.</li>\n      <li><code>dataOffset</code> is equal to or smaller than the size of <code>data</code>.</li>\n      <li>The size of <code>data</code> (when converted to bytes, in the case of <code>TypedArray</code>s) is a multiple of 4.</li>\n    </ul>\n  </dd>\n  <dt id=\"securityerror\"><a href=\"#securityerror\"><code>SecurityError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the image source data is cross-origin.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"validation","title":"Validation","isH3":true,"content":"<p>The following criteria must be met when calling <strong><code>writeTexture()</code></strong>, otherwise a <a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a> is generated and the <a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a> becomes invalid:</p>\n<ul>\n  <li><code>mipLevel</code> is less than the destination <a href=\"/en-US/docs/Web/API/GPUTexture/mipLevelCount\"><code>GPUTexture.mipLevelCount</code></a>.</li>\n  <li><code>origin.x</code> is a multiple of the texel block width of the destination <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a>.</li>\n  <li><code>origin.y</code> is a multiple of the texel block height of the destination <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a>.</li>\n  <li>If the destination <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a> is a <a href=\"https://gpuweb.github.io/gpuweb/#combined-depth-stencil-format\" class=\"external\" target=\"_blank\">depth-or-stencil format</a>, the image capture size is equal to <code>size</code>.</li>\n  <li>The destination <a href=\"/en-US/docs/Web/API/GPUTexture/usage\"><code>GPUTexture.usage</code></a> includes the <code>GPUTextureUsage.COPY_DST</code> and <code>GPUTextureUsage.RENDER_ATTACHMENT</code> flags.</li>\n  <li>The destination <a href=\"/en-US/docs/Web/API/GPUTexture/dimension\"><code>GPUTexture.dimension</code></a> is <code>\"2d\"</code>.</li>\n  <li>The destination <a href=\"/en-US/docs/Web/API/GPUTexture/sampleCount\"><code>GPUTexture.sampleCount</code></a> is 1.</li>\n  <li>The destination <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a> is one of the following (which support <code>GPUTextureUsage.RENDER_ATTACHMENT</code> usage):\n    <ul>\n      <li><code>\"r8unorm\"</code></li>\n      <li><code>\"r16float\"</code></li>\n      <li><code>\"r32float\"</code></li>\n      <li><code>\"rg8unorm\"</code></li>\n      <li><code>\"rg16float\"</code></li>\n      <li><code>\"rg32float\"</code></li>\n      <li><code>\"rgba8unorm\"</code></li>\n      <li><code>\"rgba8unorm-srgb\"</code></li>\n      <li><code>\"bgra8unorm\"</code></li>\n      <li><code>\"bgra8unorm-srgb\"</code></li>\n      <li><code>\"rgb10a2unorm\"</code></li>\n      <li><code>\"rgba16float\"</code></li>\n      <li><code>\"rgba32float\"</code></li>\n    </ul>\n  </li>\n  <li><code>destination.origin.x</code> + <code>copySize.width</code> is less than or equal to the <code>destination</code> <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a> <a href=\"/en-US/docs/Web/API/GPUTexture/width\" title=\"width\"><code>width</code></a>.</li>\n  <li><code>destination.origin.y</code> + <code>copySize.height</code> is less than or equal to the <code>destination</code> <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a> <a href=\"/en-US/docs/Web/API/GPUTexture/height\" title=\"height\"><code>height</code></a>.</li>\n  <li><code>destination.origin.z</code> + <code>copySize.depthOrArrayLayers</code> is less than or equal to the <code>destination</code> <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a> <a href=\"/en-US/docs/Web/API/GPUTexture/depthOrArrayLayers\" title=\"depthOrArrayLayers\"><code>depthOrArrayLayers</code></a>.</li>\n  <li>The <code>destination</code> <a href=\"/en-US/docs/Web/API/GPUTexture/width\"><code>GPUTexture.width</code></a> is a multiple of the texel block width of the destination <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a>.</li>\n  <li>The <code>destination</code> <a href=\"/en-US/docs/Web/API/GPUTexture/height\"><code>GPUTexture.height</code></a> is a multiple of the texel block height of the destination <a href=\"/en-US/docs/Web/API/GPUTexture/format\"><code>GPUTexture.format</code></a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the WebGPU Samples <a href=\"https://webgpu.github.io/webgpu-samples/samples/texturedCube\" class=\"external\" target=\"_blank\">Textured Cube example</a>, the following snippet is used to fetch an image and upload it into a <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a>:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> <span class=\"token literal-property property\">cubeTexture</span><span class=\"token operator\">:</span> GPUTexture<span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeScript</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"../../../assets/img/Di-3d.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">import</span><span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>url\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> imageBitmap <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">createImageBitmap</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  cubeTexture <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span><span class=\"token function\">createTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>imageBitmap<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> imageBitmap<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rgba8unorm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">usage</span><span class=\"token operator\">:</span>\n      GPUTextureUsage<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_BINDING</span> <span class=\"token operator\">|</span>\n      GPUTextureUsage<span class=\"token punctuation\">.</span><span class=\"token constant\">COPY_DST</span> <span class=\"token operator\">|</span>\n      GPUTextureUsage<span class=\"token punctuation\">.</span><span class=\"token constant\">RENDER_ATTACHMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  device<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span><span class=\"token function\">copyExternalImageToTexture</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> imageBitmap <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">texture</span><span class=\"token operator\">:</span> cubeTexture <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>imageBitmap<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> imageBitmap<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://gpuweb.github.io/gpuweb/#dom-gpuqueue-copyexternalimagetotexture","title":"WebGPU"}],"query":"api.GPUQueue.copyExternalImageToTexture"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.GPUQueue.copyExternalImageToTexture"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The copyExternalImageToTexture() method of the\n  GPUQueue interface copies a snapshot taken from a source image, video, or canvas into a given GPUTexture.","popularity":0,"modified":"2023-07-19T10:31:38.000Z","source":{"folder":"en-us/web/api/gpuqueue/copyexternalimagetotexture","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/gpuqueue/copyexternalimagetotexture/index.md","last_commit_url":"https://github.com/mdn/content/commit/bc35e70e543bc32e4e1eb0436b18f11e17fb470c","filename":"index.md"},"short_title":"copyExternalImageToTexture()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/GPUQueue","title":"GPUQueue"},{"uri":"/en-US/docs/Web/API/GPUQueue/copyExternalImageToTexture","title":"copyExternalImageToTexture()"}],"pageTitle":"GPUQueue: copyExternalImageToTexture() method - Web APIs | MDN","noIndexing":false}}