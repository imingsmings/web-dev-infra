{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"GPUQueue","mdn_url":"/en-US/docs/Web/API/GPUQueue","locale":"en-US","native":"English (US)","browserCompat":["api.GPUQueue"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/GPUQueue\" aria-current=\"page\"><code>GPUQueue</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUQueue/label\"><code>label</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUQueue/copyExternalImageToTexture\"><code>copyExternalImageToTexture()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUQueue/onSubmittedWorkDone\"><code>onSubmittedWorkDone()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUQueue/submit\"><code>submit()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUQueue/writeBuffer\"><code>writeBuffer()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUQueue/writeTexture\"><code>writeTexture()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebGPU API</summary><ol><li><a href=\"/en-US/docs/Web/API/GPU\"><code>GPU</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapterInfo\"><code>GPUAdapterInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroup\"><code>GPUBindGroup</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCanvasContext\"><code>GPUCanvasContext</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationInfo\"><code>GPUCompilationInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationMessage\"><code>GPUCompilationMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDeviceLostInfo\"><code>GPUDeviceLostInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUExternalTexture\"><code>GPUExternalTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUInternalError\"><code>GPUInternalError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUOutOfMemoryError\"><code>GPUOutOfMemoryError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQuerySet\"><code>GPUQuerySet</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundle\"><code>GPURenderBundle</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSampler\"><code>GPUSampler</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTextureView\"><code>GPUTextureView</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUUncapturedErrorEvent\"><code>GPUUncapturedErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/gpu\"><code>Navigator.gpu</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/gpu\"><code>WorkerNavigator.gpu</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>GPUQueue</code></strong> interface of the <a href=\"/en-US/docs/Web/API/WebGPU_API\" title=\"WebGPU API\">WebGPU API</a> controls execution of encoded commands on the GPU.</p>\n<p>A device's primary queue is accessed via the <a href=\"/en-US/docs/Web/API/GPUDevice/queue\"><code>GPUDevice.queue</code></a> property.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"label\"><a href=\"/en-US/docs/Web/API/GPUQueue/label\" title=\"label\"><code>label</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A string providing a label that can be used to identify the object, for example in <a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a> messages or console warnings.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"copyexternalimagetotexture\"><a href=\"/en-US/docs/Web/API/GPUQueue/copyExternalImageToTexture\" title=\"copyExternalImageToTexture()\"><code>copyExternalImageToTexture()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Copies a snapshot taken from a source image, video, or canvas into a given <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a>.</p>\n  </dd>\n  <dt id=\"onsubmittedworkdone\"><a href=\"/en-US/docs/Web/API/GPUQueue/onSubmittedWorkDone\" title=\"onSubmittedWorkDone()\"><code>onSubmittedWorkDone()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves when all the work submitted to the GPU via this <code>GPUQueue</code> at the point the method is called has been processed.</p>\n  </dd>\n  <dt id=\"submit\"><a href=\"/en-US/docs/Web/API/GPUQueue/submit\" title=\"submit()\"><code>submit()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Schedules the execution of command buffers represented by one or more <a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a> objects by the GPU.</p>\n  </dd>\n  <dt id=\"writebuffer\"><a href=\"/en-US/docs/Web/API/GPUQueue/writeBuffer\" title=\"writeBuffer()\"><code>writeBuffer()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Writes a provided data source into a given <a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a>.</p>\n  </dd>\n  <dt id=\"writetexture\"><a href=\"/en-US/docs/Web/API/GPUQueue/writeTexture\" title=\"writeTexture()\"><code>writeTexture()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Writes a provided data source into a given <a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In our <a href=\"https://mdn.github.io/dom-examples/webgpu-render-demo/\" class=\"external\" target=\"_blank\">basic render demo</a>, we define some vertex data in a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> that we'll use to draw a triangle:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> vertices <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>To use this data in a render pipeline, we need to put it into a <a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a>. First we'll create the buffer:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> vertexBuffer <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> vertices<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">,</span> <span class=\"token comment\">// make it big enough to store vertices in</span>\n  <span class=\"token literal-property property\">usage</span><span class=\"token operator\">:</span> GPUBufferUsage<span class=\"token punctuation\">.</span><span class=\"token constant\">VERTEX</span> <span class=\"token operator\">|</span> GPUBufferUsage<span class=\"token punctuation\">.</span><span class=\"token constant\">COPY_DST</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>To get the data into the buffer we can use the <a href=\"/en-US/docs/Web/API/GPUQueue/writeBuffer\" title=\"writeBuffer()\"><code>writeBuffer()</code></a> function, which lets the user agent determine most efficient way to copy the data over:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>device<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span><span class=\"token function\">writeBuffer</span><span class=\"token punctuation\">(</span>vertexBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertices<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Later on, a set of commands is encoded into a <a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a> using the <a href=\"/en-US/docs/Web/API/GPUCommandEncoder/finish\"><code>GPUCommandEncoder.finish()</code></a> method. The command buffer is then passed into the queue via a <a href=\"/en-US/docs/Web/API/GPUQueue/submit\" title=\"submit()\"><code>submit()</code></a> call, ready to be processed by the GPU.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>device<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>commandEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Study the <a href=\"https://webgpu.github.io/webgpu-samples/\" class=\"external\" target=\"_blank\">WebGPU samples</a> to find more queue examples.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://gpuweb.github.io/gpuweb/#gpu-queue","title":"WebGPU"}],"query":"api.GPUQueue"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.GPUQueue"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The GPUQueue interface of the WebGPU API controls execution of encoded commands on the GPU.","popularity":0.0007,"modified":"2023-04-08T00:46:20.000Z","source":{"folder":"en-us/web/api/gpuqueue","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/gpuqueue/index.md","last_commit_url":"https://github.com/mdn/content/commit/dec68d9038b414114297aee9d5c0194752a0f758","filename":"index.md"},"short_title":"GPUQueue","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/GPUQueue","title":"GPUQueue"}],"pageTitle":"GPUQueue - Web APIs | MDN","noIndexing":false}}