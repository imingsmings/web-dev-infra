{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PerformanceObserverEntryList","mdn_url":"/en-US/docs/Web/API/PerformanceObserverEntryList","locale":"en-US","native":"English (US)","browserCompat":["api.PerformanceObserverEntryList"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Performance_API\">Performance API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\" aria-current=\"page\"><code>PerformanceObserverEntryList</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntries\"><code>getEntries()</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByName\"><code>getEntriesByName()</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByType\"><code>getEntriesByType()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Performance API</summary><ol><li><a href=\"/en-US/docs/Web/API/EventCounts\"><code>EventCounts</code></a></li><li><a href=\"/en-US/docs/Web/API/LargestContentfulPaint\"><code>LargestContentfulPaint</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShift\"><code>LayoutShift</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShiftAttribution\"><code>LayoutShiftAttribution</code></a></li><li><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceElementTiming\"><code>PerformanceElementTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming\"><code>PerformanceEventTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceLongTaskTiming\"><code>PerformanceLongTaskTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigation\"><code>PerformanceNavigation</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformancePaintTiming\"><code>PerformancePaintTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming\"><code>PerformanceServerTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/VisibilityStateEntry\"><code>VisibilityStateEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>PerformanceObserverEntryList</code></strong> interface is a list of <a href=\"/en-US/docs/Web/API/PerformanceEntry\" title=\"performance events\">performance events</a> that were explicitly observed via the <a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\" title=\"observe()\"><code>observe()</code></a> method.</p>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"performanceobserverentrylist.getentries\"><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntries\" title=\"PerformanceObserverEntryList.getEntries()\"><code>PerformanceObserverEntryList.getEntries()</code></a></dt>\n  <dd>\n    <p>Returns a list of all explicitly observed <a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> objects.</p>\n  </dd>\n  <dt id=\"performanceobserverentrylist.getentriesbytype\"><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByType\" title=\"PerformanceObserverEntryList.getEntriesByType()\"><code>PerformanceObserverEntryList.getEntriesByType()</code></a></dt>\n  <dd>\n    <p>Returns a list of all explicitly observed <a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> objects of the given entry type.</p>\n  </dd>\n  <dt id=\"performanceobserverentrylist.getentriesbyname\"><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByName\" title=\"PerformanceObserverEntryList.getEntriesByName()\"><code>PerformanceObserverEntryList.getEntriesByName()</code></a></dt>\n  <dd>\n    <p>Returns a list of all explicitly observed <a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> objects based on the given name and entry type.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_performanceobserverentrylist","title":"Using PerformanceObserverEntryList","isH3":true,"content":"<p>In the following example, <code>list</code> is the <code>PerformanceObserverEntryList</code> object. The <a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntries\" title=\"getEntries()\"><code>getEntries()</code></a> method is called to get all explicitly observed <a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> objects which are \"measure\" and \"mark\" in this case.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">perfObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>entryType <span class=\"token operator\">===</span> <span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entry<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'s startTime: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entry<span class=\"token punctuation\">.</span>startTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>entryType <span class=\"token operator\">===</span> <span class=\"token string\">\"measure\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entry<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'s duration: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entry<span class=\"token punctuation\">.</span>duration<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span>perfObserver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"measure\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#performanceobserverentrylist-interface","title":"Performance Timeline"}],"query":"api.PerformanceObserverEntryList"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceObserverEntryList"}}],"toc":[{"text":"Instance methods","id":"instance_methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The PerformanceObserverEntryList interface is a list of performance events that were explicitly observed via the observe() method.","popularity":0.001,"modified":"2023-03-01T09:58:07.000Z","source":{"folder":"en-us/web/api/performanceobserverentrylist","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/performanceobserverentrylist/index.md","last_commit_url":"https://github.com/mdn/content/commit/c244d3b2cb6c17e6ba8692e3faec393afd9988ca","filename":"index.md"},"short_title":"PerformanceObserverEntryList","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PerformanceObserverEntryList","title":"PerformanceObserverEntryList"}],"pageTitle":"PerformanceObserverEntryList - Web APIs | MDN","noIndexing":false}}