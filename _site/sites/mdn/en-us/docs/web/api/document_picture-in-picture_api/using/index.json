{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Using the Document Picture-in-Picture API","mdn_url":"/en-US/docs/Web/API/Document_Picture-in-Picture_API/Using","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Document_Picture-in-Picture_API\">Document Picture-in-Picture API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><em><a href=\"/en-US/docs/Web/API/Document_Picture-in-Picture_API/Using\" aria-current=\"page\">Using the Document Picture-in-Picture API</a></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/DocumentPictureInPicture\"><code>DocumentPictureInPicture</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentPictureInPictureEvent\"><code>DocumentPictureInPictureEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Window/documentPictureInPicture\"><code>Window.documentPictureInPicture</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/DocumentPictureInPicture/enter_event\"><code>DocumentPictureInPicture</code>: <code>enter</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div><div class=\"notecard secure\" id=\"sect2\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>This guide provides a walkthrough of typical usage of the <a href=\"/en-US/docs/Web/API/Document_Picture-in-Picture_API\" title=\"Document Picture-in-Picture API\">Document Picture-in-Picture API</a>.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> You can see the featured demo in action at <a href=\"https://mdn.github.io/dom-examples/document-picture-in-picture/\" class=\"external\" target=\"_blank\">Document Picture-in-Picture API Example</a> (see the full <a href=\"https://github.com/chrisdavidmills/dom-examples/tree/main/document-picture-in-picture\" class=\"external\" target=\"_blank\">source code</a> also).</p>\n</div>"}},{"type":"prose","value":{"id":"sample_html","title":"Sample HTML","isH3":false,"content":"<p>The following HTML sets up a basic video player.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>in-pip-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    Video player is currently in the separate Picture-in-Picture window.\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>player<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span>\n      <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>assets/bigbuckbunny.mp4<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">controls</span>\n      <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>320<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>credits<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://peach.blender.org/download/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        Video by Blender <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span>\n      <span class=\"token punctuation\">&gt;</span></span>;\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://peach.blender.org/about/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        licensed CC-BY 3.0\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>controlbar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>no-picture-in-picture<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        Document Picture-in-Picture API not available\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"feature_detection","title":"Feature detection","isH3":false,"content":"<p>To check if the Document Picture-in-Picture API is supported, you can test whether <code>documentPictureInPicture</code> is available on <code>window</code>:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"documentPictureInPicture\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".no-picture-in-picture\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> togglePipButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  togglePipButton<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Toggle Picture-in-Picture\"</span><span class=\"token punctuation\">;</span>\n  togglePipButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> togglePictureInPicture<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"controlbar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>togglePipButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>If it is available, we remove the \"Document Picture-in-Picture API not available\" message and instead add a <a href=\"/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> element to open the video player in a Document Picture-in-Picture window.</p>"}},{"type":"prose","value":{"id":"open_a_picture-in-picture_window","title":"Open a Picture-in-Picture window","isH3":false,"content":"<p>The following JavaScript calls <a href=\"/en-US/docs/Web/API/DocumentPictureInPicture/requestWindow\" title=\"window.documentPictureInPicture.requestWindow()\"><code>window.documentPictureInPicture.requestWindow()</code></a> to open a blank Picture-in-Picture window. The returned <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> fulfills with a Picture-in-Picture <a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a> object. The video player is moved to that window using <a href=\"/en-US/docs/Web/API/Element/append\"><code>Element.append()</code></a>, and we display the message informing the user that it has been moved.</p>\n<p>The <code>width</code> and <code>height</code> options of <code>requestWindow()</code> set the Picture-in-Picture window to the desired size. Browsers may clamp the option values if they are too large or too small to fit a user-friendly window size.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">togglePictureInPicture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Returns null if no pip window is currently open</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>documentPictureInPicture<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Open a Picture-in-Picture window.</span>\n    <span class=\"token keyword\">const</span> pipWindow <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> documentPictureInPicture<span class=\"token punctuation\">.</span><span class=\"token function\">requestWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> videoPlayer<span class=\"token punctuation\">.</span>clientWidth<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> videoPlayer<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">// Move the player to the Picture-in-Picture window.</span>\n    pipWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>videoPlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display a message to say it has been moved</span>\n    inPipMessage<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"block\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"copy_style_sheets_to_the_picture-in-picture_window","title":"Copy style sheets to the Picture-in-Picture window","isH3":false,"content":"<p>To copy all CSS style sheets from the originating window, loop through all style sheets explicitly linked into or embedded in the document (via <a href=\"/en-US/docs/Web/API/Document/styleSheets\"><code>Document.styleSheets</code></a>) and append them to the Picture-in-Picture window. Note that this is a one-time copy.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// ...</span>\n\n<span class=\"token comment\">// Copy style sheets over from the initial document</span>\n<span class=\"token comment\">// so that the player looks the same.</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>document<span class=\"token punctuation\">.</span>styleSheets<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">styleSheet</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> cssRules <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>styleSheet<span class=\"token punctuation\">.</span>cssRules<span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rule</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> rule<span class=\"token punctuation\">.</span>cssText<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    style<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> cssRules<span class=\"token punctuation\">;</span>\n    pipWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"link\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    link<span class=\"token punctuation\">.</span>rel <span class=\"token operator\">=</span> <span class=\"token string\">\"stylesheet\"</span><span class=\"token punctuation\">;</span>\n    link<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> styleSheet<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n    link<span class=\"token punctuation\">.</span>media <span class=\"token operator\">=</span> styleSheet<span class=\"token punctuation\">.</span>media<span class=\"token punctuation\">;</span>\n    link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> styleSheet<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">;</span>\n    pipWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"handle_when_the_picture-in-picture_window_closes","title":"Handle when the Picture-in-Picture window closes","isH3":false,"content":"<p>The code for toggling the Picture-in-Picture window closed again when the button is pressed a second time looks like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>inPipMessage<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span>\nplayerContainer<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>videoPlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>documentPictureInPicture<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Here we reverse the DOM changes — hiding the message and putting the video player back in the player container in the main app window. We also close the Picture-in-Picture window programmatically using the <a href=\"/en-US/docs/Web/API/Window/close\"><code>Window.close()</code></a> method.</p>\n<p>However, you also need to consider the case where the user closes the Picture-in-Picture window by pressing the browser supplied close (X) button on the window itself. You can handle this by detecting when the window closes using the <a href=\"/en-US/docs/Web/API/Window/pagehide_event\"><code>pagehide</code></a> event:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>pipWindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pagehide\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  inPipMessage<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span>\n  playerContainer<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>videoPlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"listen_to_when_the_website_enters_picture-in-picture","title":"Listen to when the website enters Picture-in-Picture","isH3":false,"content":"<p>Listen to the <a href=\"/en-US/docs/Web/API/DocumentPictureInPicture/enter_event\" title=\"enter\"><code>enter</code></a> event on the <code>DocumentPictureInPicture</code> instance to know when a Picture-in-Picture window is opened.</p>\n<p>In our demo, we use the <code>enter</code> event to add a mute toggle button to the Picture-in-Picture window:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>documentPictureInPicture<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enter\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> pipWindow <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Video player has entered the pip window\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> pipMuteButton <span class=\"token operator\">=</span> pipWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  pipMuteButton<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Mute\"</span><span class=\"token punctuation\">;</span>\n  pipMuteButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pipVideo <span class=\"token operator\">=</span> pipWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pipVideo<span class=\"token punctuation\">.</span>muted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      pipVideo<span class=\"token punctuation\">.</span>muted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      pipMuteButton<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Unmute\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      pipVideo<span class=\"token punctuation\">.</span>muted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      pipMuteButton<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Mute\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  pipWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>pipMuteButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> The <a href=\"/en-US/docs/Web/API/DocumentPictureInPictureEvent\"><code>DocumentPictureInPictureEvent</code></a> event object contains a <code>window</code> property to access the Picture-in-Picture window.</p>\n</div>"}},{"type":"prose","value":{"id":"access_elements_and_handle_events","title":"Access elements and handle events","isH3":false,"content":"<p>You can access elements in the Picture-in-Picture window in several different ways:</p>\n<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a> instance returned by the <a href=\"/en-US/docs/Web/API/DocumentPictureInPicture/requestWindow\"><code>DocumentPictureInPicture.requestWindow()</code></a> method, as seen above.</li>\n  <li>Via the <code>window</code> property of the <a href=\"/en-US/docs/Web/API/DocumentPictureInPictureEvent\"><code>DocumentPictureInPictureEvent</code></a> event object (on the <a href=\"/en-US/docs/Web/API/DocumentPictureInPicture/enter_event\" title=\"enter\"><code>enter</code></a> event), as seen above.</li>\n  <li>Via the <a href=\"/en-US/docs/Web/API/DocumentPictureInPicture/window\"><code>DocumentPictureInPicture.window</code></a> property:</li>\n</ul>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> pipWindow <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>documentPictureInPicture<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pipWindow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Mute video playing in the Picture-in-Picture window.</span>\n  <span class=\"token keyword\">const</span> pipVideo <span class=\"token operator\">=</span> pipWindow<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  pipVideo<span class=\"token punctuation\">.</span>muted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Once you've got a reference to the Picture-in-Picture <code>window</code> instance, you can manipulate the DOM (for example creating buttons) and respond to user input events (such as <a href=\"/en-US/docs/Web/API/Element/click_event\"><code>click</code></a>) as you would do normally in the regular browser window context.</p>"}}],"toc":[{"text":"Sample HTML","id":"sample_html"},{"text":"Feature detection","id":"feature_detection"},{"text":"Open a Picture-in-Picture window","id":"open_a_picture-in-picture_window"},{"text":"Copy style sheets to the Picture-in-Picture window","id":"copy_style_sheets_to_the_picture-in-picture_window"},{"text":"Handle when the Picture-in-Picture window closes","id":"handle_when_the_picture-in-picture_window_closes"},{"text":"Listen to when the website enters Picture-in-Picture","id":"listen_to_when_the_website_enters_picture-in-picture"},{"text":"Access elements and handle events","id":"access_elements_and_handle_events"}],"summary":"This guide provides a walkthrough of typical usage of the Document Picture-in-Picture API.","popularity":0,"modified":"2023-10-18T13:32:39.000Z","source":{"folder":"en-us/web/api/document_picture-in-picture_api/using","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/document_picture-in-picture_api/using/index.md","last_commit_url":"https://github.com/mdn/content/commit/7c1f91ddd9cd584b041d18a916ab850a226824ad","filename":"index.md"},"short_title":"Using the Document Picture-in-Picture API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Document_Picture-in-Picture_API","title":"Document Picture-in-Picture API"},{"uri":"/en-US/docs/Web/API/Document_Picture-in-Picture_API/Using","title":"Using the Document Picture-in-Picture API"}],"pageTitle":"Using the Document Picture-in-Picture API - Web APIs | MDN","noIndexing":false}}