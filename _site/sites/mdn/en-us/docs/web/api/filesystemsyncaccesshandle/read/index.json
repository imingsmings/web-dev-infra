{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"FileSystemSyncAccessHandle: read() method","mdn_url":"/en-US/docs/Web/API/FileSystemSyncAccessHandle/read","locale":"en-US","native":"English (US)","browserCompat":["api.FileSystemSyncAccessHandle.read"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/File_System_API\">File System API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle\"><code>FileSystemSyncAccessHandle</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/flush\"><code>flush()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/getSize\"><code>getSize()</code></a></li><li><em><code>read()</code> </em></li><li><a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/truncate\"><code>truncate()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/write\"><code>write()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for File System API</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItem/getAsFileSystemHandle\"><code>DataTransferItem.getAsFileSystemHandle()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a></li><li><a href=\"/en-US/docs/Web/API/StorageManager/getDirectory\"><code>StorageManager.getDirectory()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showDirectoryPicker\"><code>window.showDirectoryPicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showOpenFilePicker\"><code>window.showOpenFilePicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showSaveFilePicker\"><code>window.showSaveFilePicker()</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>\n  The <strong><code>read()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle\"><code>FileSystemSyncAccessHandle</code></a> interface reads the content of the file associated with the handle into a specified buffer, optionally at a given offset.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"buffer\"><a href=\"#buffer\"><code>buffer</code></a></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> or <code>ArrayBufferView</code> (such as a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a>) representing the buffer that the file content should be read into. Note that you cannot directly manipulate the contents of an <code>ArrayBuffer</code>. Instead, you create one of the typed array objects like an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a> or a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a> object which represents the buffer in a specific format, and use that to read and write the contents of the buffer.</p>\n  </dd>\n  <dt id=\"options\"><a href=\"#options\"><code>options</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An options object containing the following properties:</p>\n    <dl>\n      <dt id=\"at\"><a href=\"#at\"><code>at</code></a></dt>\n      <dd>\n        <p>A number representing the offset in bytes that the file should be read from.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A number representing the number of bytes read from the file.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><a href=\"#invalidstateerror\"><code>InvalidStateError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the associated access handle is already closed.</p>\n  </dd>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown if the underlying file system does not support reading the file from the specified file offset.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following asynchronous event handler function is contained inside a Web Worker. On receiving a message from the main thread it:</p>\n<ul>\n  <li>Creates a synchronous file access handle.</li>\n  <li>Gets the size of the file and creates an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> to contain it.</li>\n  <li>Reads the file contents into the buffer.</li>\n  <li>Encodes the message and writes it to the end of the file.</li>\n  <li>Persists the changes to disk and closes the access handle.</li>\n</ul>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Retrieve message sent to work from main script</span>\n  <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Get handle to draft file</span>\n  <span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>storage<span class=\"token punctuation\">.</span><span class=\"token function\">getDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> draftHandle <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">getFileHandle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"draft.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">create</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Get sync access handle</span>\n  <span class=\"token keyword\">const</span> accessHandle <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> draftHandle<span class=\"token punctuation\">.</span><span class=\"token function\">createSyncAccessHandle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Get size of the file.</span>\n  <span class=\"token keyword\">const</span> fileSize <span class=\"token operator\">=</span> accessHandle<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Read file content to a buffer.</span>\n  <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span>fileSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> readBuffer <span class=\"token operator\">=</span> accessHandle<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">at</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Write the message to the end of the file.</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encodedMessage <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> writeBuffer <span class=\"token operator\">=</span> accessHandle<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encodedMessage<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">at</span><span class=\"token operator\">:</span> readBuffer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Persist changes to disk.</span>\n  accessHandle<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Always close FileSystemSyncAccessHandle if done.</span>\n  accessHandle<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> In earlier versions of the spec, <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/close\" title=\"close()\"><code>close()</code></a>, <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/flush\" title=\"flush()\"><code>flush()</code></a>, <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/getSize\" title=\"getSize()\"><code>getSize()</code></a>, and <a href=\"/en-US/docs/Web/API/FileSystemSyncAccessHandle/truncate\" title=\"truncate()\"><code>truncate()</code></a> were wrongly specified as asynchronous methods, and older versions of some browsers implement them in this way. However, all current browsers that support these methods implement them as synchronous methods.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fs.spec.whatwg.org/#api-filesystemsyncaccesshandle-read","title":"File System Standard"}],"query":"api.FileSystemSyncAccessHandle.read"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.FileSystemSyncAccessHandle.read"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/File_System_API\">File System API</a></li>\n  <li><a href=\"https://developer.chrome.com/articles/file-system-access/\" class=\"external\" target=\"_blank\">The File System Access API: simplifying access to local files</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The read() method of the\n  FileSystemSyncAccessHandle interface reads the content of the file associated with the handle into a specified buffer, optionally at a given offset.","popularity":0,"modified":"2023-11-07T07:38:51.000Z","source":{"folder":"en-us/web/api/filesystemsyncaccesshandle/read","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/filesystemsyncaccesshandle/read/index.md","last_commit_url":"https://github.com/mdn/content/commit/b280c70f3d97f332cd065cef300d7d2d8ba05171","filename":"index.md"},"short_title":"read()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/FileSystemSyncAccessHandle","title":"FileSystemSyncAccessHandle"},{"uri":"/en-US/docs/Web/API/FileSystemSyncAccessHandle/read","title":"read()"}],"pageTitle":"FileSystemSyncAccessHandle: read() method - Web APIs | MDN","noIndexing":false}}