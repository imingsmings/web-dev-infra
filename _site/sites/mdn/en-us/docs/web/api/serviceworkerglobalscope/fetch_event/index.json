{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ServiceWorkerGlobalScope: fetch event","mdn_url":"/en-US/docs/Web/API/ServiceWorkerGlobalScope/fetch_event","locale":"en-US","native":"English (US)","browserCompat":["api.ServiceWorkerGlobalScope.fetch_event"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/clients\"><code>clients</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/registration\"><code>registration</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting\"><code>skipWaiting()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate_event\"><code>activate</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchabort_event\"><code>backgroundfetchabort</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchclick_event\"><code>backgroundfetchclick</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchfail_event\"><code>backgroundfetchfail</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchsuccess_event\"><code>backgroundfetchsuccess</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/canmakepayment_event\"><code>canmakepayment</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/contentdelete_event\"><code>contentdelete</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><em><code>fetch</code> </em></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/install_event\"><code>install</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/message_event\"><code>message</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/messageerror_event\"><code>messageerror</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclick_event\"><code>notificationclick</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclose_event\"><code>notificationclose</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/paymentrequest_event\"><code>paymentrequest</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/periodicsync_event\"><code>periodicsync</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/push_event\"><code>push</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange_event\"><code>pushsubscriptionchange</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/sync_event\"><code>sync</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Service Workers API</summary><ol><li><a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/en-US/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/serviceWorker\"><code>WorkerNavigator.serviceWorker</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>fetch</code></strong> event is fired in the service worker's global scope when the main app thread makes a network request. It enables the service worker to intercept network requests and send customized responses (for example, from a local cache).</p>\n<p>This event is not cancelable and does not bubble.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">onfetch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>The <code>fetch</code> event is fired in the service worker's global scope when the main app thread makes a network request. This includes not only explicit <a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a> calls from the main thread, but also implicit network requests to load pages and subresources (such as JavaScript, CSS, and images) made by the browser following page navigation.</p>\n<p>The event handler is passed a <a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> object, which provides access to the request as a <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> instance.</p>\n<p>\n  The <code>FetchEvent</code> also provides a <a href=\"/en-US/docs/Web/API/FetchEvent/respondWith\" title=\"respondWith()\"><code>respondWith()</code></a> method, that takes a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> (or a <code>Promise</code> that resolves to a <code>Response</code>) as a parameter.\n  This enables the service worker event handler to provide the response that is returned to the request in the main thread.\n</p>\n<p>For example, the service worker can return:</p>\n<ul>\n  <li>A locally cached response retrieved from the <a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a> interface.</li>\n  <li>A response that the service worker synthesizes, using methods like <a href=\"/en-US/docs/Web/API/Response/json\"><code>Response.json()</code></a> or the <a href=\"/en-US/docs/Web/API/Response/Response\" title=\"Response()\"><code>Response()</code></a> constructor.</li>\n  <li>A network error, using the <a href=\"/en-US/docs/Web/API/Response/error_static\" title=\"Response.error()\"><code>Response.error()</code></a> method. This will cause the <code>fetch()</code> call to reject.</li>\n</ul>\n<p>The <code>respondWith()</code> method can only be called once for a given request. If multiple <code>fetch</code> event listeners are added, they will be called in the order they were registered until one of them calls <code>respondWith()</code>.</p>\n<p>The <code>respondWith()</code> method must be called synchronously: that is, you can't call it in a <code>then</code> handler.</p>\n<p>Typically, a <code>fetch</code> event handler will execute different strategies depending on features of the request such as its URL:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">strategy1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"picnic.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">strategy2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> pattern1 <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token anchor function\">^</span><span class=\"token escape\">\\/</span>salamander</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pattern2 <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token anchor function\">^</span><span class=\"token escape\">\\/</span>lizard</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pattern1<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span><span class=\"token function\">strategy1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pattern2<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span><span class=\"token function\">strategy2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  If <code>respondWith()</code> is not called in the handler, then the user agent automatically makes the original network request.\n  For example, in the code above, all requests that do not match <code>pattern1</code> or <code>pattern2</code> are made as if the service worker did not exist.\n</p>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>A <a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"cache_falling_back_to_network","title":"Cache falling back to network","isH3":true,"content":"<p>This <code>fetch</code> event handler first tries to find the response in the cache. If a response is found, it returns the cached response. Otherwise, it tries to fetch the resource from the network.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">cacheThenNetwork</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cachedResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cachedResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Found response in cache:\"</span><span class=\"token punctuation\">,</span> cachedResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> cachedResponse<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Falling back to network\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Handling fetch event for </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span><span class=\"token function\">cacheThenNetwork</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"cache_only","title":"Cache only","isH3":true,"content":"<p>\n  This <code>fetch</code> event handler implements a \"cache only\" policy for scripts and stylesheets. If the request's <a href=\"/en-US/docs/Web/API/Request/destination\" title=\"destination\"><code>destination</code></a> property is <code>\"script\"</code> or <code>\"style\"</code>, the handler only looks in the cache, returning an error if the response was not found.\n  All other requests go through to the network.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">cacheOnly</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cachedResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cachedResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Found response in cache:\"</span><span class=\"token punctuation\">,</span> cachedResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> cachedResponse<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n    event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>destination <span class=\"token operator\">===</span> <span class=\"token string\">\"script\"</span> <span class=\"token operator\">||</span>\n    event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>destination <span class=\"token operator\">===</span> <span class=\"token string\">\"style\"</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span><span class=\"token function\">cacheOnly</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#dom-serviceworkerglobalscope-onfetch","title":"Service Workers"}],"query":"api.ServiceWorkerGlobalScope.fetch_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ServiceWorkerGlobalScope.fetch_event"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Using Service Workers</a></li>\n  <li><a href=\"https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker\" class=\"external\" target=\"_blank\">Service workers basic code example</a></li>\n  <li><a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a> method</li>\n  <li><a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> interface</li>\n  <li><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> interface</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Event type","id":"event_type"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The fetch event is fired in the service worker's global scope when the main app thread makes a network request. It enables the service worker to intercept network requests and send customized responses (for example, from a local cache).","popularity":0.007,"modified":"2023-06-20T15:02:45.000Z","source":{"folder":"en-us/web/api/serviceworkerglobalscope/fetch_event","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/serviceworkerglobalscope/fetch_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/b1648633cd508069eab8dac05da6eeb70259cae6","filename":"index.md"},"short_title":"fetch","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ServiceWorkerGlobalScope","title":"ServiceWorkerGlobalScope"},{"uri":"/en-US/docs/Web/API/ServiceWorkerGlobalScope/fetch_event","title":"fetch"}],"pageTitle":"ServiceWorkerGlobalScope: fetch event - Web APIs | MDN","noIndexing":false}}