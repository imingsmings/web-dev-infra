{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/RTCReceivedRtpStreamStats/framesDecoded does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/RTCReceivedRtpStreamStats/framesDecoded does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":8,"line":44,"column":3,"macroName":"domxref","sourceContext":"  |   frameâ€”so it's difficult to know for certain how substantial the compression is. The best\n  |   you can do is make an estimate. You can, for example, use the value of\n> |   {{domxref(\"RTCReceivedRtpStreamStats.framesDecoded\")}} if receiving the media or\n      ^\n  |   {{domxref(\"RTCSentRtpStreamStats.framesEncoded\")}} if sending it to get the number of\n  |   frames handled so far, and compute an average from there. See <a href=\"#calculating_average_quantization\">Calculating average quantization</a> below for a function that does this.","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/rtcinboundrtpstreamstats/qpsum/index.md","macroSource":"{{domxref(\"RTCReceivedRtpStreamStats.framesDecoded\")}}"},{"id":"macro1","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/RTCSentRtpStreamStats/framesEncoded does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/RTCSentRtpStreamStats/framesEncoded does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":8,"line":45,"column":3,"macroName":"domxref","sourceContext":"  |   you can do is make an estimate. You can, for example, use the value of\n  |   {{domxref(\"RTCReceivedRtpStreamStats.framesDecoded\")}} if receiving the media or\n> |   {{domxref(\"RTCSentRtpStreamStats.framesEncoded\")}} if sending it to get the number of\n      ^\n  |   frames handled so far, and compute an average from there. See <a href=\"#calculating_average_quantization\">Calculating average quantization</a> below for a function that does this.\n  | </p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/rtcinboundrtpstreamstats/qpsum/index.md","macroSource":"{{domxref(\"RTCSentRtpStreamStats.framesEncoded\")}}"}],"bad_bcd_queries":[{"id":"bad_bcd_queries1","explanation":"No BCD data for query: api.RTCInboundRtpStreamStats.qpSum","suggestion":null}]},"title":"RTCInboundRtpStreamStats: qpSum property","mdn_url":"/en-US/docs/Web/API/RTCInboundRtpStreamStats/qpSum","locale":"en-US","native":"English (US)","browserCompat":["api.RTCInboundRtpStreamStats.qpSum"],"summary":"The qpSum property of the\n  RTCInboundRtpStreamStats dictionary is a value generated by adding the\n  Quantization Parameter (QP) values for every frame\n  sent or received to date on the video track corresponding to this\n  RTCInboundRtpStreamStats object.","popularity":0,"modified":"2023-08-04T07:12:32.000Z","source":{"folder":"en-us/web/api/rtcinboundrtpstreamstats/qpsum","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcinboundrtpstreamstats/qpsum/index.md","last_commit_url":"https://github.com/mdn/content/commit/56c76424a5edb45f6716ac4ee48861dac8e7ae38","filename":"index.md"},"short_title":"qpSum","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCInboundRtpStreamStats","title":"RTCInboundRtpStreamStats"},{"uri":"/en-US/docs/Web/API/RTCInboundRtpStreamStats/qpSum","title":"qpSum"}],"pageTitle":"RTCInboundRtpStreamStats: qpSum property - Web APIs | MDN","noIndexing":false,"hash":"97f4420aad323d0162746d56f5396292c4796b872350a28e7dc637e3dc0e9c78"}