{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"GPUAdapter: requestDevice() method","mdn_url":"/en-US/docs/Web/API/GPUAdapter/requestDevice","locale":"en-US","native":"English (US)","browserCompat":["api.GPUAdapter.requestDevice"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUAdapter/features\"><code>features</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter/isFallbackAdapter\"><code>isFallbackAdapter</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter/limits\"><code>limits</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/GPUAdapter/requestAdapterInfo\"><code>requestAdapterInfo()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><em><code>requestDevice()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebGPU API</summary><ol><li><a href=\"/en-US/docs/Web/API/GPU\"><code>GPU</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapterInfo\"><code>GPUAdapterInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroup\"><code>GPUBindGroup</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCanvasContext\"><code>GPUCanvasContext</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationInfo\"><code>GPUCompilationInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationMessage\"><code>GPUCompilationMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDeviceLostInfo\"><code>GPUDeviceLostInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUExternalTexture\"><code>GPUExternalTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUInternalError\"><code>GPUInternalError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUOutOfMemoryError\"><code>GPUOutOfMemoryError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQuerySet\"><code>GPUQuerySet</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundle\"><code>GPURenderBundle</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSampler\"><code>GPUSampler</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTextureView\"><code>GPUTextureView</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUUncapturedErrorEvent\"><code>GPUUncapturedErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/gpu\"><code>Navigator.gpu</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/gpu\"><code>WorkerNavigator.gpu</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>requestDevice()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a> interface returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with a <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a> object, which is the primary interface for communicating with the GPU.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">requestDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">requestDevice</span><span class=\"token punctuation\">(</span>descriptor<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"descriptor\"><a href=\"#descriptor\"><code>descriptor</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object containing the following properties:</p>\n    <dl>\n      <dt id=\"defaultqueue\"><a href=\"#defaultqueue\"><code>defaultQueue</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An object that provides information for the device's default <a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a> (as returned by <a href=\"/en-US/docs/Web/API/GPUDevice/queue\"><code>GPUDevice.queue</code></a>). This object has a single property — <code>label</code> — which provides the default queue with a <a href=\"/en-US/docs/Web/API/GPUQueue/label\" title=\"label\"><code>label</code></a> value. If no value is provided, this defaults to an empty object, and the default queue's label will be an empty string.</p>\n      </dd>\n      <dt id=\"label\"><a href=\"#label\"><code>label</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A string providing a label that can be used to identify the <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a>, for example in <a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a> messages or console warnings.</p>\n      </dd>\n      <dt id=\"requiredfeatures\"><a href=\"#requiredfeatures\"><code>requiredFeatures</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An array of strings representing additional functionality that you want supported by the returned <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a>. The <code>requestDevice()</code> call will fail if the <code>GPUAdapter</code> cannot provide these features. See <a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a> for a full list of possible features. This defaults to an empty array if no value is provided.</p>\n      </dd>\n      <dt id=\"requiredlimits\"><a href=\"#requiredlimits\"><code>requiredLimits</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An object containing properties representing the limits that you want supported by the returned <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a>. The <code>requestDevice()</code> call will fail if the <code>GPUAdapter</code> cannot provide these limits. Each key must be the name of a member of <a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a>. This defaults to an empty object if no value is provided.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Not all features and limits will be available to WebGPU in all browsers that support it, even if they are supported by the underlying hardware. See the <a href=\"/en-US/docs/Web/API/GPUAdapter/features\" title=\"features\"><code>features</code></a> and <a href=\"/en-US/docs/Web/API/GPUAdapter/limits\" title=\"limits\"><code>limits</code></a> pages for more information.</p>\n</div>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills with a <a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a> object instance.</p>\n<p>If you make a duplicate call, i.e. call <code>requestDevice()</code> on a <a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a> that <code>requestDevice()</code> was already called on, the promise fulfills with a device that is immediately lost. You can then get information on how the device was lost via <a href=\"/en-US/docs/Web/API/GPUDevice/lost\"><code>GPUDevice.lost</code></a>.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"operationerror\"><a href=\"#operationerror\"><code>OperationError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>The promise rejects with an <code>OperationError</code> if the limits included in the <code>requiredLimits</code> property are not supported by the <a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a>, either because they are not valid limits, or because their values are higher than the adapter's values for those limits.</p>\n  </dd>\n  <dt id=\"typeerror\"><a href=\"#typeerror\"><code>TypeError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>The promise rejects with a <code>TypeError</code> if the features included in the <code>requiredFeatures</code> property are not supported by the <a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"basic_example","title":"Basic example","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>navigator<span class=\"token punctuation\">.</span>gpu<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WebGPU not supported.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> adapter <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>gpu<span class=\"token punctuation\">.</span><span class=\"token function\">requestAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>adapter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Couldn't request WebGPU adapter.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> device <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> adapter<span class=\"token punctuation\">.</span><span class=\"token function\">requestDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"requesting_specific_features_and_limits","title":"Requesting specific features and limits","isH3":true,"content":"<p>In the following code we:</p>\n<ol>\n  <li>Check whether a <a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a> has the <code>texture-compression-astc</code> feature available. If so, we push it into the array of <code>requiredFeatures</code>.</li>\n  <li>Query the <code>GPUAdapter.limits</code> value of <code>maxBindGroups</code> to see if it is equal to or greater than 6. Our theoretical example app ideally needs 6 bind groups, so if the returned value is &gt;= 6, we add a maximum limit of 6 to the <code>requiredLimits</code> object.</li>\n  <li>Request a device with those feature and limit requirements, plus a <code>defaultQueue</code> label.</li>\n</ol>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>navigator<span class=\"token punctuation\">.</span>gpu<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WebGPU not supported.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> adapter <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>gpu<span class=\"token punctuation\">.</span><span class=\"token function\">requestAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>adapter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Couldn't request WebGPU adapter.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> requiredFeatures <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>adapter<span class=\"token punctuation\">.</span>features<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"texture-compression-astc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    requiredFeatures<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"texture-compression-astc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> requiredLimits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// App ideally needs 6 bind groups, so we'll try to request what the app needs</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>adapter<span class=\"token punctuation\">.</span>limits<span class=\"token punctuation\">.</span>maxBindGroups <span class=\"token operator\">&gt;=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    requiredLimits<span class=\"token punctuation\">.</span>maxBindGroups <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> device <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> adapter<span class=\"token punctuation\">.</span><span class=\"token function\">requestDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">defaultQueue</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">label</span><span class=\"token operator\">:</span> <span class=\"token string\">\"myqueue\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    requiredFeatures<span class=\"token punctuation\">,</span>\n    requiredLimits<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://gpuweb.github.io/gpuweb/#dom-gpuadapter-requestdevice","title":"WebGPU"}],"query":"api.GPUAdapter.requestDevice"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.GPUAdapter.requestDevice"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The requestDevice() method of the\n  GPUAdapter interface returns a Promise that fulfills with a GPUDevice object, which is the primary interface for communicating with the GPU.","popularity":0.0005,"modified":"2023-07-19T10:31:38.000Z","source":{"folder":"en-us/web/api/gpuadapter/requestdevice","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/gpuadapter/requestdevice/index.md","last_commit_url":"https://github.com/mdn/content/commit/bc35e70e543bc32e4e1eb0436b18f11e17fb470c","filename":"index.md"},"short_title":"requestDevice()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/GPUAdapter","title":"GPUAdapter"},{"uri":"/en-US/docs/Web/API/GPUAdapter/requestDevice","title":"requestDevice()"}],"pageTitle":"GPUAdapter: requestDevice() method - Web APIs | MDN","noIndexing":false}}