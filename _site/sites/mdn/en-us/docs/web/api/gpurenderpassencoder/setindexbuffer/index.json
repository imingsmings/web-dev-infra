{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"GPURenderPassEncoder: setIndexBuffer() method","mdn_url":"/en-US/docs/Web/API/GPURenderPassEncoder/setIndexBuffer","locale":"en-US","native":"English (US)","browserCompat":["api.GPURenderPassEncoder.setIndexBuffer"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/label\"><code>label</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/beginOcclusionQuery\"><code>beginOcclusionQuery()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/draw\"><code>draw()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/drawIndexed\"><code>drawIndexed()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/drawIndexedIndirect\"><code>drawIndexedIndirect()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/drawIndirect\"><code>drawIndirect()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/end\"><code>end()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/endOcclusionQuery\"><code>endOcclusionQuery()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/executeBundles\"><code>executeBundles()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/insertDebugMarker\"><code>insertDebugMarker()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/popDebugGroup\"><code>popDebugGroup()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/pushDebugGroup\"><code>pushDebugGroup()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/setBindGroup\"><code>setBindGroup()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/setBlendConstant\"><code>setBlendConstant()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><em><code>setIndexBuffer()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/setPipeline\"><code>setPipeline()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/setScissorRect\"><code>setScissorRect()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/setStencilReference\"><code>setStencilReference()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/setVertexBuffer\"><code>setVertexBuffer()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/GPURenderPassEncoder/setViewport\"><code>setViewport()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebGPU API</summary><ol><li><a href=\"/en-US/docs/Web/API/GPU\"><code>GPU</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapter\"><code>GPUAdapter</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUAdapterInfo\"><code>GPUAdapterInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroup\"><code>GPUBindGroup</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBindGroupLayout\"><code>GPUBindGroupLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCanvasContext\"><code>GPUCanvasContext</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandBuffer\"><code>GPUCommandBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCommandEncoder\"><code>GPUCommandEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationInfo\"><code>GPUCompilationInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUCompilationMessage\"><code>GPUCompilationMessage</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePassEncoder\"><code>GPUComputePassEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUComputePipeline\"><code>GPUComputePipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDevice\"><code>GPUDevice</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUDeviceLostInfo\"><code>GPUDeviceLostInfo</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUError\"><code>GPUError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUExternalTexture\"><code>GPUExternalTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUInternalError\"><code>GPUInternalError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUOutOfMemoryError\"><code>GPUOutOfMemoryError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineError\"><code>GPUPipelineError</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUPipelineLayout\"><code>GPUPipelineLayout</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQuerySet\"><code>GPUQuerySet</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUQueue\"><code>GPUQueue</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundle\"><code>GPURenderBundle</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderBundleEncoder\"><code>GPURenderBundleEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/GPURenderPipeline\"><code>GPURenderPipeline</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSampler\"><code>GPUSampler</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUShaderModule\"><code>GPUShaderModule</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedFeatures\"><code>GPUSupportedFeatures</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUSupportedLimits\"><code>GPUSupportedLimits</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTexture\"><code>GPUTexture</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUTextureView\"><code>GPUTextureView</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUUncapturedErrorEvent\"><code>GPUUncapturedErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>HTMLCanvasElement.getContext()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/gpu\"><code>Navigator.gpu</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerNavigator/gpu\"><code>WorkerNavigator.gpu</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>setIndexBuffer()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a> interface sets the current <a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a> that will provide index data for subsequent drawing commands.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setIndexBuffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> indexFormat<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"buffer\"><a href=\"#buffer\"><code>buffer</code></a></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/GPUBuffer\"><code>GPUBuffer</code></a> representing the buffer containing the index data to use for subsequent drawing commands.</p>\n  </dd>\n  <dt id=\"indexformat\"><a href=\"#indexformat\"><code>indexFormat</code></a></dt>\n  <dd>\n    <p>An enumerated value that defines the format of the index data contained in <code>buffer</code>. Possible values are:</p>\n    <ul>\n      <li><code>\"uint16\"</code></li>\n      <li><code>\"uint32\"</code></li>\n    </ul>\n  </dd>\n  <dt id=\"offset\"><a href=\"#offset\"><code>offset</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>A number representing the offset, in bytes, into <code>buffer</code> where the index data begins. If omitted, <code>offset</code> defaults to 0.</p>\n  </dd>\n  <dt id=\"size\"><a href=\"#size\"><code>size</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>A number representing the size, in bytes, of the index data contained in <code>buffer</code>. If omitted, <code>size</code> defaults to the <code>buffer</code>'s <a href=\"/en-US/docs/Web/API/GPUBuffer/size\"><code>GPUBuffer.size</code></a> - <code>offset</code>.</p>\n  </dd>\n</dl>\n<h4 id=\"note_on_indexformat\">Note on indexFormat</h4>\n<p><code>indexFormat</code> determines both the data type of index values in a buffer and, when used with a pipeline that specifies a strip primitive topology (<code>\"line-strip\"</code> or <code>\"triangle-strip\"</code>), also determines the primitive restart value. The primitive restart value is an index value indicating that a new primitive should be started rather than continuing to construct the strip with the prior indexed vertices. The value is <code>0xFFFF</code> for <code>\"uint16\"</code>, or <code>0xFFFFFFFF</code> for <code>\"uint32\"</code>.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>Undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"validation","title":"Validation","isH3":true,"content":"<p>The following criteria must be met when calling <strong><code>setIndexBuffer()</code></strong>, otherwise a <a href=\"/en-US/docs/Web/API/GPUValidationError\"><code>GPUValidationError</code></a> is generated and the <a href=\"/en-US/docs/Web/API/GPURenderPassEncoder\"><code>GPURenderPassEncoder</code></a> becomes invalid:</p>\n<ul>\n  <li><code>buffer</code>'s <a href=\"/en-US/docs/Web/API/GPUBuffer/usage\"><code>GPUBuffer.usage</code></a> contains the <code>GPUBufferUsage.INDEX</code> flag.</li>\n  <li><code>offset</code> + <code>size</code> is less than or equal to the <code>buffer</code>'s <a href=\"/en-US/docs/Web/API/GPUBuffer/size\"><code>GPUBuffer.size</code></a>.</li>\n  <li><code>offset</code> is a multiple of <code>indexFormat</code>'s byte size (2 for <code>\"uint16\"</code>, 4 for <code>\"uint32\"</code>).</li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the WebGPU Samples <a href=\"https://webgpu.github.io/webgpu-samples/samples/shadowMapping\" class=\"external\" target=\"_blank\">Shadow Mapping</a> example, <code>setIndexBuffer()</code> is used in two separate render passes in each animation frame, one to draw the main model and one to draw its shadow. Study the example code listing for the full context.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">const</span> commandEncoder <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span><span class=\"token function\">createCommandEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> shadowPass <span class=\"token operator\">=</span> commandEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">beginRenderPass</span><span class=\"token punctuation\">(</span>shadowPassDescriptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shadowPass<span class=\"token punctuation\">.</span><span class=\"token function\">setPipeline</span><span class=\"token punctuation\">(</span>shadowPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shadowPass<span class=\"token punctuation\">.</span><span class=\"token function\">setBindGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sceneBindGroupForShadow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shadowPass<span class=\"token punctuation\">.</span><span class=\"token function\">setBindGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> modelBindGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shadowPass<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertexBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shadowPass<span class=\"token punctuation\">.</span><span class=\"token function\">setIndexBuffer</span><span class=\"token punctuation\">(</span>indexBuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"uint16\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shadowPass<span class=\"token punctuation\">.</span><span class=\"token function\">drawIndexed</span><span class=\"token punctuation\">(</span>indexCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  shadowPass<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> renderPass <span class=\"token operator\">=</span> commandEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">beginRenderPass</span><span class=\"token punctuation\">(</span>renderPassDescriptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderPass<span class=\"token punctuation\">.</span><span class=\"token function\">setPipeline</span><span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderPass<span class=\"token punctuation\">.</span><span class=\"token function\">setBindGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sceneBindGroupForRender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderPass<span class=\"token punctuation\">.</span><span class=\"token function\">setBindGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> modelBindGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderPass<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertexBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderPass<span class=\"token punctuation\">.</span><span class=\"token function\">setIndexBuffer</span><span class=\"token punctuation\">(</span>indexBuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">\"uint16\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderPass<span class=\"token punctuation\">.</span><span class=\"token function\">drawIndexed</span><span class=\"token punctuation\">(</span>indexCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  renderPass<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ...</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://gpuweb.github.io/gpuweb/#dom-gpurendercommandsmixin-setindexbuffer","title":"WebGPU"}],"query":"api.GPURenderPassEncoder.setIndexBuffer"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.GPURenderPassEncoder.setIndexBuffer"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The <a href=\"/en-US/docs/Web/API/WebGPU_API\">WebGPU API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The setIndexBuffer() method of the\n  GPURenderPassEncoder interface sets the current GPUBuffer that will provide index data for subsequent drawing commands.","popularity":0,"modified":"2023-04-07T06:03:34.000Z","source":{"folder":"en-us/web/api/gpurenderpassencoder/setindexbuffer","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/gpurenderpassencoder/setindexbuffer/index.md","last_commit_url":"https://github.com/mdn/content/commit/b6984118ac9482e683a654edfefa4b426ca3c7ca","filename":"index.md"},"short_title":"setIndexBuffer()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/GPURenderPassEncoder","title":"GPURenderPassEncoder"},{"uri":"/en-US/docs/Web/API/GPURenderPassEncoder/setIndexBuffer","title":"setIndexBuffer()"}],"pageTitle":"GPURenderPassEncoder: setIndexBuffer() method - Web APIs | MDN","noIndexing":false}}