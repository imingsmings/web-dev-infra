{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Scheduler","mdn_url":"/en-US/docs/Web/API/Scheduler","locale":"en-US","native":"English (US)","browserCompat":["api.Scheduler"],"baseline":{"baseline":false,"support":{"chrome":"94","chrome_android":"94","edge":"94"}},"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API\">Prioritized Task Scheduling API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/Scheduler\" aria-current=\"page\"><code>Scheduler</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Scheduler/postTask\"><code>postTask()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Prioritized Task Scheduling API</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/scheduling\"><code>Navigator.scheduling</code></a></li><li><a href=\"/en-US/docs/Web/API/Scheduling\"><code>Scheduling</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskController\"><code>TaskController</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskPriorityChangeEvent\"><code>TaskPriorityChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskSignal\"><code>TaskSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/scheduler_property\"><code>scheduler_property</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Scheduler</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API\">Prioritized Task Scheduling API</a> provides the <a href=\"/en-US/docs/Web/API/Scheduler/postTask\"><code>Scheduler.postTask()</code></a> method that can be used for adding prioritized tasks to be scheduled.</p>\n<p>A <code>Scheduler</code> can be accessed from the global object <a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a> or <a href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> (<code>this.scheduler</code>).</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"scheduler.posttask\"><a href=\"/en-US/docs/Web/API/Scheduler/postTask\"><code>Scheduler.postTask()</code></a></dt>\n  <dd>\n    <p>Adds a task to the scheduler as a callback, optionally specifying a priority, delay, and/or a signal for aborting the task.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  If the feature is defined, an instance of this object is returned by the global <code>this</code> in both workers and the main thread.\n  The only property of the interface is the <a href=\"/en-US/docs/Web/API/Scheduler/postTask\" title=\"postTask()\"><code>postTask()</code></a> method, which is used to post the task and returns a promise.\n</p>\n<p>\n  The code below shows a simple task that resolves with the text 'Task executing'.\n  This text is logged on success.\n  The code also shows a <code>catch</code> block, which would be required in more complex code to handle when a task is aborted or throws an error.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"scheduler\"</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Post task with default priority: 'user-visible' (no other options)</span>\n  <span class=\"token comment\">// When the task resolves, Promise.then() logs the result.</span>\n  scheduler\n    <span class=\"token punctuation\">.</span><span class=\"token function\">postTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string\">\"Task executing\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">taskResult</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>taskResult<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Log result</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Log errors</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>For more comprehensive example code see <a href=\"/en-US/docs/Web/API/Prioritized_Task_Scheduling_API#examples\">Prioritized Task Scheduling API &gt; Examples</a>.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/scheduling-apis/#scheduler","title":"Prioritized Task Scheduling"}],"query":"api.Scheduler"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Scheduler"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The Scheduler interface of the Prioritized Task Scheduling API provides the Scheduler.postTask() method that can be used for adding prioritized tasks to be scheduled.","popularity":0.0026,"modified":"2023-03-03T11:36:23.000Z","source":{"folder":"en-us/web/api/scheduler","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/scheduler/index.md","last_commit_url":"https://github.com/mdn/content/commit/4ba12fec878a1f941492ada3edd467bfd76532cf","filename":"index.md"},"short_title":"Scheduler","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Scheduler","title":"Scheduler"}],"pageTitle":"Scheduler - Web APIs | MDN","noIndexing":false}}