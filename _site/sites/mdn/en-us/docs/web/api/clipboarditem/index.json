{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ClipboardItem","mdn_url":"/en-US/docs/Web/API/ClipboardItem","locale":"en-US","native":"English (US)","browserCompat":["api.ClipboardItem"],"baseline":{"baseline":false,"support":{}},"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Clipboard_API\">Clipboard API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/ClipboardItem\" aria-current=\"page\"><code>ClipboardItem</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/ClipboardItem/ClipboardItem\"><code>ClipboardItem()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/ClipboardItem/presentationStyle\"><code>presentationStyle</code></a></li><li><a href=\"/en-US/docs/Web/API/ClipboardItem/types\"><code>types</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/ClipboardItem/getType\"><code>getType()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Clipboard API</summary><ol><li><a href=\"/en-US/docs/Web/API/Clipboard\"><code>Clipboard</code></a></li><li><a href=\"/en-US/docs/Web/API/ClipboardEvent\"><code>ClipboardEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/clipboard\"><code>Navigator.clipboard</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>ClipboardItem</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Clipboard_API\"><code>Clipboard API</code></a> represents a single item format, used when reading or writing data via the <a href=\"/en-US/docs/Web/API/Clipboard_API\"><code>Clipboard API</code></a>. That is <a href=\"/en-US/docs/Web/API/Clipboard/read\"><code>clipboard.read()</code></a> and <a href=\"/en-US/docs/Web/API/Clipboard/write\"><code>clipboard.write()</code></a> respectively.</p>\n<p>The benefit of having the <strong><code>ClipboardItem</code></strong> interface to represent data, is that it enables developers to cope with the varying scope of file types and data easily.</p>\n<p>Access to the contents of the clipboard is gated behind the <a href=\"/en-US/docs/Web/API/Permissions_API\">Permissions API</a>: The <code>clipboard-write</code> permission is granted automatically to pages when they are in the active tab. The <code>clipboard-read</code> permission must be requested, which you can do by trying to read data from the clipboard.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> To work with text see the <a href=\"/en-US/docs/Web/API/Clipboard/readText\"><code>Clipboard.readText()</code></a> and <a href=\"/en-US/docs/Web/API/Clipboard/writeText\"><code>Clipboard.writeText()</code></a> methods of the <a href=\"/en-US/docs/Web/API/Clipboard\"><code>Clipboard</code></a> interface.</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> You can only pass in one clipboard item at a time.</p>\n</div>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"clipboarditem\"><a href=\"/en-US/docs/Web/API/ClipboardItem/ClipboardItem\" title=\"ClipboardItem()\"><code>ClipboardItem()</code></a></dt>\n  <dd>\n    <p>Creates a new <strong><code>ClipboardItem</code></strong> object, with the <a href=\"/en-US/docs/Glossary/MIME_type\">MIME type</a> as the key and <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> as the value.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p><em>This interface provides the following properties.</em></p>\n<dl>\n  <dt id=\"types\"><a href=\"/en-US/docs/Web/API/ClipboardItem/types\" title=\"types\"><code>types</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of MIME types available within the <strong><code>ClipboardItem</code></strong>.</p>\n  </dd>\n  <dt id=\"presentationstyle\"><a href=\"/en-US/docs/Web/API/ClipboardItem/presentationStyle\" title=\"presentationStyle\"><code>presentationStyle</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns one of the following: <code>\"unspecified\"</code>, <code>\"inline\"</code> or <code>\"attachment\"</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<p><em>This interface defines the following methods.</em></p>\n<dl>\n  <dt id=\"gettype\"><a href=\"/en-US/docs/Web/API/ClipboardItem/getType\" title=\"getType()\"><code>getType()</code></a></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> of the requested <a href=\"/en-US/docs/Glossary/MIME_type\">MIME type</a>, or an error if the MIME type is not found.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"writing_to_clipboard","title":"Writing To Clipboard","isH3":true,"content":"<p>Here we're writing a new <a href=\"/en-US/docs/Web/API/ClipboardItem/ClipboardItem\" title=\"ClipboardItem()\"><code>ClipboardItem()</code></a> to the <a href=\"/en-US/docs/Web/API/Clipboard_API\" title=\"clipboard\"><code>clipboard</code></a> by requesting a png image using the <a href=\"/en-US/docs/Web/API/Fetch_API\"><code>Fetch API</code></a>, and in turn, the <a href=\"/en-US/docs/Web/API/Response/blob\" title=\"responses' blob()\"><code>responses' blob()</code></a> method, to create the new <a href=\"/en-US/docs/Web/API/ClipboardItem\" aria-current=\"page\"><code>ClipboardItem</code></a>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">writeClipImg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> imgURL <span class=\"token operator\">=</span> <span class=\"token string\">\"/myimage.png\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>imgURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClipboardItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span>blob<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> blob<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fetched image copied.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"reading_from_the_clipboard","title":"Reading From The Clipboard","isH3":true,"content":"<p>Here we're returning all items on the clipboard via the <a href=\"/en-US/docs/Web/API/Clipboard/read\"><code>clipboard.read()</code></a> method. Then utilizing the <a href=\"/en-US/docs/Web/API/ClipboardItem/types\"><code>ClipboardItem.types</code></a> property to set the <a href=\"/en-US/docs/Web/API/ClipboardItem/getType\" title=\"getType()\"><code>getType()</code></a> argument and return the corresponding blob object.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getClipboardContents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> clipboardItems <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> clipboardItem <span class=\"token keyword\">of</span> clipboardItems<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> type <span class=\"token keyword\">of</span> clipboardItem<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> clipboardItem<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// we can now use blob here</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/clipboard-apis/#clipboarditem","title":"Clipboard API and events"}],"query":"api.ClipboardItem"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ClipboardItem"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Clipboard_API\">Clipboard API</a></li>\n  <li><a href=\"https://async-clipboard-api.glitch.me/\" class=\"external\" target=\"_blank\">Async Clipboard API demo on Glitch</a></li>\n  <li><a href=\"https://web.dev/articles/async-clipboard\" class=\"external\" target=\"_blank\">Image support for Async Clipboard article</a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The ClipboardItem interface of the Clipboard API represents a single item format, used when reading or writing data via the Clipboard API. That is clipboard.read() and clipboard.write() respectively.","popularity":0.0096,"modified":"2023-11-03T08:47:35.000Z","source":{"folder":"en-us/web/api/clipboarditem","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/clipboarditem/index.md","last_commit_url":"https://github.com/mdn/content/commit/c316bf6663d2ae19a4afa841a3c5f996e8338af6","filename":"index.md"},"short_title":"ClipboardItem","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ClipboardItem","title":"ClipboardItem"}],"pageTitle":"ClipboardItem - Web APIs | MDN","noIndexing":false}}