{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PointerEvent: getCoalescedEvents() method","mdn_url":"/en-US/docs/Web/API/PointerEvent/getCoalescedEvents","locale":"en-US","native":"English (US)","browserCompat":["api.PointerEvent.getCoalescedEvents"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Pointer_events\">Pointer events</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/PointerEvent/PointerEvent\"><code>PointerEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PointerEvent/altitudeAngle\"><code>altitude angle</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/azimuthAngle\"><code>azimuth angle</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/height\"><code>height</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/isPrimary\"><code>isPrimary</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/pointerId\"><code>pointerId</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/pointerType\"><code>pointerType</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/pressure\"><code>pressure</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/tangentialPressure\"><code>tangentialPressure</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/tiltX\"><code>tiltX</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/tiltY\"><code>tiltY</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/twist\"><code>twist</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/width\"><code>width</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><em><code>getCoalescedEvents()</code> </em></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/getPredictedEvents\"><code>getPredictedEvents()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Pointer Events</summary><ol><li><a href=\"/en-US/docs/Web/API/Element/releasePointerCapture\"><code>Element.releasePointerCapture()</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/setPointerCapture\"><code>Element.setPointerCapture()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>getCoalescedEvents()</code></strong> method of the <a href=\"/en-US/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> interface returns a sequence of <code>PointerEvent</code> instances that were coalesced (merged) into a single <a href=\"/en-US/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a> or <a href=\"/en-US/docs/Web/API/Element/pointerrawupdate_event\" title=\"pointerrawupdate\"><code>pointerrawupdate</code></a> event.\n  Instead of a stream of many <a href=\"/en-US/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a> events, user agents coalesce multiple updates into a single event.\n  This helps with performance as the user agent has less event handling to perform, but there is a reduction in the granularity and accuracy when tracking, especially with fast and large movements.\n</p>\n<p>\n  The <strong><code>getCoalescedEvents()</code></strong> method lets applications access all un-coalesced position changes for precise handling of pointer movement data where necessary.\n  Un-coalesced position changes are desirable in drawing applications, for instance, where having access to all events helps to build smoother curves that better match the movement of a pointer.\n</p>\n<p>For an illustration of coalesced events, see <a href=\"https://w3c.github.io/pointerevents/#figure_coalesced\" class=\"external\" target=\"_blank\">Figure 7 in the specification</a>.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">getCoalescedEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A sequence of <a href=\"/en-US/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> instances.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":""}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pointerEvents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// draw the last 20 events</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pointerEvents<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    pointerEvents<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  pointerEvents<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> color <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> pointerEvent <span class=\"token keyword\">of</span> pointerEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>pointerEvent<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pointerEvent<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> pointerEvent<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// draw a circle for the current event</span>\n  <span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">,</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> coalescedEvents <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getCoalescedEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> coalescedEvent <span class=\"token keyword\">of</span> coalescedEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// give it an offset so we can see the difference and color it red</span>\n    <span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span>coalescedEvent<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> coalescedEvent<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":true,"content":"<div class=\"code-example\" id=\"sect1\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Example sample\" id=\"frame_example\" height=\"320\" src=\"http://localhost:5042/en-US/docs/Web/API/PointerEvent/getCoalescedEvents/runner.html?id=example\" loading=\"lazy\"></iframe></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/pointerevents/#dom-pointerevent-getcoalescedevents","title":"Pointer Events"}],"query":"api.PointerEvent.getCoalescedEvents"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PointerEvent.getCoalescedEvents"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The getCoalescedEvents() method of the PointerEvent interface returns a sequence of PointerEvent instances that were coalesced (merged) into a single pointermove or pointerrawupdate event.\n  Instead of a stream of many pointermove events, user agents coalesce multiple updates into a single event.\n  This helps with performance as the user agent has less event handling to perform, but there is a reduction in the granularity and accuracy when tracking, especially with fast and large movements.","popularity":0.0009,"modified":"2023-06-23T11:29:33.000Z","source":{"folder":"en-us/web/api/pointerevent/getcoalescedevents","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/pointerevent/getcoalescedevents/index.md","last_commit_url":"https://github.com/mdn/content/commit/84c430110b84fae0335959184ce73f03124220fd","filename":"index.md"},"short_title":"getCoalescedEvents()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PointerEvent","title":"PointerEvent"},{"uri":"/en-US/docs/Web/API/PointerEvent/getCoalescedEvents","title":"getCoalescedEvents()"}],"pageTitle":"PointerEvent: getCoalescedEvents() method - Web APIs | MDN","noIndexing":false}}