{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PointerEvent: getPredictedEvents() method","mdn_url":"/en-US/docs/Web/API/PointerEvent/getPredictedEvents","locale":"en-US","native":"English (US)","browserCompat":["api.PointerEvent.getPredictedEvents"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Pointer_events\">Pointer events</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/PointerEvent/PointerEvent\"><code>PointerEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PointerEvent/altitudeAngle\"><code>altitude angle</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/azimuthAngle\"><code>azimuth angle</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/height\"><code>height</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/isPrimary\"><code>isPrimary</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/pointerId\"><code>pointerId</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/pointerType\"><code>pointerType</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/pressure\"><code>pressure</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/tangentialPressure\"><code>tangentialPressure</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/tiltX\"><code>tiltX</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/tiltY\"><code>tiltY</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/twist\"><code>twist</code></a></li><li><a href=\"/en-US/docs/Web/API/PointerEvent/width\"><code>width</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/PointerEvent/getCoalescedEvents\"><code>getCoalescedEvents()</code></a></li><li><em><code>getPredictedEvents()</code> </em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Pointer Events</summary><ol><li><a href=\"/en-US/docs/Web/API/Element/releasePointerCapture\"><code>Element.releasePointerCapture()</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/setPointerCapture\"><code>Element.setPointerCapture()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>getPredictedEvents()</code></strong> method of the <a href=\"/en-US/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> interface returns a sequence of <code>PointerEvent</code> instances that are estimated future pointer positions.\n  How the predicted positions are calculated depends on the user agent, but they are based on past points, current velocity, and trajectory.\n</p>\n<p>Applications can use the predicted events to \"draw ahead\" to a predicted position which may reduce perceived latency depending on the application's interpretation of the predicted events and the use case.</p>\n<p>For an illustration of predicted events, see <a href=\"https://w3c.github.io/pointerevents/#figure_predicted\" class=\"external\" target=\"_blank\">Figure 8 in the specification</a>.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">getPredictedEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A sequence of <a href=\"/en-US/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> instances.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":""}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pointerEvents <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// draw the last 20 events</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pointerEvents<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    pointerEvents<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  pointerEvents<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> color <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> pointerEvent <span class=\"token keyword\">of</span> pointerEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>pointerEvent<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pointerEvent<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> pointerEvent<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// draw a circle for the current event</span>\n  <span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">,</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> predictedEvents <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getPredictedEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> predictedEvent <span class=\"token keyword\">of</span> predictedEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// give it an offset so we can see the difference and color it red</span>\n    <span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span>predictedEvent<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> predictedEvent<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":true,"content":"<div class=\"code-example\" id=\"sect1\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Example sample\" id=\"frame_example\" height=\"320\" src=\"http://localhost:5042/en-US/docs/Web/API/PointerEvent/getPredictedEvents/runner.html?id=example\" loading=\"lazy\"></iframe></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/pointerevents/#dom-pointerevent-getpredictedevents","title":"Pointer Events"}],"query":"api.PointerEvent.getPredictedEvents"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PointerEvent.getPredictedEvents"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The getPredictedEvents() method of the PointerEvent interface returns a sequence of PointerEvent instances that are estimated future pointer positions.\n  How the predicted positions are calculated depends on the user agent, but they are based on past points, current velocity, and trajectory.","popularity":0,"modified":"2023-06-23T11:29:33.000Z","source":{"folder":"en-us/web/api/pointerevent/getpredictedevents","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/pointerevent/getpredictedevents/index.md","last_commit_url":"https://github.com/mdn/content/commit/84c430110b84fae0335959184ce73f03124220fd","filename":"index.md"},"short_title":"getPredictedEvents()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PointerEvent","title":"PointerEvent"},{"uri":"/en-US/docs/Web/API/PointerEvent/getPredictedEvents","title":"getPredictedEvents()"}],"pageTitle":"PointerEvent: getPredictedEvents() method - Web APIs | MDN","noIndexing":false}}