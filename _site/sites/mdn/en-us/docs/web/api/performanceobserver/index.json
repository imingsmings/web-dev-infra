{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PerformanceObserver","mdn_url":"/en-US/docs/Web/API/PerformanceObserver","locale":"en-US","native":"English (US)","browserCompat":["api.PerformanceObserver"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Performance_API\">Performance API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/PerformanceObserver\" aria-current=\"page\"><code>PerformanceObserver</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/PerformanceObserver\"><code>PerformanceObserver()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Static properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/supportedEntryTypes_static\"><code>supportedEntryTypes</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/disconnect\"><code>disconnect()</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/takeRecords\"><code>takeRecords()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Performance API</summary><ol><li><a href=\"/en-US/docs/Web/API/EventCounts\"><code>EventCounts</code></a></li><li><a href=\"/en-US/docs/Web/API/LargestContentfulPaint\"><code>LargestContentfulPaint</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShift\"><code>LayoutShift</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShiftAttribution\"><code>LayoutShiftAttribution</code></a></li><li><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceElementTiming\"><code>PerformanceElementTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming\"><code>PerformanceEventTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceLongTaskTiming\"><code>PerformanceLongTaskTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigation\"><code>PerformanceNavigation</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformancePaintTiming\"><code>PerformancePaintTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming\"><code>PerformanceServerTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/VisibilityStateEntry\"><code>VisibilityStateEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<p>The <strong><code>PerformanceObserver</code></strong> interface is used to observe performance measurement events and be notified of new <a href=\"/en-US/docs/Web/API/PerformanceEntry\" title=\"performance entries\">performance entries</a> as they are recorded in the browser's <em>performance timeline</em>.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"performanceobserver\"><a href=\"/en-US/docs/Web/API/PerformanceObserver/PerformanceObserver\" title=\"PerformanceObserver()\"><code>PerformanceObserver()</code></a></dt>\n  <dd>\n    <p>Creates and returns a new <code>PerformanceObserver</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_properties","title":"Static properties","isH3":false,"content":"<dl>\n  <dt id=\"performanceobserver.supportedentrytypes\"><a href=\"/en-US/docs/Web/API/PerformanceObserver/supportedEntryTypes_static\" title=\"PerformanceObserver.supportedEntryTypes\"><code>PerformanceObserver.supportedEntryTypes</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns an array of the <a href=\"/en-US/docs/Web/API/PerformanceEntry/entryType\" title=\"entryType\"><code>entryType</code></a> values supported by the user agent.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"performanceobserver.observe\"><a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\" title=\"PerformanceObserver.observe()\"><code>PerformanceObserver.observe()</code></a></dt>\n  <dd>\n    <p>Specifies the set of entry types to observe. The performance observer's callback function will be invoked when performance entry is recorded for one of the specified <code>entryTypes</code>.</p>\n  </dd>\n  <dt id=\"performanceobserver.disconnect\"><a href=\"/en-US/docs/Web/API/PerformanceObserver/disconnect\" title=\"PerformanceObserver.disconnect()\"><code>PerformanceObserver.disconnect()</code></a></dt>\n  <dd>\n    <p>Stops the performance observer callback from receiving performance entries.</p>\n  </dd>\n  <dt id=\"performanceobserver.takerecords\"><a href=\"/en-US/docs/Web/API/PerformanceObserver/takeRecords\" title=\"PerformanceObserver.takeRecords()\"><code>PerformanceObserver.takeRecords()</code></a></dt>\n  <dd>\n    <p>Returns the current list of performance entries stored in the performance observer, emptying it out.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"creating_a_performanceobserver","title":"Creating a PerformanceObserver","isH3":true,"content":"<p>\n  The following example creates a <code>PerformanceObserver</code> watching for \"mark\" (<a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a>) and \"measure\" (<a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a>) events.\n  The <code>perfObserver</code> callback provides a <code>list</code> (<a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a>) which allows you to get observed performance entries.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">perfObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>entryType <span class=\"token operator\">===</span> <span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entry<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'s startTime: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entry<span class=\"token punctuation\">.</span>startTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>entryType <span class=\"token operator\">===</span> <span class=\"token string\">\"measure\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entry<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'s duration: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>entry<span class=\"token punctuation\">.</span>duration<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span>perfObserver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"measure\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#dom-performanceobserver","title":"Performance Timeline"}],"query":"api.PerformanceObserver"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceObserver"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/ResizeObserver\"><code>ResizeObserver</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Static properties","id":"static_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The PerformanceObserver interface is used to observe performance measurement events and be notified of new performance entries as they are recorded in the browser's performance timeline.","popularity":0.011,"modified":"2023-08-24T22:17:15.000Z","source":{"folder":"en-us/web/api/performanceobserver","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/performanceobserver/index.md","last_commit_url":"https://github.com/mdn/content/commit/381c51574a3e6a07ee09c63493452440f046038d","filename":"index.md"},"short_title":"PerformanceObserver","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PerformanceObserver","title":"PerformanceObserver"}],"pageTitle":"PerformanceObserver - Web APIs | MDN","noIndexing":false}}