{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PerformanceEventTiming: target property","mdn_url":"/en-US/docs/Web/API/PerformanceEventTiming/target","locale":"en-US","native":"English (US)","browserCompat":["api.PerformanceEventTiming.target"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Performance_API\">Performance API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/PerformanceEventTiming\"><code>PerformanceEventTiming</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/cancelable\"><code>cancelable</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/interactionId\"><code>interactionId</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/processingEnd\"><code>processingEnd</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/processingStart\"><code>processingStart</code></a></li><li><em><code>target</code> </em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/toJSON\"><code>toJSON()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Performance API</summary><ol><li><a href=\"/en-US/docs/Web/API/EventCounts\"><code>EventCounts</code></a></li><li><a href=\"/en-US/docs/Web/API/LargestContentfulPaint\"><code>LargestContentfulPaint</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShift\"><code>LayoutShift</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShiftAttribution\"><code>LayoutShiftAttribution</code></a></li><li><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceElementTiming\"><code>PerformanceElementTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceLongTaskTiming\"><code>PerformanceLongTaskTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigation\"><code>PerformanceNavigation</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformancePaintTiming\"><code>PerformancePaintTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming\"><code>PerformanceServerTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/VisibilityStateEntry\"><code>VisibilityStateEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The read-only <strong><code>target</code></strong> property returns the associated event's last <a href=\"/en-US/docs/Web/API/Event/target\"><code>target</code></a> which is the node onto which the event was last dispatched.</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A <a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a> onto which the event was last dispatched.</p>\n<p>Or <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> if the <code>Node</code> is disconnected from the document's DOM or is in the <a href=\"/en-US/docs/Web/API/Web_components/Using_shadow_DOM\">shadow DOM</a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"observing_events_with_a_specific_last_target","title":"Observing events with a specific last target","isH3":true,"content":"<p>The <code>target</code> property can be used when observing event-timing entries (<a href=\"/en-US/docs/Web/API/PerformanceEventTiming\"><code>PerformanceEventTiming</code></a>). For example, to log and measure events for a given last target only.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>target <span class=\"token operator\">&amp;&amp;</span> entry<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> <span class=\"token string\">\"myNode\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> delay <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>processingStart <span class=\"token operator\">-</span> entry<span class=\"token punctuation\">.</span>startTime<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Register the observer for events</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"event\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">buffered</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/event-timing/#dom-performanceeventtiming-target","title":"Event Timing API"}],"query":"api.PerformanceEventTiming.target"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceEventTiming.target"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The read-only target property returns the associated event's last target which is the node onto which the event was last dispatched.","popularity":0,"modified":"2023-04-13T22:52:32.000Z","source":{"folder":"en-us/web/api/performanceeventtiming/target","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/performanceeventtiming/target/index.md","last_commit_url":"https://github.com/mdn/content/commit/ac2874857a3de0be38430e58068597edf0afa2b2","filename":"index.md"},"short_title":"target","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PerformanceEventTiming","title":"PerformanceEventTiming"},{"uri":"/en-US/docs/Web/API/PerformanceEventTiming/target","title":"target"}],"pageTitle":"PerformanceEventTiming: target property - Web APIs | MDN","noIndexing":false}}