{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/HTMLElement/pointerrawupdate_event does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/HTMLElement/pointerrawupdate_event does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":103,"column":3,"macroName":"domxref","sourceContext":"  | <p>\n  |   Note that the following events are not included in the list because they are continuous events and no meaningful event counts or performance metrics can be obtained at this point: {{domxref(\"Element/mousemove_event\", \"mousemove\")}}, {{domxref(\"Element/pointermove_event\", \"pointermove\")}},\n> |   {{domxref(\"HTMLElement/pointerrawupdate_event\", \"pointerrawupdate\")}}, {{domxref(\"Element/touchmove_event\", \"touchmove\")}}, {{domxref(\"Element/wheel_event\", \"wheel\")}}, {{domxref(\"HTMLElement/drag_event\", \"drag\")}}.\n      ^\n  | </p>\n  | <p>To get a list of all exposed events, you can also look up keys in the {{domxref(\"performance.eventCounts\")}} map:</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/performanceeventtiming/index.md","macroSource":"{{domxref(\"HTMLElement/pointerrawupdate_event\", \"pointerrawupdate\")}}"}]},"title":"PerformanceEventTiming","mdn_url":"/en-US/docs/Web/API/PerformanceEventTiming","locale":"en-US","native":"English (US)","browserCompat":["api.PerformanceEventTiming"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Performance_API\">Performance API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/PerformanceEventTiming\" aria-current=\"page\"><code>PerformanceEventTiming</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/cancelable\"><code>cancelable</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/interactionId\"><code>interactionId</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/processingEnd\"><code>processingEnd</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/processingStart\"><code>processingStart</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/target\"><code>target</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/toJSON\"><code>toJSON()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Performance API</summary><ol><li><a href=\"/en-US/docs/Web/API/EventCounts\"><code>EventCounts</code></a></li><li><a href=\"/en-US/docs/Web/API/LargestContentfulPaint\"><code>LargestContentfulPaint</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShift\"><code>LayoutShift</code></a></li><li><a href=\"/en-US/docs/Web/API/LayoutShiftAttribution\"><code>LayoutShiftAttribution</code></a></li><li><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceElementTiming\"><code>PerformanceElementTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceLongTaskTiming\"><code>PerformanceLongTaskTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigation\"><code>PerformanceNavigation</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformancePaintTiming\"><code>PerformancePaintTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceServerTiming\"><code>PerformanceServerTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/VisibilityStateEntry\"><code>VisibilityStateEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <code>PerformanceEventTiming</code> interface of the Event Timing API provides insights into the latency of certain event types triggered by user interaction.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>This API enables visibility into slow events by providing event timestamps and duration for certain event types (<a href=\"#events_exposed\">see below</a>). For example, you can monitor the time between a user action and the start of its event handler, or the time an event handler takes to run.</p>\n<p>This API is particularly useful for measuring the <a href=\"/en-US/docs/Glossary/First_input_delay\">first input delay</a> (FID): the time from the point when a user first interacts with your app to the point when the browser is actually able to respond to that interaction.</p>\n<p>You typically work with <code>PerformanceEventTiming</code> objects by creating a <a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> instance and then calling its <a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a> method, passing in <code>\"event\"</code> or <code>\"first-input\"</code> as the value of the <a href=\"/en-US/docs/Web/API/PerformanceEntry/entryType\"><code>type</code></a> option. The <code>PerformanceObserver</code> object's callback will then be called with a list of <code>PerformanceEventTiming</code> objects which you can analyze. See the <a href=\"#getting_event_timing_information\">example below</a> for more.</p>\n<p>\n  By default, <code>PerformanceEventTiming</code> entries are exposed when their <code>duration</code> is 104ms or greater. Research suggests that user input that is not handled within 100ms is considered slow and 104ms is the first multiple of 8 greater than 100ms (for security reasons, this API is rounded to the nearest multiple of 8ms).\n  However, you can set the <a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> to a different threshold using the <code>durationThreshold</code> option in the <a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a> method.\n</p>\n<p>This interface inherits methods and properties from its parent, <a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a>:</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/PerformanceEntry\">\n    <rect x=\"0\" y=\"0\" width=\"128\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"64\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      PerformanceEntry\n    </text>\n  </a>\n  <line x1=\"128\" y1=\"14\" x2=\"158\" y2=\"14\" stroke=\"#D4DDE4\"></line>\n  <polyline points=\"128,14 138,9 138,19 128,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/PerformanceEventTiming\" aria-current=\"page\">\n    <rect x=\"158\" y=\"0\" width=\"176\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"246\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      PerformanceEventTiming\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"events_exposed","title":"Events exposed","isH3":true,"content":"<p>The following event types are exposed by the Event Timing API:</p>\n<figure class=\"table-container\"><table>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Click events</th>\n      <td>\n        <a href=\"/en-US/docs/Web/API/Element/auxclick_event\" title=\"auxclick\"><code>auxclick</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/click_event\" title=\"click\"><code>click</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/contextmenu_event\" title=\"contextmenu\"><code>contextmenu</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/dblclick_event\" title=\"dblclick\"><code>dblclick</code></a>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Composition events</th>\n      <td>\n        <a href=\"/en-US/docs/Web/API/Element/compositionend_event\" title=\"compositionend\"><code>compositionend</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/compositionstart_event\" title=\"compositionstart\"><code>compositionstart</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/compositionupdate_event\" title=\"compositionupdate\"><code>compositionupdate</code></a>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Drag &amp; drop events</th>\n      <td>\n        <a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"dragend\"><code>dragend</code></a>,\n        <a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"dragenter\"><code>dragenter</code></a>,\n        <a href=\"/en-US/docs/Web/API/HTMLElement/dragleave_event\" title=\"dragleave\"><code>dragleave</code></a>,\n        <a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"dragover\"><code>dragover</code></a>,\n        <a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"dragstart\"><code>dragstart</code></a>,\n        <a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"drop\"><code>drop</code></a>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Input events</th>\n      <td>\n        <a href=\"/en-US/docs/Web/API/HTMLElement/beforeinput_event\" title=\"beforeinput\"><code>beforeinput</code></a>,\n        <a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Keyboard events</th>\n      <td>\n        <a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/keypress_event\" title=\"keypress\"><code>keypress</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Mouse events</th>\n      <td>\n        <a href=\"/en-US/docs/Web/API/Element/mousedown_event\" title=\"mousedown\"><code>mousedown</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/mouseenter_event\" title=\"mouseenter\"><code>mouseenter</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/mouseleave_event\" title=\"mouseleave\"><code>mouseleave</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/mouseout_event\" title=\"mouseout\"><code>mouseout</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/mouseover_event\" title=\"mouseover\"><code>mouseover</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/mouseup_event\" title=\"mouseup\"><code>mouseup</code></a>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Pointer events</th>\n      <td>\n        <a href=\"/en-US/docs/Web/API/Element/pointerover_event\" title=\"pointerover\"><code>pointerover</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/pointerenter_event\" title=\"pointerenter\"><code>pointerenter</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/pointerout_event\" title=\"pointerout\"><code>pointerout</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/pointerleave_event\" title=\"pointerleave\"><code>pointerleave</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/gotpointercapture_event\" title=\"gotpointercapture\"><code>gotpointercapture</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/lostpointercapture_event\" title=\"lostpointercapture\"><code>lostpointercapture</code></a>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Touch events</th>\n      <td>\n        <a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"touchstart\"><code>touchstart</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/touchend_event\" title=\"touchend\"><code>touchend</code></a>,\n        <a href=\"/en-US/docs/Web/API/Element/touchcancel_event\" title=\"touchcancel\"><code>touchcancel</code></a>\n      </td>\n    </tr>\n  </tbody>\n</table></figure>\n<p>\n  Note that the following events are not included in the list because they are continuous events and no meaningful event counts or performance metrics can be obtained at this point: <a href=\"/en-US/docs/Web/API/Element/mousemove_event\" title=\"mousemove\"><code>mousemove</code></a>, <a href=\"/en-US/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a>,\n  <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;HTMLElement/pointerrawupdate_event&quot;, &quot;pointerrawupdate&quot;)}}\"><code>pointerrawupdate</code></a>, <a href=\"/en-US/docs/Web/API/Element/touchmove_event\" title=\"touchmove\"><code>touchmove</code></a>, <a href=\"/en-US/docs/Web/API/Element/wheel_event\" title=\"wheel\"><code>wheel</code></a>, <a href=\"/en-US/docs/Web/API/HTMLElement/drag_event\" title=\"drag\"><code>drag</code></a>.\n</p>\n<p>To get a list of all exposed events, you can also look up keys in the <a href=\"/en-US/docs/Web/API/Performance/eventCounts\"><code>performance.eventCounts</code></a> map:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> exposedEventsList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>performance<span class=\"token punctuation\">.</span>eventCounts<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<p>This interface has no constructor on its own. See the <a href=\"#getting_event_timing_information\">example below</a> for how to typically get the information the <code>PerformanceEventTiming</code> interface holds.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<p>This interface extends the following <a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> properties for event timing performance entry types by qualifying them as follows:</p>\n<dl>\n  <dt id=\"performanceentry.duration\"><a href=\"/en-US/docs/Web/API/PerformanceEntry/duration\"><code>PerformanceEntry.duration</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> representing the time from <code>startTime</code> to the next rendering paint (rounded to the nearest 8ms).</p>\n  </dd>\n  <dt id=\"performanceentry.entrytype\"><a href=\"/en-US/docs/Web/API/PerformanceEntry/entryType\"><code>PerformanceEntry.entryType</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns <code>\"event\"</code> (for long events) or <code>\"first-input\"</code> (for the first user interaction).</p>\n  </dd>\n  <dt id=\"performanceentry.name\"><a href=\"/en-US/docs/Web/API/PerformanceEntry/name\"><code>PerformanceEntry.name</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the associated event's type.</p>\n  </dd>\n  <dt id=\"performanceentry.starttime\"><a href=\"/en-US/docs/Web/API/PerformanceEntry/startTime\"><code>PerformanceEntry.startTime</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> representing the associated event's <a href=\"/en-US/docs/Web/API/Event/timeStamp\"><code>timestamp</code></a> property. This is the time the event was created and can be considered as a proxy for the time the user interaction occurred.</p>\n  </dd>\n</dl>\n<p>This interface also supports the following properties:</p>\n<dl>\n  <dt id=\"performanceeventtiming.cancelable\"><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/cancelable\"><code>PerformanceEventTiming.cancelable</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the associated event's <a href=\"/en-US/docs/Web/API/Event/cancelable\"><code>cancelable</code></a> property.</p>\n  </dd>\n  <dt id=\"performanceeventtiming.interactionid\"><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/interactionId\"><code>PerformanceEventTiming.interactionId</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Returns the ID that uniquely identifies the user interaction which triggered the associated event.</p>\n  </dd>\n  <dt id=\"performanceeventtiming.processingstart\"><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/processingStart\"><code>PerformanceEventTiming.processingStart</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> representing the time at which event dispatch started. To measure the time between a user action and the time the event handler starts to run, calculate <code>processingStart-startTime</code>.</p>\n  </dd>\n  <dt id=\"performanceeventtiming.processingend\"><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/processingEnd\"><code>PerformanceEventTiming.processingEnd</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> representing the time at which the event dispatch ended. To measure the time the event handler took to run, calculate <code>processingEnd-processingStart</code>.</p>\n  </dd>\n  <dt id=\"performanceeventtiming.target\"><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/target\"><code>PerformanceEventTiming.target</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the associated event's last target, if it is not removed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"performanceeventtiming.tojson\"><a href=\"/en-US/docs/Web/API/PerformanceEventTiming/toJSON\"><code>PerformanceEventTiming.toJSON()</code></a></dt>\n  <dd>\n    <p>Returns a JSON representation of the <code>PerformanceEventTiming</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"getting_event_timing_information","title":"Getting event timing information","isH3":true,"content":"<p>To get event timing information, create a <a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> instance and then call its <a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a> method, passing in <code>\"event\"</code> or <code>\"first-input\"</code> as the value of the <a href=\"/en-US/docs/Web/API/PerformanceEntry/entryType\"><code>type</code></a> option. You also need to set <code>buffered</code> to <code>true</code> to get access to events the user agent buffered while constructing the document. The <code>PerformanceObserver</code> object's callback will then be called with a list of <code>PerformanceEventTiming</code> objects which you can analyze.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Full duration</span>\n    <span class=\"token keyword\">const</span> duration <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Input delay (before processing event)</span>\n    <span class=\"token keyword\">const</span> delay <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>processingStart <span class=\"token operator\">-</span> entry<span class=\"token punctuation\">.</span>startTime<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Synchronous event processing time</span>\n    <span class=\"token comment\">// (between start and end dispatch)</span>\n    <span class=\"token keyword\">const</span> eventHandlerTime <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>processingEnd <span class=\"token operator\">-</span> entry<span class=\"token punctuation\">.</span>processingStart<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Total duration: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>duration<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Event delay: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>delay<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Event handler duration: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>eventHandlerTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Register the observer for events</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"event\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">buffered</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>You can also set a different <a href=\"/en-US/docs/Web/API/PerformanceObserver/observe#durationthreshold\"><code>durationThreshold</code></a>. The default is 104ms and the minimum possible duration threshold is 16ms.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>observer<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"event\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">durationThreshold</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">buffered</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"reporting_the_first_input_delay_fid","title":"Reporting the First Input Delay (FID)","isH3":true,"content":"<p>The <a href=\"/en-US/docs/Glossary/First_input_delay\">first input delay</a> or FID, measures the time from when a user first interacts with a page (i.e. when they click a link or tap on a button) to the time when the browser is actually able to begin processing event handlers in response to that interaction.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Keep track of whether (and when) the page was first hidden, see:</span>\n<span class=\"token comment\">// https://github.com/w3c/page-visibility/issues/29</span>\n<span class=\"token comment\">// NOTE: ideally this check would be performed in the document &lt;head&gt;</span>\n<span class=\"token comment\">// to avoid cases where the visibility state changes before this code runs.</span>\n<span class=\"token keyword\">let</span> firstHiddenTime <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>visibilityState <span class=\"token operator\">===</span> <span class=\"token string\">\"hidden\"</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"visibilitychange\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    firstHiddenTime <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>firstHiddenTime<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>timeStamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">once</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Sends the passed data to an analytics endpoint. This code</span>\n<span class=\"token comment\">// uses `/analytics`; you can replace it with your own URL.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sendToAnalytics</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Use `navigator.sendBeacon()` if available,</span>\n  <span class=\"token comment\">// falling back to `fetch()`.</span>\n  <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>sendBeacon <span class=\"token operator\">&amp;&amp;</span> navigator<span class=\"token punctuation\">.</span><span class=\"token function\">sendBeacon</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/analytics\"</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/analytics\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> body<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">keepalive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Use a try/catch instead of feature detecting `first-input`</span>\n<span class=\"token comment\">// support, since some browsers throw when using the new `type` option.</span>\n<span class=\"token comment\">// https://webkit.org/b/209216</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">onFirstInputEntry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Only report FID if the page wasn't hidden prior to</span>\n    <span class=\"token comment\">// the entry being dispatched. This typically happens when a</span>\n    <span class=\"token comment\">// page is loaded in a background tab.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">&lt;</span> firstHiddenTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> fid <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>processingStart <span class=\"token operator\">-</span> entry<span class=\"token punctuation\">.</span>startTime<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Report the FID value to an analytics endpoint.</span>\n      <span class=\"token function\">sendToAnalytics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> fid <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Create a PerformanceObserver that calls</span>\n  <span class=\"token comment\">// `onFirstInputEntry` for each entry.</span>\n  <span class=\"token keyword\">const</span> po <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entryList</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    entryList<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>onFirstInputEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Observe entries of type `first-input`, including buffered entries,</span>\n  <span class=\"token comment\">// i.e. entries that occurred before calling `observe()` below.</span>\n  po<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"first-input\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">buffered</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do nothing if the browser doesn't support this API.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/event-timing/#sec-performance-event-timing","title":"Event Timing API"}],"query":"api.PerformanceEventTiming"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceEventTiming"}}],"toc":[{"text":"Description","id":"description"},{"text":"Constructor","id":"constructor"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The PerformanceEventTiming interface of the Event Timing API provides insights into the latency of certain event types triggered by user interaction.","popularity":0.0025,"modified":"2023-08-04T07:12:32.000Z","source":{"folder":"en-us/web/api/performanceeventtiming","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/performanceeventtiming/index.md","last_commit_url":"https://github.com/mdn/content/commit/56c76424a5edb45f6716ac4ee48861dac8e7ae38","filename":"index.md"},"short_title":"PerformanceEventTiming","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PerformanceEventTiming","title":"PerformanceEventTiming"}],"pageTitle":"PerformanceEventTiming - Web APIs | MDN","noIndexing":false}}