{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/MediaKeyStatusMap/[@@iterator] does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/MediaKeyStatusMap/[@@iterator] does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":7,"line":43,"column":7,"macroName":"domxref","sourceContext":"  |     <p>Returns a new <code>Iterator</code> object containing values for each element in the status map, in insertion order.</p>\n  |   </dd>\n> |   <dt>{{domxref(\"MediaKeyStatusMap.[@@iterator]()\")}} {{ReadOnlyInline}}</dt>\n          ^\n  |   <dd>\n  |     <p>Returns a new <code>Iterator</code> object containing an array of <code>[key, value]</code> for each element in the status map, in insertion order.</p>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/mediakeystatusmap/index.md","macroSource":"{{domxref(\"MediaKeyStatusMap.[@@iterator]()\")}}"}]},"title":"MediaKeyStatusMap","mdn_url":"/en-US/docs/Web/API/MediaKeyStatusMap","locale":"en-US","native":"English (US)","browserCompat":["api.MediaKeyStatusMap"],"sidebarHTML":"<ol><li><strong><em><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap\" aria-current=\"page\"><code>MediaKeyStatusMap</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/size\"><code>size</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/entries\"><code>entries()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/forEach\"><code>forEach()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/has\"><code>has()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/keys\"><code>keys()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/values\"><code>values()</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>MediaKeyStatusMap</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Encrypted_Media_Extensions_API\">Encrypted Media Extensions API</a> is a read-only map of media key statuses by key IDs.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"mediakeystatusmap.size\"><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/size\"><code>MediaKeyStatusMap.size</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the number of key/value pairs in the status map.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"mediakeystatusmap.entries\"><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/entries\"><code>MediaKeyStatusMap.entries()</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a new <code>Iterator</code> object containing an array of <code>[key, value]</code> for each element in the status map, in insertion order.</p>\n  </dd>\n  <dt id=\"mediakeystatusmap.foreachcallback_argument\"><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/forEach\" title=\"MediaKeyStatusMap.forEach(callback[, argument])\"><code>MediaKeyStatusMap.forEach(callback[, argument])</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Calls <code>callback</code> once for each key-value pair in the status map, in insertion order. If <code>argument</code> is present it will be passed to the callback.</p>\n  </dd>\n  <dt id=\"mediakeystatusmap.get\"><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/get\"><code>MediaKeyStatusMap.get()</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the value associated with the given key, or <code>undefined</code> if there is none.</p>\n  </dd>\n  <dt id=\"mediakeystatusmap.has\"><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/has\"><code>MediaKeyStatusMap.has()</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a boolean asserting whether a value has been associated with the given key.</p>\n  </dd>\n  <dt id=\"mediakeystatusmap.keys\"><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/keys\"><code>MediaKeyStatusMap.keys()</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a new <code>Iterator</code> object containing keys for each element in the status map, in insertion order.</p>\n  </dd>\n  <dt id=\"mediakeystatusmap.values\"><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap/values\"><code>MediaKeyStatusMap.values()</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a new <code>Iterator</code> object containing values for each element in the status map, in insertion order.</p>\n  </dd>\n  <dt id=\"mediakeystatusmap.iterator\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;MediaKeyStatusMap.[@@iterator]()&quot;)}}\"><code>MediaKeyStatusMap.[@@iterator]()</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a new <code>Iterator</code> object containing an array of <code>[key, value]</code> for each element in the status map, in insertion order.</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/encrypted-media/#mediakeystatusmap-interface","title":"Encrypted Media Extensions"}],"query":"api.MediaKeyStatusMap"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaKeyStatusMap"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The MediaKeyStatusMap interface of the Encrypted Media Extensions API is a read-only map of media key statuses by key IDs.","popularity":0,"modified":"2023-03-14T07:47:03.000Z","source":{"folder":"en-us/web/api/mediakeystatusmap","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediakeystatusmap/index.md","last_commit_url":"https://github.com/mdn/content/commit/7f21f4fadd056c2c6afd46f9ad2f172883f6db05","filename":"index.md"},"short_title":"MediaKeyStatusMap","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaKeyStatusMap","title":"MediaKeyStatusMap"}],"pageTitle":"MediaKeyStatusMap - Web APIs | MDN","noIndexing":false}}