{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Web/API/IDBDatabase/setVersion does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Web/API/IDBDatabase/setVersion does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/DOMxRef.ejs\":60:18)\n    at DOMxRef (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":8,"line":39,"column":31,"macroName":"domxref","sourceContext":"  |       create object stores and indexes.\n  |       This mode is for updating the version number of transactions\n> |       that were started using {{domxref(\"IDBDatabase.setVersion()\")}}.\n                                  ^\n  |       Transactions of this mode cannot run concurrently with other transactions.\n  |       Transactions in this mode are known as <em>upgrade transactions</em>.","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/web/api/idbtransaction/mode/index.md","macroSource":"{{domxref(\"IDBDatabase.setVersion()\")}}"}]},"title":"IDBTransaction: mode property","mdn_url":"/en-US/docs/Web/API/IDBTransaction/mode","locale":"en-US","native":"English (US)","browserCompat":["api.IDBTransaction.mode"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBTransaction/db\"><code>db</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/durability\"><code>durability</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/error\"><code>error</code></a></li><li><em><code>mode</code> </em></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/ObjectStoreNames\"><code>objectStoreNames</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBTransaction/abort\"><code>abort()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/commit\"><code>commit()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/objectStore\"><code>objectStore()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBTransaction/abort_event\"><code>abort</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/complete_event\"><code>complete</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/error_event\"><code>error</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for IndexedDB</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/indexedDB\"><code>indexedDB</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>mode</code></strong> read-only property of the\n  <a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> interface returns the current mode for accessing the\n  data in the object stores in the scope of the transaction (i.e. is the mode to be\n  read-only, or do you want to write to the object stores?) The default value is\n  <code>readonly</code>.\n</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>\n  An object defining the mode for isolating access to\n  data in the current object stores:\n  A string defining the mode for isolating access to data in the current object stores.\n  The following values are available:\n</p>\n<dl>\n  <dt id=\"readonly\"><a href=\"#readonly\"><code>readonly</code></a></dt>\n  <dd>\n    <p>Allows data to be read but not changed.</p>\n  </dd>\n  <dt id=\"readwrite\"><a href=\"#readwrite\"><code>readwrite</code></a></dt>\n  <dd>\n    <p>Allows reading and writing of data in existing data stores to be changed.</p>\n  </dd>\n  <dt id=\"versionchange\"><a href=\"#versionchange\"><code>versionchange</code></a></dt>\n  <dd>\n    <p>\n      Allows any operation to be performed, including ones that delete and\n      create object stores and indexes.\n      This mode is for updating the version number of transactions\n      that were started using <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(&quot;IDBDatabase.setVersion()&quot;)}}\"><code>IDBDatabase.setVersion()</code></a>.\n      Transactions of this mode cannot run concurrently with other transactions.\n      Transactions in this mode are known as <em>upgrade transactions</em>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In the following code snippet, we open a read/write transaction on our database and add\n  some data to an object store. Note also the functions attached to transaction event\n  handlers to report on the outcome of the transaction opening in the event of success or\n  failure. At the end, we log the mode of the current transaction using <code>mode</code>.\n  For a full working example, see our <a href=\"https://github.com/mdn/dom-examples/tree/main/to-do-notifications\" class=\"external\" target=\"_blank\">To-do Notifications app</a> (<a href=\"https://mdn.github.io/dom-examples/to-do-notifications/\" class=\"external\" target=\"_blank\">view example live</a>).\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"notifications\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// an instance of a db object for us to store the IDB data in</span>\n<span class=\"token keyword\">let</span> db<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Let us open our database</span>\n<span class=\"token keyword\">const</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;li&gt;Database initialized.&lt;/li&gt;\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// store the result of opening the database in the db variable.</span>\n  <span class=\"token comment\">// This is used a lot below</span>\n  db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run the addData() function to add the data to the database</span>\n  <span class=\"token function\">addData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create a new object ready for being inserted into the IDB</span>\n  <span class=\"token keyword\">const</span> newItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">taskTitle</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Walk dog\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">hours</span><span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">minutes</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">day</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">month</span><span class=\"token operator\">:</span> <span class=\"token string\">\"December\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">2013</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">notified</span><span class=\"token operator\">:</span> <span class=\"token string\">\"no\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// open a read/write db transaction, ready for adding the data</span>\n  <span class=\"token keyword\">const</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// report on the success of opening the transaction</span>\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span>\n      <span class=\"token string\">\"&lt;li&gt;Transaction completed: database modification finished.&lt;/li&gt;\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span>\n      <span class=\"token string\">\"&lt;li&gt;Transaction not opened due to error. Duplicate items not allowed.&lt;/li&gt;\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create an object store on the transaction</span>\n  <span class=\"token keyword\">const</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// add our newItem object to the object store</span>\n  <span class=\"token keyword\">const</span> objectStoreRequest <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newItem<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStoreRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// report the success of the request (this does not mean the item</span>\n    <span class=\"token comment\">// has been stored successfully in the DB - for that you need transaction.onsuccess)</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;li&gt;Request successful.&lt;/li&gt;\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Return the mode this transaction has been opened in (should be \"readwrite\" in this case)</span>\n  transaction<span class=\"token punctuation\">.</span>mode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#ref-for-dom-idbtransaction-mode①","title":"Indexed Database API 3.0"}],"query":"api.IDBTransaction.mode"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IDBTransaction.mode"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li>\n  <li>Starting transactions: <a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Using transactions: <a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Setting a range of keys: <a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Retrieving and making changes to your data: <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li>\n  <li>Using cursors: <a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>Reference example: <a href=\"https://github.com/mdn/dom-examples/tree/main/to-do-notifications\" class=\"external\" target=\"_blank\">To-do Notifications</a> (<a href=\"https://mdn.github.io/dom-examples/to-do-notifications/\" class=\"external\" target=\"_blank\">View the example live</a>).</li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The mode read-only property of the\n  IDBTransaction interface returns the current mode for accessing the\n  data in the object stores in the scope of the transaction (i.e. is the mode to be\n  read-only, or do you want to write to the object stores?) The default value is\n  readonly.","popularity":0,"modified":"2023-04-07T06:06:41.000Z","source":{"folder":"en-us/web/api/idbtransaction/mode","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/idbtransaction/mode/index.md","last_commit_url":"https://github.com/mdn/content/commit/eab4066e72d5478de920e4020e5db71214dcffa6","filename":"index.md"},"short_title":"mode","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/IDBTransaction","title":"IDBTransaction"},{"uri":"/en-US/docs/Web/API/IDBTransaction/mode","title":"mode"}],"pageTitle":"IDBTransaction: mode property - Web APIs | MDN","noIndexing":false}}