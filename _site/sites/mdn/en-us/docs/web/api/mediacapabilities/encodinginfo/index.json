{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaCapabilities: encodingInfo() method","mdn_url":"/en-US/docs/Web/API/MediaCapabilities/encodingInfo","locale":"en-US","native":"English (US)","browserCompat":["api.MediaCapabilities.encodingInfo"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/MediaCapabilities\"><code>MediaCapabilities</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaCapabilities/decodingInfo\"><code>decodingInfo()</code></a></li><li><em><code>encodingInfo()</code> </em></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>MediaCapabilities.encodingInfo()</code></strong> method, part of the <a href=\"/en-US/docs/Web/API/MediaCapabilities\"><code>MediaCapabilities</code></a> interface of the <a href=\"/en-US/docs/Web/API/MediaCapabilities\">Media Capabilities API</a>, returns a promise with the tested media configuration's capabilities information.\n  This contains the three boolean properties <code>supported</code>, <code>smooth</code>, and <code>powerefficient</code>, which describe how compatible the device is with the type of media.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">encodingInfo</span><span class=\"token punctuation\">(</span>configuration<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"configuration\"><a href=\"#configuration\"><code>configuration</code></a></dt>\n  <dd>\n    <p>An object with a property <code>type</code> and <em>either</em> a <code>video</code> or <code>audio</code> property containing a configuration of the appropriate type:<!-- MediaEncodingConfiguration in the spec --></p>\n    <dl>\n      <dt id=\"type\"><a href=\"#type\"><code>type</code></a></dt>\n      <dd>\n        <p>The type of media being tested. This takes one of two values:</p>\n        <dl>\n          <dt id=\"record\"><a href=\"#record\"><code>record</code></a></dt>\n          <dd>\n            <p>Represents a configuration for recording of media, e.g. using <a href=\"/en-US/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a>.</p>\n          </dd>\n          <dt id=\"webrtc\"><a href=\"#webrtc\"><code>webrtc</code></a></dt>\n          <dd>\n            <p>Represents a configuration meant to be transmitted over electronic means (e.g. using <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>). <strong>Note:</strong> Firefox uses <code>transmission</code> for this type, and <code>webrtc</code> does not work.</p>\n          </dd>\n          <dt id=\"transmission\"><a href=\"#transmission\"><code>transmission</code></a> <abbr class=\"icon icon-nonstandard\" title=\"Non-standard. Check cross-browser support before using.\">\n    <span class=\"visually-hidden\">Non-standard</span>\n</abbr></dt>\n          <dd>\n            <p>The synonym of <code>webrtc</code> to be used in Firefox.</p>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"video\"><a href=\"#video\"><code>video</code></a></dt>\n      <dd>\n        <p>\n          Configuration object for a video media source.\n          This has the following properties:<!-- VideoConfiguration in the spec -->\n        </p>\n        <dl>\n          <dt id=\"contenttype\"><a href=\"#contenttype\"><code>contentType</code></a></dt>\n          <dd>\n            <p>String containing a valid video MIME type, and (optionally) a <a href=\"/en-US/docs/Web/Media/Formats/codecs_parameter\"><code>codecs</code> parameter</a>.</p>\n          </dd>\n          <dt id=\"width\"><a href=\"#width\"><code>width</code></a></dt>\n          <dd>\n            <p>The width of the video.</p>\n          </dd>\n          <dt id=\"height\"><a href=\"#height\"><code>height</code></a></dt>\n          <dd>\n            <p>The height of the video.</p>\n          </dd>\n          <dt id=\"bitrate\"><a href=\"#bitrate\"><code>bitrate</code></a></dt>\n          <dd>\n            <p>The number of bits used to encode one second of the video file.</p>\n          </dd>\n          <dt id=\"framerate\"><a href=\"#framerate\"><code>framerate</code></a></dt>\n          <dd>\n            <p>The number of frames making up one second of video playback.</p>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"audio\"><a href=\"#audio\"><code>audio</code></a></dt>\n      <dd>\n        <p>\n          Configuration object for an audio media source.\n          This has the following properties:<!-- AudioConfiguration in the spec -->\n        </p>\n        <dl>\n          <dt id=\"contenttype_2\"><a href=\"#contenttype_2\"><code>contentType</code></a></dt>\n          <dd>\n            <p>String containing a valid audio MIME type, and (optionally) a <a href=\"/en-US/docs/Web/Media/Formats/codecs_parameter\"><code>codecs</code> parameter</a>.</p>\n          </dd>\n          <dt id=\"channels\"><a href=\"#channels\"><code>channels</code></a></dt>\n          <dd>\n            <p>The number of channels used by the audio track.</p>\n          </dd>\n          <dt id=\"bitrate_2\"><a href=\"#bitrate_2\"><code>bitrate</code></a></dt>\n          <dd>\n            <p>The number of bits used to encode one second of the audio file.</p>\n          </dd>\n          <dt id=\"samplerate\"><a href=\"#samplerate\"><code>samplerate</code></a></dt>\n          <dd>\n            <p>The number of audio samples making up one second of the audio file.</p>\n          </dd>\n        </dl>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> fulfilling with an object containing three Boolean attributes:</p>\n<dl>\n  <dt id=\"supported\"><a href=\"#supported\"><code>supported</code></a></dt>\n  <dd>\n    <p><code>true</code> if the media content can be decoded at all. Otherwise, it is <code>false</code>.</p>\n  </dd>\n  <dt id=\"smooth\"><a href=\"#smooth\"><code>smooth</code></a></dt>\n  <dd>\n    <p><code>true</code> if playback of the media will be smooth (of high quality). Otherwise it is <code>false</code>.</p>\n  </dd>\n  <dt id=\"powerefficient\"><a href=\"#powerefficient\"><code>powerEfficient</code></a></dt>\n  <dd>\n    <p><code>true</code> if playback of the media will be power efficient. Otherwise, it is <code>false</code>.</p>\n  </dd>\n</dl>\n<p>\n  Browsers will report a supported media configuration as <code>smooth</code> and <code>powerEfficient</code> until stats on this device have been recorded.\n  All supported audio codecs are reported to be power efficient.\n</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown if the <code>configuration</code> passed to the <code>encodingInfo()</code> method is invalid, which may be for any of the following reasons:</p>\n    <ul>\n      <li>the type is not video or audio,</li>\n      <li>the <code>contentType</code> is not a valid codec MIME type,</li>\n      <li>there is some other error in the media configuration passed to the method, including omitting any of the <code>configuration</code> elements.</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">//Create media configuration to be tested</span>\n<span class=\"token keyword\">const</span> mediaConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"record\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// or 'transmission'</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"video/webm;codecs=vp8.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// valid content type</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// width of the video</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">1080</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// height of the video</span>\n    <span class=\"token literal-property property\">bitrate</span><span class=\"token operator\">:</span> <span class=\"token number\">120000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// number of bits used to encode 1s of video</span>\n    <span class=\"token literal-property property\">framerate</span><span class=\"token operator\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// number of frames making up that 1s.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// check support and performance</span>\nnavigator<span class=\"token punctuation\">.</span>mediaCapabilities<span class=\"token punctuation\">.</span><span class=\"token function\">encodingInfo</span><span class=\"token punctuation\">(</span>mediaConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">This configuration is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>result<span class=\"token punctuation\">.</span>supported <span class=\"token operator\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"not \"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">supported,</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>result<span class=\"token punctuation\">.</span>smooth <span class=\"token operator\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"not \"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">smooth, and</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>result<span class=\"token punctuation\">.</span>powerEfficient <span class=\"token operator\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"not \"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">power efficient.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/media-capabilities/#ref-for-dom-mediacapabilities-encodinginfo","title":"Media Capabilities"}],"query":"api.MediaCapabilities.encodingInfo"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaCapabilities.encodingInfo"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaCapabilities/decodingInfo\"><code>MediaCapabilities.decodingInfo()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaCapabilities.encodingInfo() method, part of the MediaCapabilities interface of the Media Capabilities API, returns a promise with the tested media configuration's capabilities information.\n  This contains the three boolean properties supported, smooth, and powerefficient, which describe how compatible the device is with the type of media.","popularity":0,"modified":"2023-07-07T07:19:19.000Z","source":{"folder":"en-us/web/api/mediacapabilities/encodinginfo","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediacapabilities/encodinginfo/index.md","last_commit_url":"https://github.com/mdn/content/commit/acfe8c9f1f4145f77653a2bc64a9744b001358dc","filename":"index.md"},"short_title":"encodingInfo()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaCapabilities","title":"MediaCapabilities"},{"uri":"/en-US/docs/Web/API/MediaCapabilities/encodingInfo","title":"encodingInfo()"}],"pageTitle":"MediaCapabilities: encodingInfo() method - Web APIs | MDN","noIndexing":false}}