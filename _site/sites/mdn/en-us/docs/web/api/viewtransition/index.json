{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ViewTransition","mdn_url":"/en-US/docs/Web/API/ViewTransition","locale":"en-US","native":"English (US)","browserCompat":["api.ViewTransition"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/View_Transitions_API\">View Transitions API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/ViewTransition\" aria-current=\"page\"><code>ViewTransition</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/ViewTransition/finished\"><code>finished</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ViewTransition/ready\"><code>ready</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li><li><a href=\"/en-US/docs/Web/API/ViewTransition/updateCallbackDone\"><code>updateCallbackDone</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/ViewTransition/skipTransition\"><code>skipTransition()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for View Transitions API</summary><ol><li><a href=\"/en-US/docs/Web/API/Document/startViewTransition\"><code>Document.startViewTransition()</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>ViewTransition</code></strong> interface of the <a href=\"/en-US/docs/Web/API/View_Transitions_API\" title=\"View Transitions API\">View Transitions API</a> represents a view transition, and provides functionality to react to the transition reaching different states (e.g. ready to run the animation, or animation finished) or skip the transition altogether.</p>\n<p>This object type is returned by the <a href=\"/en-US/docs/Web/API/Document/startViewTransition\" title=\"document.startViewTransition()\"><code>document.startViewTransition()</code></a> method. When <code>startViewTransition()</code> is invoked, a sequence of steps is followed as explained in <a href=\"/en-US/docs/Web/API/View_Transitions_API#the_view_transition_process\">The view transition process</a>. This also explains when the different promises fulfill.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"viewtransition.finished\"><a href=\"/en-US/docs/Web/API/ViewTransition/finished\"><code>ViewTransition.finished</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills once the transition animation is finished, and the new page view is visible and interactive to the user.</p>\n  </dd>\n  <dt id=\"viewtransition.ready\"><a href=\"/en-US/docs/Web/API/ViewTransition/ready\"><code>ViewTransition.ready</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills once the pseudo-element tree is created and the transition animation is about to start.</p>\n  </dd>\n  <dt id=\"viewtransition.updatecallbackdone\"><a href=\"/en-US/docs/Web/API/ViewTransition/updateCallbackDone\"><code>ViewTransition.updateCallbackDone</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that fulfills when the promise returned by the <a href=\"/en-US/docs/Web/API/Document/startViewTransition\" title=\"document.startViewTransition()\"><code>document.startViewTransition()</code></a>'s callback fulfills.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"skiptransition\"><a href=\"/en-US/docs/Web/API/ViewTransition/skipTransition\" title=\"skipTransition()\"><code>skipTransition()</code></a> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></dt>\n  <dd>\n    <p>Skips the animation part of the view transition, but doesn't skip running the <a href=\"/en-US/docs/Web/API/Document/startViewTransition\" title=\"document.startViewTransition()\"><code>document.startViewTransition()</code></a> callback that updates the DOM.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the following example, the <a href=\"/en-US/docs/Web/API/ViewTransition/ready\"><code>ViewTransition.ready</code></a> promise is used to trigger a custom circular reveal view transition emanating from the position of the user's cursor on click, with animation provided by the <a href=\"/en-US/docs/Web/API/Web_Animations_API\" title=\"Web Animations API\">Web Animations API</a>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Store the last click event</span>\n<span class=\"token keyword\">let</span> lastClick<span class=\"token punctuation\">;</span>\n<span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>lastClick <span class=\"token operator\">=</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">spaNavigate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Fallback for browsers that donâ€™t support this API:</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>startViewTransition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">updateTheDOMSomehow</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Get the click position, or fallback to the middle of the screen</span>\n  <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> lastClick<span class=\"token operator\">?.</span>clientX <span class=\"token operator\">??</span> innerWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> lastClick<span class=\"token operator\">?.</span>clientY <span class=\"token operator\">??</span> innerHeight <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Get the distance to the furthest corner</span>\n  <span class=\"token keyword\">const</span> endRadius <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">hypot</span><span class=\"token punctuation\">(</span>\n    Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> innerWidth <span class=\"token operator\">-</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> innerHeight <span class=\"token operator\">-</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create a transition:</span>\n  <span class=\"token keyword\">const</span> transition <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">startViewTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">updateTheDOMSomehow</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Wait for the pseudo-elements to be created:</span>\n  transition<span class=\"token punctuation\">.</span>ready<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Animate the rootâ€™s new view</span>\n    document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">clipPath</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">circle(0 at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">circle(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>endRadius<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">easing</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ease-in\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Specify which pseudo-element to animate</span>\n        <span class=\"token literal-property property\">pseudoElement</span><span class=\"token operator\">:</span> <span class=\"token string\">\"::view-transition-new(root)\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This animation also requires the following CSS, to turn off the default CSS animation and stop the old and new view states from blending in any way (the new state \"wipes\" right over the top of the old state, rather than transitioning in):</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">css</span></p><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">::view-transition-image-pair(root)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">isolation</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">::view-transition-old(root),\n::view-transition-new(root)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">mix-blend-mode</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.csswg.org/css-view-transitions/#viewtransition","title":"CSS View Transitions Module Level 1"}],"query":"api.ViewTransition"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ViewTransition"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://developer.chrome.com/docs/web-platform/view-transitions/\" class=\"external\" target=\"_blank\">Smooth and simple transitions with the View Transitions API</a></li>\n</ul>"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The ViewTransition interface of the View Transitions API represents a view transition, and provides functionality to react to the transition reaching different states (e.g. ready to run the animation, or animation finished) or skip the transition altogether.","popularity":0.0034,"modified":"2023-07-07T07:19:19.000Z","source":{"folder":"en-us/web/api/viewtransition","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/viewtransition/index.md","last_commit_url":"https://github.com/mdn/content/commit/acfe8c9f1f4145f77653a2bc64a9744b001358dc","filename":"index.md"},"short_title":"ViewTransition","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ViewTransition","title":"ViewTransition"}],"pageTitle":"ViewTransition - Web APIs | MDN","noIndexing":false}}