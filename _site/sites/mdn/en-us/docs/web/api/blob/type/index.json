{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Blob: type property","mdn_url":"/en-US/docs/Web/API/Blob/type","locale":"en-US","native":"English (US)","browserCompat":["api.Blob.type"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/File_API\">File API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/Blob/Blob\"><code>Blob()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Blob/size\"><code>size</code></a></li><li><em><code>type</code> </em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Blob/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/Blob/slice\"><code>slice()</code></a></li><li><a href=\"/en-US/docs/Web/API/Blob/stream\"><code>stream()</code></a></li><li><a href=\"/en-US/docs/Web/API/Blob/text\"><code>text()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for File API</summary><ol><li><a href=\"/en-US/docs/Web/API/File\"><code>File</code></a></li><li><a href=\"/en-US/docs/Web/API/FileList\"><code>FileList</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader\"><code>FileReader</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<p>The <strong><code>type</code></strong> read-only property of the <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> interface returns the <a href=\"/en-US/docs/Glossary/MIME_type\">MIME type</a> of the file.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> Based on the current implementation, browsers won't actually read the bytestream of a file to determine its media type.\n    It is assumed based on the file extension; a PNG image file renamed to .txt would give \"<em>text/plain</em>\" and not \"<em>image/png</em>\". Moreover, <code>blob.type</code> is generally reliable only for common file types like images, HTML documents, audio and video.\n    Uncommon file extensions would return an empty string.\n    Client configuration (for instance, the Windows Registry) may result in unexpected values even for common types. <strong>Developers are advised not to rely on this property as a sole validation scheme.</strong>\n  </p>\n</div>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>\n  A string containing the file's MIME type, or an empty string if the\n  type could not be determined.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  This example asks the user to select a number of files, then checks each file to make\n  sure it's one of a given set of image file types.\n</p>"}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>output</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Choose image files…<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>output</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css hidden notranslate\"><code><span class=\"token selector\">output</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Our application only allows GIF, PNG, and JPEG images</span>\n<span class=\"token keyword\">const</span> allowedFileTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"image/png\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/jpeg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/gif\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ninput<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> files <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    output<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">\"Choose image files…\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> allAllowed <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n    allowedFileTypes<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  output<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> allAllowed\n    <span class=\"token operator\">?</span> <span class=\"token string\">\"All files clear!\"</span>\n    <span class=\"token operator\">:</span> <span class=\"token string\">\"Please choose image files only.\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":true,"content":"<div class=\"code-example\" id=\"sect3\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Examples sample\" id=\"frame_examples\" src=\"http://localhost:5042/en-US/docs/Web/API/Blob/type/runner.html?id=examples\" loading=\"lazy\"></iframe></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/FileAPI/#dfn-type","title":"File API"}],"query":"api.Blob.type"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Blob.type"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/File_API/Using_files_from_web_applications\">Using files from web applications</a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The type read-only property of the Blob interface returns the MIME type of the file.","popularity":0.0205,"modified":"2023-12-02T07:13:28.000Z","source":{"folder":"en-us/web/api/blob/type","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/blob/type/index.md","last_commit_url":"https://github.com/mdn/content/commit/84a9afd94f497d4173bde131731ef6bdf0b6135d","filename":"index.md"},"short_title":"type","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Blob","title":"Blob"},{"uri":"/en-US/docs/Web/API/Blob/type","title":"type"}],"pageTitle":"Blob: type property - Web APIs | MDN","noIndexing":false}}