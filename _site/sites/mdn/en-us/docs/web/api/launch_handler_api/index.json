{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Launch Handler API","mdn_url":"/en-US/docs/Web/API/Launch_Handler_API","locale":"en-US","native":"English (US)","browserCompat":["api.Window.launchQueue"],"sidebarHTML":"<ol><li><strong><em><a href=\"/en-US/docs/Web/API/Launch_Handler_API\" aria-current=\"page\">Launch Handler API</a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/LaunchParams\"><code>LaunchParams</code></a></li><li><a href=\"/en-US/docs/Web/API/LaunchQueue\"><code>LaunchQueue</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Window/launchQueue\"><code>Window.launchQueue</code></a></li></ol></details></li></ol>","sidebarMacro":"DefaultAPISidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong>Launch Handler API</strong> allows developers to control how a <a href=\"/en-US/docs/Web/Progressive_web_apps\">progressive web app</a> (PWA) is launched â€” for example if it uses an existing window or creates a new one, and how the app's target launch URL is handled.</p>"}},{"type":"prose","value":{"id":"concepts_and_usage","title":"Concepts and usage","isH3":false,"content":"<p>You can specify launch behavior for your app by adding the <a href=\"/en-US/docs/Web/Manifest/launch_handler\"><code>launch_handler</code></a> field to your web app manifest file. This has one sub-field, <code>client_mode</code>, which contains a string value specifying how the app should be launched and navigated to. For example:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">json</span></p><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"launch_handler\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"client_mode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"focus-existing\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>If not specified, the default <code>client_mode</code> value is <code>auto</code>. Available values are:</p>\n<dl>\n  <dt id=\"focus-existing\"><a href=\"#focus-existing\"><code>focus-existing</code></a></dt>\n  <dd>\n    <p>The most recently interacted with browsing context in a web app window is chosen to handle the launch. This will populate the target launch URL in the <a href=\"/en-US/docs/Web/API/LaunchParams/targetURL\" title=\"targetURL\"><code>targetURL</code></a> property of the <a href=\"/en-US/docs/Web/API/LaunchParams\"><code>LaunchParams</code></a> object passed into the <a href=\"/en-US/docs/Web/API/LaunchQueue/setConsumer\" title=\"window.launchQueue.setConsumer()\"><code>window.launchQueue.setConsumer()</code></a>'s callback function. As you'll see below, this allows you to set custom launch handing functionality for your app.</p>\n  </dd>\n  <dt id=\"navigate-existing\"><a href=\"#navigate-existing\"><code>navigate-existing</code></a></dt>\n  <dd>\n    <p>The most recently interacted with browsing context in a web app window is navigated to the target launch URL. The target URL is still made available via <a href=\"/en-US/docs/Web/API/LaunchQueue/setConsumer\" title=\"window.launchQueue.setConsumer()\"><code>window.launchQueue.setConsumer()</code></a> to allow additional custom launch navigation handling to be implemented.</p>\n  </dd>\n  <dt id=\"navigate-new\"><a href=\"#navigate-new\"><code>navigate-new</code></a></dt>\n  <dd>\n    <p>A new browsing context is created in a web app window to load the target launch URL. The target URL is still made available via <a href=\"/en-US/docs/Web/API/LaunchQueue/setConsumer\" title=\"window.launchQueue.setConsumer()\"><code>window.launchQueue.setConsumer()</code></a> to allow additional custom launch navigation handling to be implemented.</p>\n  </dd>\n  <dt id=\"auto\"><a href=\"#auto\"><code>auto</code></a></dt>\n  <dd>\n    <p>The user agent decides what works best for the platform. For example, <code>navigate-existing</code> might make more sense on mobile, where single app instances are commonplace, whereas <code>navigate-new</code> might make more sense in a desktop context. This is the default value used if provided values are invalid.</p>\n  </dd>\n</dl>\n<p>When <code>focus-existing</code> is used, you can include code inside the <a href=\"/en-US/docs/Web/API/LaunchQueue/setConsumer\" title=\"window.launchQueue.setConsumer()\"><code>window.launchQueue.setConsumer()</code></a>'s callback function to provide custom handling of the <a href=\"/en-US/docs/Web/API/LaunchParams/targetURL\" title=\"targetURL\"><code>targetURL</code></a></p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span>launchQueue<span class=\"token punctuation\">.</span><span class=\"token function\">setConsumer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">launchParams</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do something with launchParams.targetURL</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <a href=\"/en-US/docs/Web/API/LaunchParams\"><code>LaunchParams</code></a> also has a <a href=\"/en-US/docs/Web/API/LaunchParams/files\"><code>LaunchParams.files</code></a> property, which returns a read-only array of <a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a> objects representing any files passed along with the launch navigation via the <a href=\"/en-US/docs/Web/HTTP/Methods/POST\"><code>POST</code></a> method. This allows custom file handling to be implemented.</p>\n</div>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"launchparams\"><a href=\"/en-US/docs/Web/API/LaunchParams\"><code>LaunchParams</code></a></dt>\n  <dd>\n    <p>Used when implementing custom launch navigation handling in a PWA. When <a href=\"/en-US/docs/Web/API/LaunchQueue/setConsumer\" title=\"window.launchQueue.setConsumer()\"><code>window.launchQueue.setConsumer()</code></a> is invoked to set up the launch navigation handling functionality, the callback function inside <code>setConsumer()</code> is passed a <code>LaunchParams</code> object instance.</p>\n  </dd>\n  <dt id=\"launchqueue\"><a href=\"/en-US/docs/Web/API/LaunchQueue\"><code>LaunchQueue</code></a></dt>\n  <dd>\n    <p>When a <a href=\"/en-US/docs/Web/Progressive_web_apps\">progressive web app</a> (PWA) is launched with a <a href=\"/en-US/docs/Web/Manifest/launch_handler\"><code>launch_handler</code></a> <code>client_mode</code> value of <code>focus-existing</code>, <code>navigate-new</code>, or <code>navigate-existing</code>, <code>LaunchQueue</code> provides access to functionality that allows custom launch navigation handling to be implemented in the PWA. This functionality is controlled by the properties of the <a href=\"/en-US/docs/Web/API/LaunchParams\"><code>LaunchParams</code></a> object passed into the <a href=\"/en-US/docs/Web/API/LaunchQueue/setConsumer\" title=\"setConsumer()\"><code>setConsumer()</code></a> callback function.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"extensions_to_other_interfaces","title":"Extensions to other interfaces","isH3":false,"content":"<dl>\n  <dt id=\"window.launchqueue\"><a href=\"/en-US/docs/Web/API/Window/launchQueue\"><code>window.launchQueue</code></a></dt>\n  <dd>\n    <p>Provides access to the <a href=\"/en-US/docs/Web/API/LaunchQueue\"><code>LaunchQueue</code></a> class, which allows custom launch navigation handling to be implemented in a <a href=\"/en-US/docs/Web/Progressive_web_apps\">progressive web app</a> (PWA), with the handling context signified by the <a href=\"/en-US/docs/Web/Manifest/launch_handler\"><code>launch_handler</code></a> manifest field <code>client_mode</code> value.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"launchQueue\"</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span>launchQueue<span class=\"token punctuation\">.</span><span class=\"token function\">setConsumer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">launchParams</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>launchParams<span class=\"token punctuation\">.</span>targetURL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>launchParams<span class=\"token punctuation\">.</span>targetURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Assuming a music player app that gets a track passed to it to be played</span>\n      <span class=\"token keyword\">const</span> track <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"track\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        audio<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> track<span class=\"token punctuation\">;</span>\n        title<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        audio<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This code is included in the PWA, and executed when the app loads, upon launch. The <a href=\"/en-US/docs/Web/API/LaunchQueue/setConsumer\" title=\"window.launchQueue.setConsumer()\"><code>window.launchQueue.setConsumer()</code></a>'s callback function extracts the search param out of the <a href=\"/en-US/docs/Web/API/LaunchParams/targetURL\"><code>LaunchParams.targetURL</code></a> and, if it finds a <code>track</code> param, uses it to populate an <a href=\"/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> element's <code>src</code> and play the audio track that this points to.</p>\n<p>See the <a href=\"https://launch-handler.glitch.me/\" class=\"external\" target=\"_blank\">Musicr 2.0</a> demo app for full working code.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/web-app-launch/#launchqueue-interface","title":"Web App Launch Handler API"}],"query":"api.Window.launchQueue"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Window.launchQueue"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://developer.chrome.com/docs/web-platform/launch-handler/\" class=\"external\" target=\"_blank\">Launch Handler API: Control how your app is launched</a></li>\n  <li><a href=\"https://launch-handler.glitch.me/\" class=\"external\" target=\"_blank\">Musicr 2.0</a> demo app</li>\n</ul>"}}],"toc":[{"text":"Concepts and usage","id":"concepts_and_usage"},{"text":"Interfaces","id":"interfaces"},{"text":"Extensions to other interfaces","id":"extensions_to_other_interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Launch Handler API allows developers to control how a progressive web app (PWA) is launched â€” for example if it uses an existing window or creates a new one, and how the app's target launch URL is handled.","popularity":0.0022,"modified":"2023-04-13T06:13:15.000Z","source":{"folder":"en-us/web/api/launch_handler_api","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/launch_handler_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/942a529383ee7ee3996fb234187641c08935f3ff","filename":"index.md"},"short_title":"Launch Handler API","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Launch_Handler_API","title":"Launch Handler API"}],"pageTitle":"Launch Handler API - Web APIs | MDN","noIndexing":false}}