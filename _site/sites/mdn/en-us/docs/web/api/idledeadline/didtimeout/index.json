{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"IdleDeadline: didTimeout property","mdn_url":"/en-US/docs/Web/API/IdleDeadline/didTimeout","locale":"en-US","native":"English (US)","browserCompat":["api.IdleDeadline.didTimeout"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Background_Tasks_API\">Background Tasks API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/IdleDeadline\"><code>IdleDeadline</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><em><code>didTimeout</code> </em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/IdleDeadline/timeRemaining\"><code>timeRemaining()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Background Tasks</summary><ol><li><a href=\"/en-US/docs/Web/API/Window/cancelIdleCallback\"><code>Window.cancelIdleCallback()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The read-only <strong><code>didTimeout</code></strong> property on the\n  <strong><a href=\"/en-US/docs/Web/API/IdleDeadline\"><code>IdleDeadline</code></a></strong> interface is a Boolean value which\n  indicates whether or not the idle callback is being invoked because the timeout interval\n  specified when <a href=\"/en-US/docs/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a> was called has expired.\n</p>\n<p>\n  If <code>didTimeout</code> is <code>true</code>, the <code>IdleDeadline</code> object's\n  <a href=\"/en-US/docs/Web/API/IdleDeadline/timeRemaining\" title=\"timeRemaining()\"><code>timeRemaining()</code></a> method will return\n  approximately 0.\n</p>\n<p>\n  Idle callbacks support the concept of a timeout in order to ensure that whatever task\n  they're meant to perform actually happens, even if the user agent never has enough idle\n  time available. Your callback will typically check the value of <code>didTimeout</code>\n  if it needs to perform an action even if the browser is too busy to grant you the time;\n  you should react by performing the needed task or, ideally, a minimal amount of work\n  that can be done to keep things moving along, then schedule a new callback to try again\n  to get the rest of the work done.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>\n  A Boolean which is <code>true</code> if the callback is running due to the callback's\n  timeout period elapsing or <code>false</code> if the callback is running because the\n  user agent is idle and is offering time to the callback.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  See our <a href=\"/en-US/docs/Web/API/Background_Tasks_API#example\">complete example</a>\n  in the article <a href=\"/en-US/docs/Web/API/Background_Tasks_API\">Cooperative Scheduling of Background Tasks API</a>.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/requestidlecallback/#dom-idledeadline-didtimeout","title":"requestIdleCallback() Cooperative Scheduling of Background Tasks"}],"query":"api.IdleDeadline.didTimeout"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IdleDeadline.didTimeout"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Background_Tasks_API\">Collaborative Scheduling of Background Tasks</a></li>\n  <li><a href=\"/en-US/docs/Web/API/IdleDeadline\"><code>IdleDeadline</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Window/cancelIdleCallback\"><code>Window.cancelIdleCallback()</code></a></li>\n</ul>"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The read-only didTimeout property on the\n  IdleDeadline interface is a Boolean value which\n  indicates whether or not the idle callback is being invoked because the timeout interval\n  specified when Window.requestIdleCallback() was called has expired.","popularity":0,"modified":"2023-04-07T06:06:41.000Z","source":{"folder":"en-us/web/api/idledeadline/didtimeout","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/idledeadline/didtimeout/index.md","last_commit_url":"https://github.com/mdn/content/commit/eab4066e72d5478de920e4020e5db71214dcffa6","filename":"index.md"},"short_title":"didTimeout","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/IdleDeadline","title":"IdleDeadline"},{"uri":"/en-US/docs/Web/API/IdleDeadline/didTimeout","title":"didTimeout"}],"pageTitle":"IdleDeadline: didTimeout property - Web APIs | MDN","noIndexing":false}}