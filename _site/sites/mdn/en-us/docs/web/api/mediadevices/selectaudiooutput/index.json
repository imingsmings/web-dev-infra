{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaDevices: selectAudioOutput() method","mdn_url":"/en-US/docs/Web/API/MediaDevices/selectAudioOutput","locale":"en-US","native":"English (US)","browserCompat":["api.MediaDevices.selectAudioOutput"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\"><code>enumerateDevices()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\"><code>getDisplayMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/getSupportedConstraints\"><code>getSupportedConstraints()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>getUserMedia()</code></a></li><li><em><code>selectAudioOutput()</code> <abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/devicechange_event\"><code>devicechange</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedAudioFrame\"><code>RTCEncodedAudioFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransformer\"><code>RTCRtpScriptTransformer</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/transform\"><code>RTCRtpSender.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTransformEvent\"><code>RTCTransformEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <a href=\"/en-US/docs/Web/API/MediaDevices/selectAudioOutput\" aria-current=\"page\"><code>MediaDevices.selectAudioOutput()</code></a> method of the <a href=\"/en-US/docs/Web/API/Audio_Output_Devices_API\">Audio Output Devices API</a> prompts the user to select an audio output device, such as a speaker or headset. If the user selects a device, the method grants user permission to use the selected device as an audio output sink.</p>\n<p>Following selection, if the device is available it can be enumerated using <a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\"><code>MediaDevices.enumerateDevices()</code></a> and set as the audio output sink using <a href=\"/en-US/docs/Web/API/HTMLMediaElement/setSinkId\"><code>HTMLMediaElement.setSinkId()</code></a>.</p>\n<p>On success, the returned <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> is resolved with a <a href=\"/en-US/docs/Web/API/MediaDeviceInfo\"><code>MediaDeviceInfo</code></a> describing the selected device.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">selectAudioOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">selectAudioOutput</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"options\"><a href=\"#options\"><code>options</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object that configures what device(s) may be offered in the user prompt.</p>\n    <dl>\n      <dt id=\"deviceid\"><a href=\"#deviceid\"><code>deviceId</code></a> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          A string representing the ID of a single previously exposed/permitted device.\n          If not set, a prompt with all available audio output devices will be displayed.\n        </p>\n        <p>\n          The option is intended for applications that want to store a device id so that the same device can be used by default in future sessions.\n          Note that the method may return a new ID for the same device, and that persisted ids <em>must be passed</em> through <code>selectAudioOutput()</code> successfully before they will work with <a href=\"/en-US/docs/Web/API/HTMLMediaElement/setSinkId\" title=\"setSinkId()\"><code>setSinkId()</code></a>.\n        </p>\n        <div class=\"notecard note\" id=\"sect2\">\n          <p>\n            <strong>Note:</strong> A user agent may choose to skip prompting the user if a specified non-null id was previously exposed to the user by <code>selectAudioOutput()</code> in an earlier session.\n            In this case the user agent may simply resolve with this device id, or a new id for the same device if it has changed.\n            If permission for the specified device was previously granted but has since been revoked, the user-agent might display all allowed devices, highlighting the one with the specified ID.\n          </p>\n        </div>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that is fulfilled with a <a href=\"/en-US/docs/Web/API/MediaDeviceInfo\"><code>MediaDeviceInfo</code></a> object that describes the audio output device selected by the user.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"notallowederror\"><a href=\"#notallowederror\"><code>NotAllowedError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Returned if a <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/speaker-selection\"><code>speaker-selection</code></a> <a href=\"/en-US/docs/Web/HTTP/Permissions_Policy\">Permissions Policy</a> is used to block use of audio outputs (in addition the popup for selecting an audio output won't be displayed), or the user closed the selection prompt without choosing a device.</p>\n  </dd>\n  <dt id=\"notfounderror\"><a href=\"#notfounderror\"><code>NotFoundError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Returned if there are no available audio output devices.</p>\n  </dd>\n  <dt id=\"invalidstateerror\"><a href=\"#invalidstateerror\"><code>InvalidStateError</code></a> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Returned if there hasn't been a <a href=\"/en-US/docs/Glossary/Transient_activation\">transient activation</a> (you must trigger it from some kind of UI event).</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"security_requirements","title":"Security requirements","isH3":false,"content":"<p>Access to the API is subject to the following constraints:</p>\n<ul>\n  <li>The method must be called in a <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure context</a>.</li>\n  <li>\n    <a href=\"/en-US/docs/Web/Security/User_activation\">Transient user activation</a> is required.\n    The user has to interact with the page or a UI element for this feature to work.\n  </li>\n  <li>Access may be gated by the <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/midi\"><code>speaker-selection</code></a> HTTP <a href=\"/en-US/docs/Web/HTTP/Permissions_Policy\">Permission Policy</a>.</li>\n</ul>\n<p>The permission status can be queried using the <a href=\"/en-US/docs/Web/API/Permissions_API\">Permissions API</a> method <a href=\"/en-US/docs/Web/API/Permissions/query\"><code>navigator.permissions.query()</code></a>, passing a permission descriptor with the <code>speaker-selection</code> permission.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  Here's an example of using <code>selectAudioOutput()</code>, within a function that is triggered by a button click.\n  It outputs the selected <a href=\"/en-US/docs/Web/API/MediaDeviceInfo/deviceId\">device IDs</a> and labels (if available) or an error message.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span>selectAudioOutput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selectAudioOutput() not supported.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Display prompt and log selected device or error</span>\n  navigator<span class=\"token punctuation\">.</span>mediaDevices\n    <span class=\"token punctuation\">.</span><span class=\"token function\">selectAudioOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">device</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>device<span class=\"token punctuation\">.</span>kind<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>device<span class=\"token punctuation\">.</span>label<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> id = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>device<span class=\"token punctuation\">.</span>deviceId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>On selection of an output this might produce:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">bash</span></p><pre class=\"brush: bash notranslate\"><code>audiooutput: Realtek Digital Output <span class=\"token punctuation\">(</span>Realtek<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Audio<span class=\"token punctuation\">)</span> <span class=\"token function\">id</span> <span class=\"token operator\">=</span> 0wE6fURSZ20H0N2NbxqgowQJLWbwo+5ablCVVJwRM3k<span class=\"token operator\">=</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-output/#dom-mediadevices-selectaudiooutput","title":"Audio Output Devices API"}],"query":"api.MediaDevices.selectAudioOutput"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaDevices.selectAudioOutput"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/setSinkId\"><code>HTMLMediaElement.setSinkId()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTMLMediaElement/sinkId\"><code>HTMLMediaElement.sinkId</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a> - the introductory page to the API</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Security requirements","id":"security_requirements"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaDevices.selectAudioOutput() method of the Audio Output Devices API prompts the user to select an audio output device, such as a speaker or headset. If the user selects a device, the method grants user permission to use the selected device as an audio output sink.","popularity":0.0054,"modified":"2023-07-20T23:28:32.000Z","source":{"folder":"en-us/web/api/mediadevices/selectaudiooutput","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediadevices/selectaudiooutput/index.md","last_commit_url":"https://github.com/mdn/content/commit/d458c221e219591afaa91beafd544d5eb40e790b","filename":"index.md"},"short_title":"selectAudioOutput()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaDevices","title":"MediaDevices"},{"uri":"/en-US/docs/Web/API/MediaDevices/selectAudioOutput","title":"selectAudioOutput()"}],"pageTitle":"MediaDevices: selectAudioOutput() method - Web APIs | MDN","noIndexing":false}}