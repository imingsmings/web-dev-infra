{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaDevices: enumerateDevices() method","mdn_url":"/en-US/docs/Web/API/MediaDevices/enumerateDevices","locale":"en-US","native":"English (US)","browserCompat":["api.MediaDevices.enumerateDevices"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><em><code>enumerateDevices()</code> </em></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\"><code>getDisplayMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/getSupportedConstraints\"><code>getSupportedConstraints()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/selectAudioOutput\"><code>selectAudioOutput()</code></a><abbr class=\"icon icon-experimental\" title=\"Experimental. Expect behavior to change in the future.\">\n    <span class=\"visually-hidden\">Experimental</span>\n</abbr></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/devicechange_event\"><code>devicechange</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedAudioFrame\"><code>RTCEncodedAudioFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCEncodedVideoFrame\"><code>RTCEncodedVideoFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver/transform\"><code>RTCRtpReceiver.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransform\"><code>RTCRtpScriptTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpScriptTransformer\"><code>RTCRtpScriptTransformer</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender/transform\"><code>RTCRtpSender.transform</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTransformEvent\"><code>RTCTransformEvent</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <a href=\"/en-US/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a> method <strong><code>enumerateDevices()</code></strong> requests a list of the currently available media input and output devices, such as microphones, cameras, headsets, and so forth.\n  The returned <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> is resolved with an array of <a href=\"/en-US/docs/Web/API/MediaDeviceInfo\"><code>MediaDeviceInfo</code></a> objects describing the devices.\n</p>\n<p>\n  The returned list will omit any devices that are blocked by the document <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy\">Permission Policy</a>: <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/microphone\"><code>microphone</code></a>, <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/camera\"><code>camera</code></a>, <a href=\"/en-US/docs/Web/HTTP/Headers/Permissions-Policy/speaker-selection\"><code>speaker-selection</code></a> (for output devices), and so on.\n  Access to particular non-default devices is also gated by the <a href=\"/en-US/docs/Web/API/Permissions_API\">Permissions API</a>, and the list will omit devices for which the user has not granted explicit permission.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token function\">enumerateDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that is fulfilled with an array of <a href=\"/en-US/docs/Web/API/MediaDeviceInfo\"><code>MediaDeviceInfo</code></a> objects.\n  Each object in the array describes one of the available media input and output devices.\n  The order is significant â€” the default capture devices will be listed first.\n</p>\n<p>Other than default devices, only devices for which permission has been granted are \"available\".</p>\n<p>If enumeration fails, the promise is rejected.</p>"}},{"type":"prose","value":{"id":"security_requirements","title":"Security requirements","isH3":false,"content":"<p>Access to the API is subject to the following constraints:</p>\n<ul>\n  <li>The method must be called in a <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure context</a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Here's an example of using <code>enumerateDevices()</code>. It outputs a list of the <a href=\"/en-US/docs/Web/API/MediaDeviceInfo/deviceId\">device IDs</a>, with their labels if available.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token operator\">?.</span>enumerateDevices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enumerateDevices() not supported.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// List cameras and microphones.</span>\n  navigator<span class=\"token punctuation\">.</span>mediaDevices\n    <span class=\"token punctuation\">.</span><span class=\"token function\">enumerateDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">devices</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      devices<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">device</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>device<span class=\"token punctuation\">.</span>kind<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>device<span class=\"token punctuation\">.</span>label<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> id = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>device<span class=\"token punctuation\">.</span>deviceId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token punctuation\">.</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This might produce:</p>\n<pre class=\"brush: plain notranslate\">videoinput: id = csO9c0YpAf274OuCPUA53CNE0YHlIr2yXCi+SqfBZZ8=\naudioinput: id = RKxXByjnabbADGQNNZqLVLdmXlS0YkETYCIbg+XxnvM=\naudioinput: id = r2/xw1xUPIyZunfV1lGrKOma5wTOvCkWfZ368XCndm0=\n</pre>\n<p>\n  or if one or more <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a>s are active or persistent permissions are\n  granted:\n</p>\n<pre class=\"brush: plain notranslate\">videoinput: FaceTime HD Camera (Built-in) id=csO9c0YpAf274OuCPUA53CNE0YHlIr2yXCi+SqfBZZ8=\naudioinput: default (Built-in Microphone) id=RKxXByjnabbADGQNNZqLVLdmXlS0YkETYCIbg+XxnvM=\naudioinput: Built-in Microphone id=r2/xw1xUPIyZunfV1lGrKOma5wTOvCkWfZ368XCndm0=\n</pre>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-main/#dom-mediadevices-enumeratedevices","title":"Media Capture and Streams"}],"query":"api.MediaDevices.enumerateDevices"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaDevices.enumerateDevices"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a> - the introductory page to the API</li>\n  <li><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API\">Media Capture and Streams API</a> - the API for the media stream objects</li>\n  <li>\n    <a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API/Taking_still_photos\">Taking webcam photos</a> - a\n    tutorial on using <code>getUserMedia()</code> for taking photos rather than video.\n  </li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Security requirements","id":"security_requirements"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaDevices method enumerateDevices() requests a list of the currently available media input and output devices, such as microphones, cameras, headsets, and so forth.\n  The returned Promise is resolved with an array of MediaDeviceInfo objects describing the devices.","popularity":0.0162,"modified":"2023-07-20T23:28:32.000Z","source":{"folder":"en-us/web/api/mediadevices/enumeratedevices","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediadevices/enumeratedevices/index.md","last_commit_url":"https://github.com/mdn/content/commit/d458c221e219591afaa91beafd544d5eb40e790b","filename":"index.md"},"short_title":"enumerateDevices()","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaDevices","title":"MediaDevices"},{"uri":"/en-US/docs/Web/API/MediaDevices/enumerateDevices","title":"enumerateDevices()"}],"pageTitle":"MediaDevices: enumerateDevices() method - Web APIs | MDN","noIndexing":false}}