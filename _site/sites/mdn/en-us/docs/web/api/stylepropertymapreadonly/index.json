{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"StylePropertyMapReadOnly","mdn_url":"/en-US/docs/Web/API/StylePropertyMapReadOnly","locale":"en-US","native":"English (US)","browserCompat":["api.StylePropertyMapReadOnly"],"sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CSS_Typed_OM_API\">CSS Typed OM API</a></strong></li><li><strong><em><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly\" aria-current=\"page\"><code>StylePropertyMapReadOnly</code></a></em></strong></li><li class=\"toggle\"><details open=\"\"><summary>Instance properties</summary><ol><li><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/size\"><code>size</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Instance methods</summary><ol><li><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/entries\"><code>entries()</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach\"><code>forEach()</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/getAll\"><code>getAll()</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/has\"><code>has()</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/keys\"><code>keys()</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for CSS Typed Object Model API</summary><ol><li><a href=\"/en-US/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a></li></ol></details></li></ol>","sidebarMacro":"APIRef","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>StylePropertyMapReadOnly</code></strong> interface of the <a href=\"/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model\">CSS Typed Object Model API</a> provides a read-only representation of a CSS declaration block that is an alternative to <a href=\"/en-US/docs/Web/API/CSSStyleDeclaration\"><code>CSSStyleDeclaration</code></a>. Retrieve an instance of this interface using <a href=\"/en-US/docs/Web/API/Element/computedStyleMap\" title=\"Element.computedStyleMap()\"><code>Element.computedStyleMap()</code></a>.</p>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"stylepropertymapreadonly.size\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/size\"><code>StylePropertyMapReadOnly.size</code></a></dt>\n  <dd>\n    <p>Returns an unsigned long integer containing the size of the <code>StylePropertyMapReadOnly</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"stylepropertymapreadonly.entries\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/entries\"><code>StylePropertyMapReadOnly.entries()</code></a></dt>\n  <dd>\n    <p>Returns an array of a given object's own enumerable property <code>[key, value]</code> pairs, in the same order as that provided by a <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a> loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.foreach\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach\"><code>StylePropertyMapReadOnly.forEach()</code></a></dt>\n  <dd>\n    <p>Executes a provided function once for each element of <code>StylePropertyMapReadOnly</code>.</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.get\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/get\"><code>StylePropertyMapReadOnly.get()</code></a></dt>\n  <dd>\n    <p>Returns the value of the specified property.</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.getall\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/getAll\"><code>StylePropertyMapReadOnly.getAll()</code></a></dt>\n  <dd>\n    <p>Returns an array of <a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a> objects containing the values for the provided property.</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.has\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/has\"><code>StylePropertyMapReadOnly.has()</code></a></dt>\n  <dd>\n    <p>Indicates whether the specified property is in the <code>StylePropertyMapReadOnly</code> object.</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.keys\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/keys\"><code>StylePropertyMapReadOnly.keys()</code></a></dt>\n  <dd>\n    <p>Returns a new <em>array iterator</em> containing the keys for each item in <code>StylePropertyMapReadOnly</code>.</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.values\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/values\"><code>StylePropertyMapReadOnly.values()</code></a></dt>\n  <dd>\n    <p>Returns a new <em>array iterator</em> containing the values for each index in the <code>StylePropertyMapReadOnly</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>We have to have an element to observe:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">html</span></p><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  This is a paragraph with some text. We can add some CSS, or not. The style map\n  will include all the default and inherited CSS property values.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>We add a touch of CSS with a custom property to better demonstrate the output:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">css</span></p><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--someVariable</span><span class=\"token punctuation\">:</span> 1.6em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--someOtherVariable</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>33vw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--anotherVariable</span><span class=\"token punctuation\">:</span> 42<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--someVariable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>We add JavaScript to grab our paragraph and return back a definition list of all the default CSS property values using <a href=\"/en-US/docs/Web/API/Element/computedStyleMap\"><code>Element.computedStyleMap()</code></a>.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// get the element</span>\n<span class=\"token keyword\">const</span> myElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// get the &lt;dl&gt; we'll be populating</span>\n<span class=\"token keyword\">const</span> stylesList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Retrieve all computed styles with computedStyleMap()</span>\n<span class=\"token keyword\">const</span> stylePropertyMap <span class=\"token operator\">=</span> myElement<span class=\"token punctuation\">.</span><span class=\"token function\">computedStyleMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// iterate through the map of all the properties and values, adding a &lt;dt&gt; and &lt;dd&gt; for each</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> stylePropertyMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// properties</span>\n  <span class=\"token keyword\">const</span> cssProperty <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cssProperty<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> prop<span class=\"token punctuation\">;</span>\n  stylesList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>cssProperty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// values</span>\n  <span class=\"token keyword\">const</span> cssValue <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cssValue<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n  stylesList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>cssValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><div class=\"code-example\" id=\"sect1\"><p class=\"example-header\"></p><iframe class=\"sample-code-frame\" title=\"Examples sample\" id=\"frame_examples\" width=\"120\" height=\"300\" src=\"http://localhost:5042/en-US/docs/Web/API/StylePropertyMapReadOnly/runner.html?id=examples\" loading=\"lazy\"></iframe></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.css-houdini.org/css-typed-om/#the-stylepropertymap","title":"CSS Typed OM Level 1"}],"query":"api.StylePropertyMapReadOnly"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.StylePropertyMapReadOnly"}}],"toc":[{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The StylePropertyMapReadOnly interface of the CSS Typed Object Model API provides a read-only representation of a CSS declaration block that is an alternative to CSSStyleDeclaration. Retrieve an instance of this interface using Element.computedStyleMap().","popularity":0.001,"modified":"2023-09-27T02:05:49.000Z","source":{"folder":"en-us/web/api/stylepropertymapreadonly","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/stylepropertymapreadonly/index.md","last_commit_url":"https://github.com/mdn/content/commit/8d202854ade7328f827da2951bc714455f78674f","filename":"index.md"},"short_title":"StylePropertyMapReadOnly","parents":[{"uri":"/en-US/docs/Web","title":"References"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/StylePropertyMapReadOnly","title":"StylePropertyMapReadOnly"}],"pageTitle":"StylePropertyMapReadOnly - Web APIs | MDN","noIndexing":false}}