{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"2D collision detection","mdn_url":"/en-US/docs/Games/Techniques/2D_collision_detection","locale":"en-US","native":"English (US)","summary":"Algorithms to detect collision in 2D games depend on the type of shapes that can collide (e.g. Rectangle to Rectangle, Rectangle to Circle, Circle to Circle). Generally you will have a simple generic shape that covers the entity known as a \"hitbox\" so even though collision may not be pixel perfect, it will look good enough and be performant across multiple entities. This article provides a review of the most common techniques used to provide collision detection in 2D games.","popularity":0.0174,"modified":"2023-07-07T07:19:19.000Z","source":{"folder":"en-us/games/techniques/2d_collision_detection","github_url":"https://github.com/mdn/content/blob/main/files/en-us/games/techniques/2d_collision_detection/index.md","last_commit_url":"https://github.com/mdn/content/commit/acfe8c9f1f4145f77653a2bc64a9744b001358dc","filename":"index.md"},"short_title":"2D collision detection","parents":[{"uri":"/en-US/docs/Games","title":"Game development"},{"uri":"/en-US/docs/Games/Techniques","title":"Techniques for game development"},{"uri":"/en-US/docs/Games/Techniques/2D_collision_detection","title":"2D collision detection"}],"pageTitle":"2D collision detection - Game development | MDN","noIndexing":false,"hash":"e65f98126a32c7bcf70eea5f79cc5237342cd276cf9ddadee1ef3cbe118dac82"}