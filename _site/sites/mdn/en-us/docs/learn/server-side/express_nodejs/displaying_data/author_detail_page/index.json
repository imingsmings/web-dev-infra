{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Author detail page","mdn_url":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The author detail page needs to display the information about the specified <code>Author</code>, identified using their (automatically generated) <code>_id</code> field value, along with a list of all the <code>Book</code> objects associated with that <code>Author</code>.</p>"}},{"type":"prose","value":{"id":"controller","title":"Controller","isH3":false,"content":"<p>Open <strong>/controllers/authorController.js</strong>.</p>\n<p>Add the following lines to the top of the file to <code>require()</code> the <code>Book</code> module needed by the author detail page (other modules such as \"express-async-handler\" should already be present).</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> Book <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../models/book\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Find the exported <code>author_detail()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific Author.</span>\nexports<span class=\"token punctuation\">.</span>author_detail <span class=\"token operator\">=</span> <span class=\"token function\">asyncHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get details of author and all their books (in parallel)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>author<span class=\"token punctuation\">,</span> allBooksByAuthor<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    Author<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    Book<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"title summary\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>author <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// No results.</span>\n    <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Author not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"author_detail\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Author Detail\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> author<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">author_books</span><span class=\"token operator\">:</span> allBooksByAuthor<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The approach is exactly the same as described for the <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Genre_detail_page\">Genre detail page</a>.\n  The route controller function uses <code>Promise.all()</code> to query the specified <code>Author</code> and their associated <code>Book</code> instances in parallel.\n  If no matching author is found an Error object is sent to the Express error handling middleware.\n  If the author is found then the retrieved database information is rendered using the \"author_detail\" template.\n</p>"}},{"type":"prose","value":{"id":"view","title":"View","isH3":false,"content":"<p>Create <strong>/views/author_detail.pug</strong> and copy in the following text.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">pug</span></p><pre class=\"brush: pug notranslate\"><code><span class=\"token keyword\">extends layout</span>\n\n<span class=\"token keyword\">block content</span>\n\n  <span class=\"token tag\">h1</span> <span class=\"token plain-text\">Author: #{author.name}</span>\n  <span class=\"token tag\">p</span> <span class=\"token plain-text\">#{author.date_of_birth} - #{author.date_of_death}</span>\n\n  <span class=\"token tag\">div<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">style</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'margin-left:20px;margin-top:20px'</span></span><span class=\"token punctuation\">)</span></span></span>\n\n    <span class=\"token tag\">h4</span> <span class=\"token plain-text\">Books</span>\n\n    <span class=\"token tag\">dl</span>\n      <span class=\"token flow-control\"><span class=\"token each\"><span class=\"token keyword\">each</span> book <span class=\"token keyword\">in</span></span> author_books</span>\n        <span class=\"token tag\">dt</span>\n          <span class=\"token tag\">a<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">href</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">book<span class=\"token punctuation\">.</span>url</span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">#{book.title}</span>\n        <span class=\"token tag\">dd</span> <span class=\"token plain-text\">#{book.summary}</span>\n\n      <span class=\"token flow-control\"><span class=\"token branch keyword\">else</span></span>\n        <span class=\"token tag\">p</span> <span class=\"token plain-text\">This author has no books.</span>\n</code></pre></div>\n<p>Everything in this template has been demonstrated in previous sections.</p>"}},{"type":"prose","value":{"id":"what_does_it_look_like","title":"What does it look like?","isH3":false,"content":"<p>Run the application and open your browser to <code>http://localhost:3000/</code>. Select the <em>All Authors</em> link, then select one of the authors. If everything is set up correctly, your site should look something like the following screenshot.</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page/locallibary_express_author_detail.png\" alt=\"Author Detail Page - Express Local Library site\" width=\"1463\" height=\"618\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> The appearance of the author <em>lifespan</em> dates is ugly! We'll address that in the final challenge in this article.</p>\n</div>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<ul>\n  <li>Return to <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a>.</li>\n  <li>Proceed to final subarticle of part 5 : <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge\">BookInstance detail page and challenge</a>.</li>\n</ul>"}}],"toc":[{"text":"Controller","id":"controller"},{"text":"View","id":"view"},{"text":"What does it look like?","id":"what_does_it_look_like"},{"text":"Next steps","id":"next_steps"}],"summary":"The author detail page needs to display the information about the specified Author, identified using their (automatically generated) _id field value, along with a list of all the Book objects associated with that Author.","popularity":0.0016,"modified":"2023-07-03T10:12:35.000Z","source":{"folder":"en-us/learn/server-side/express_nodejs/displaying_data/author_detail_page","github_url":"https://github.com/mdn/content/blob/main/files/en-us/learn/server-side/express_nodejs/displaying_data/author_detail_page/index.md","last_commit_url":"https://github.com/mdn/content/commit/bb026bcb88b7f45374d602301b7b0db5a49ff303","filename":"index.md"},"short_title":"Author detail page","parents":[{"uri":"/en-US/docs/Learn","title":"Guides"},{"uri":"/en-US/docs/Learn/Server-side","title":"Server-side website programming"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express Tutorial Part 5: Displaying library data"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page","title":"Author detail page"}],"pageTitle":"Author detail page - Learn web development | MDN","noIndexing":false}}