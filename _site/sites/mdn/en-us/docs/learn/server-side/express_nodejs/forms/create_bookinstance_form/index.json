{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Create BookInstance form","mdn_url":"/en-US/docs/Learn/Server-side/Express_Nodejs/forms/Create_BookInstance_form","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  This subarticle shows how to define a page/form to create <code>BookInstance</code> objects.\n  This is very much like the form we used to <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms/Create_book_form\">create <code>Book</code> objects</a>.\n</p>"}},{"type":"prose","value":{"id":"import_validation_and_sanitization_methods","title":"Import validation and sanitization methods","isH3":false,"content":"<p>Open <strong>/controllers/bookinstanceController.js</strong>, and add the following lines at the top of the file:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> body<span class=\"token punctuation\">,</span> validationResult <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"express-validator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"controller—get_route","title":"Controller—get route","isH3":false,"content":"<p>At the top of the file, require the <em>Book</em> module (needed because each <code>BookInstance</code> is associated with a particular <code>Book</code>).</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> Book <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../models/book\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Find the exported <code>bookinstance_create_get()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display BookInstance create form on GET.</span>\nexports<span class=\"token punctuation\">.</span>bookinstance_create_get <span class=\"token operator\">=</span> <span class=\"token function\">asyncHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> allBooks <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Book<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookinstance_form\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Create BookInstance\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">book_list</span><span class=\"token operator\">:</span> allBooks<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The controller gets a sorted list of all books (<code>allBooks</code>) and passes it via <code>book_list</code> to the view <strong><code>bookinstance_form.pug</code></strong> (along with a <code>title</code>).\n  Note that no book has been selected when we first display this form, so we don't pass the <code>selected_book</code> variable to <code>render()</code>.\n  Because of this, <code>selected_book</code> will have a value of <code>undefined</code> in the template.\n</p>"}},{"type":"prose","value":{"id":"controller—post_route","title":"Controller—post route","isH3":false,"content":"<p>Find the exported <code>bookinstance_create_post()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Handle BookInstance create on POST.</span>\nexports<span class=\"token punctuation\">.</span>bookinstance_create_post <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// Validate and sanitize fields.</span>\n  <span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Book must be specified\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"imprint\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Imprint must be specified\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">isLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"due_back\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid date\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">optional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">values</span><span class=\"token operator\">:</span> <span class=\"token string\">\"falsy\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">isISO8601</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">toDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Process request after validation and sanitization.</span>\n  <span class=\"token function\">asyncHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Extract the validation errors from a request.</span>\n    <span class=\"token keyword\">const</span> errors <span class=\"token operator\">=</span> <span class=\"token function\">validationResult</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a BookInstance object with escaped and trimmed data.</span>\n    <span class=\"token keyword\">const</span> bookInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BookInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">book</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">imprint</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>imprint<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">due_back</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>errors<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// There are errors.</span>\n      <span class=\"token comment\">// Render form again with sanitized values and error messages.</span>\n      <span class=\"token keyword\">const</span> allBooks <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Book<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookinstance_form\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Create BookInstance\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">book_list</span><span class=\"token operator\">:</span> allBooks<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">selected_book</span><span class=\"token operator\">:</span> bookInstance<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">errors</span><span class=\"token operator\">:</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">bookinstance</span><span class=\"token operator\">:</span> bookInstance<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Data from form is valid</span>\n      <span class=\"token keyword\">await</span> bookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span>bookInstance<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The structure and behavior of this code is the same as for creating our other objects.\n  First we validate and sanitize the data. If the data is invalid, we then re-display the form along with the data that was originally entered by the user and a list of error messages.\n  If the data is valid, we save the new <code>BookInstance</code> record and redirect the user to the detail page.\n</p>"}},{"type":"prose","value":{"id":"view","title":"View","isH3":false,"content":"<p>Create <strong>/views/bookinstance_form.pug</strong> and copy in the text below.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">pug</span></p><pre class=\"brush: pug notranslate\"><code><span class=\"token keyword\">extends layout</span>\n\n<span class=\"token keyword\">block content</span>\n  <span class=\"token tag\">h1</span><span class=\"token punctuation\">=</span><span class=\"token code\">title</span>\n\n  <span class=\"token tag\">form<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">method</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'POST'</span> action<span class=\"token operator\">=</span><span class=\"token string\">''</span></span><span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token tag\">div<span class=\"token attr-class\">.form-group</span></span>\n      <span class=\"token tag\">label<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">for</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'book'</span></span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">Book:</span>\n      <span class=\"token tag\">select<span class=\"token attr-id\">#book</span><span class=\"token attr-class\">.form-control</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">type</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'select'</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Select book'</span> name<span class=\"token operator\">=</span><span class=\"token string\">'book'</span> required<span class=\"token operator\">=</span><span class=\"token string\">'true'</span></span><span class=\"token punctuation\">)</span></span></span>\n        <span class=\"token tag\">for</span> <span class=\"token plain-text\">book in book_list</span>\n          <span class=\"token tag\">option<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">value</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">book<span class=\"token punctuation\">.</span>_id</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">selected</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token punctuation\">(</span>selected_book<span class=\"token operator\">==</span>book<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span></span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">? '' : false) ) #{book.title}</span>\n\n    <span class=\"token tag\">div<span class=\"token attr-class\">.form-group</span></span>\n      <span class=\"token tag\">label<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">for</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'imprint'</span></span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">Imprint:</span>\n      <span class=\"token tag\">input<span class=\"token attr-id\">#imprint</span><span class=\"token attr-class\">.form-control</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">type</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'text'</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Publisher and date information'</span> name<span class=\"token operator\">=</span><span class=\"token string\">'imprint'</span> required<span class=\"token operator\">=</span><span class=\"token string\">'true'</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token operator\">===</span>bookinstance <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> bookinstance<span class=\"token punctuation\">.</span>imprint</span><span class=\"token punctuation\">)</span></span></span>)\n    <span class=\"token tag\">div<span class=\"token attr-class\">.form-group</span></span>\n      <span class=\"token tag\">label<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">for</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'due_back'</span></span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">Date when book available:</span>\n      <span class=\"token tag\">input<span class=\"token attr-id\">#due_back</span><span class=\"token attr-class\">.form-control</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">type</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'date'</span> name<span class=\"token operator\">=</span><span class=\"token string\">'due_back'</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token operator\">===</span>bookinstance <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> bookinstance<span class=\"token punctuation\">.</span>due_back_yyyy_mm_dd</span><span class=\"token punctuation\">)</span></span></span>)\n\n    <span class=\"token tag\">div<span class=\"token attr-class\">.form-group</span></span>\n      <span class=\"token tag\">label<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">for</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'status'</span></span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">Status:</span>\n      <span class=\"token tag\">select<span class=\"token attr-id\">#status</span><span class=\"token attr-class\">.form-control</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">type</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'select'</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Select status'</span> name<span class=\"token operator\">=</span><span class=\"token string\">'status'</span> required<span class=\"token operator\">=</span><span class=\"token string\">'true'</span> </span><span class=\"token punctuation\">)</span></span></span>\n        <span class=\"token tag\">option<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">value</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'Maintenance'</span> selected<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token operator\">===</span>bookinstance <span class=\"token operator\">||</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Maintenance'</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span><span class=\"token operator\">:</span><span class=\"token string\">'selected'</span></span><span class=\"token punctuation\">)</span></span></span>) Maintenance\n        <span class=\"token tag\">option<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">value</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'Available'</span> selected<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token operator\">===</span>bookinstance <span class=\"token operator\">||</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span><span class=\"token operator\">:</span><span class=\"token string\">'selected'</span></span><span class=\"token punctuation\">)</span></span></span>) Available\n        <span class=\"token tag\">option<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">value</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'Loaned'</span> selected<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token operator\">===</span>bookinstance <span class=\"token operator\">||</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Loaned'</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span><span class=\"token operator\">:</span><span class=\"token string\">'selected'</span></span><span class=\"token punctuation\">)</span></span></span>) Loaned\n        <span class=\"token tag\">option<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">value</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'Reserved'</span> selected<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token operator\">===</span>bookinstance <span class=\"token operator\">||</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Reserved'</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span><span class=\"token operator\">:</span><span class=\"token string\">'selected'</span></span><span class=\"token punctuation\">)</span></span></span>) Reserved\n\n    <span class=\"token tag\">button<span class=\"token attr-class\">.btn</span><span class=\"token attr-class\">.btn-primary</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">type</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'submit'</span></span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">Submit</span>\n\n  <span class=\"token flow-control\"><span class=\"token branch keyword\">if</span> errors</span>\n    <span class=\"token tag\">ul</span>\n      <span class=\"token tag\">for</span> <span class=\"token plain-text\">error in errors</span>\n        <span class=\"token tag\">li</span><span class=\"token punctuation\">!=</span><span class=\"token code\"> error<span class=\"token punctuation\">.</span>msg</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> The above template hard-codes the <em>Status</em> values (Maintenance, Available, etc.) and does not \"remember\" the user's entered values.\n    Should you so wish, consider reimplementing the list, passing in option data from the controller and setting the selected value when the form is re-displayed.\n  </p>\n</div>\n<p>\n  The view structure and behavior is almost the same as for the <strong>book_form.pug</strong> template, so we won't go over it in detail.\n  The one thing to note is the line where we set the \"due back\" date to <code>bookinstance.due_back_yyyy_mm_dd</code> if we are populating the date input for an existing instance.\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">pug</span></p><pre class=\"brush: pug notranslate\"><code><span class=\"token tag\">input<span class=\"token attr-id\">#due_back</span><span class=\"token attr-class\">.form-control</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">type</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'date'</span></span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'due_back'</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token operator\">===</span>bookinstance <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> bookinstance<span class=\"token punctuation\">.</span>due_back_yyyy_mm_dd</span><span class=\"token punctuation\">)</span></span></span>)\n</code></pre></div>\n<p>\n  The date value has to be set in the format <code>YYYY-MM-DD</code> because this is expected by <a href=\"/en-US/docs/Web/HTML/Element/input/date\"><code>&lt;input&gt;</code> elements with <code>type=\"date\"</code></a>, however the date is not stored in this format so we have to convert it before setting the value in the control.\n  The <code>due_back_yyyy_mm_dd()</code> method is added to the <code>BookInstance</code> model in the next section.\n</p>"}},{"type":"prose","value":{"id":"model—virtual_due_back_yyyy_mm_dd_method","title":"Model—virtual <code>due_back_yyyy_mm_dd()</code> method","isH3":false,"content":"<p>\n  Open the file where you defined the <code>BookInstanceSchema</code> model (<strong>models/bookinstance.js</strong>).\n  Add the <code>due_back_yyyy_mm_dd()</code> virtual function shown below (after the <code>due_back_formatted()</code> virtual function):\n</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">pug</span></p><pre class=\"brush: pug notranslate\"><code><span class=\"token tag\">BookInstanceSchema<span class=\"token attr-class\">.virtual</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span>\"due_back_yyyy_mm_dd\"<span class=\"token punctuation\">)</span></span></span><span class=\"token tag\"><span class=\"token attr-class\">.get</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span>function <span class=\"token punctuation\">()</span></span></span> {\n  <span class=\"token tag\">return</span> <span class=\"token plain-text\">DateTime.fromJSDate(this.due_back).toISODate(); // format 'YYYY-MM-DD'</span>\n});\n</code></pre></div>","titleAsText":"Model—virtual due_back_yyyy_mm_dd() method"}},{"type":"prose","value":{"id":"what_does_it_look_like","title":"What does it look like?","isH3":false,"content":"<p>\n  Run the application and open your browser to <code>http://localhost:3000/</code>.\n  Then select the <em>Create new book instance (copy)</em> link. If everything is set up correctly, your site should look something like the following screenshot. After you submit a valid <code>BookInstance</code>, it should be saved and you'll be taken to the detail page.\n</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms/Create_BookInstance_form/locallibary_express_bookinstance_create_empty.png\" alt=\"Create BookInstance of the Local library application screenshot from localhost:3000. The page is divided into two columns. The narrow left column has a vertical navigation bar with 10 links separated into two sections by a light-colored horizontal line. The top section link to already created data. The bottom links go to create new data forms. The wide right column has the create book instance form with a 'Create BookInstance' heading and four input fields labeled 'Book', 'Imprint', 'Date when book available' and 'Status'. The form is filled. There is a 'Submit' button at the bottom of the form.\" width=\"1147\" height=\"635\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<ul>\n  <li>Return to <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a>.</li>\n  <li>Proceed to the next subarticle of part 6: <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms/Delete_author_form\">Delete Author form</a>.</li>\n</ul>"}}],"toc":[{"text":"Import validation and sanitization methods","id":"import_validation_and_sanitization_methods"},{"text":"Controller—get route","id":"controller—get_route"},{"text":"Controller—post route","id":"controller—post_route"},{"text":"View","id":"view"},{"text":"Model—virtual <code>due_back_yyyy_mm_dd()</code> method","id":"model—virtual_due_back_yyyy_mm_dd_method"},{"text":"What does it look like?","id":"what_does_it_look_like"},{"text":"Next steps","id":"next_steps"}],"summary":"This subarticle shows how to define a page/form to create BookInstance objects.\n  This is very much like the form we used to create Book objects.","popularity":0.0013,"modified":"2023-11-26T23:39:28.000Z","source":{"folder":"en-us/learn/server-side/express_nodejs/forms/create_bookinstance_form","github_url":"https://github.com/mdn/content/blob/main/files/en-us/learn/server-side/express_nodejs/forms/create_bookinstance_form/index.md","last_commit_url":"https://github.com/mdn/content/commit/92a7d59def42f1643571aa3b0d24112376b879a6","filename":"index.md"},"short_title":"Create BookInstance form","parents":[{"uri":"/en-US/docs/Learn","title":"Guides"},{"uri":"/en-US/docs/Learn/Server-side","title":"Server-side website programming"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/forms","title":"Express Tutorial Part 6: Working with forms"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/forms/Create_BookInstance_form","title":"Create BookInstance form"}],"pageTitle":"Create BookInstance form - Learn web development | MDN","noIndexing":false}}