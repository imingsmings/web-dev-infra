{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Book detail page","mdn_url":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <em>Book detail page</em> needs to display the information for a specific <code>Book</code> (identified using its automatically generated <code>_id</code> field value), along with information about each associated copy in the library (<code>BookInstance</code>). Wherever we display an author, genre, or book instance, these should be linked to the associated detail page for that item.</p>"}},{"type":"prose","value":{"id":"controller","title":"Controller","isH3":false,"content":"<p>Open <strong>/controllers/bookController.js</strong>. Find the exported <code>book_detail()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific book.</span>\nexports<span class=\"token punctuation\">.</span>book_detail <span class=\"token operator\">=</span> <span class=\"token function\">asyncHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get details of books, book instances for specific book</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>book<span class=\"token punctuation\">,</span> bookInstances<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    Book<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"author\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"genre\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    BookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">book</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>book <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// No results.</span>\n    <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Book not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book_detail\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">book</span><span class=\"token operator\">:</span> book<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">book_instances</span><span class=\"token operator\">:</span> bookInstances<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> We don't need to require any additional modules in this step, as we already imported the dependencies when we implemented the home page controller.</p>\n</div>\n<p>\n  The approach is exactly the same as described for the <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Genre_detail_page\">Genre detail page</a>.\n  The route controller function uses <code>Promise.all()</code> to query the specified <code>Book</code> and its associated copies (<code>BookInstance</code>) in parallel.\n  If no matching book is found an Error object is returned with a \"404: Not Found\" error.\n  If the book is found, then the retrieved database information is rendered using the \"book_detail\" template.\n  Since the key 'title' is used to give name to the webpage (as defined in the header in 'layout.pug'), this time we are passing <code>results.book.title</code> while rendering the webpage.\n</p>"}},{"type":"prose","value":{"id":"view","title":"View","isH3":false,"content":"<p>Create <strong>/views/book_detail.pug</strong> and add the text below.</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">pug</span></p><pre class=\"brush: pug notranslate\"><code><span class=\"token keyword\">extends layout</span>\n\n<span class=\"token keyword\">block content</span>\n  <span class=\"token tag\">h1</span> <span class=\"token plain-text\">Title: #{book.title}</span>\n\n  <span class=\"token tag\">p</span> <span class=\"token plain-text\">#[strong Author:]</span>\n    <span class=\"token tag\">a<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">href</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">book<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>url</span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">#{book.author.name}</span>\n  <span class=\"token tag\">p</span> <span class=\"token plain-text\">#[strong Summary:] #{book.summary}</span>\n  <span class=\"token tag\">p</span> <span class=\"token plain-text\">#[strong ISBN:] #{book.isbn}</span>\n  <span class=\"token tag\">p</span> <span class=\"token plain-text\">#[strong Genre:]</span>\n    <span class=\"token flow-control\"><span class=\"token each\"><span class=\"token keyword\">each</span> val<span class=\"token punctuation\">,</span> index <span class=\"token keyword\">in</span></span> book<span class=\"token punctuation\">.</span>genre</span>\n      <span class=\"token tag\">a<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">href</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">val<span class=\"token punctuation\">.</span>url</span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">#{val.name}</span>\n      <span class=\"token flow-control\"><span class=\"token branch keyword\">if</span> index <span class=\"token operator\">&lt;</span> book<span class=\"token punctuation\">.</span>genre<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span></span>\n        <span class=\"token punctuation\">|</span>,\n\n  <span class=\"token tag\">div<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">style</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'margin-left:20px;margin-top:20px'</span></span><span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token tag\">h4</span> <span class=\"token plain-text\">Copies</span>\n\n    <span class=\"token flow-control\"><span class=\"token each\"><span class=\"token keyword\">each</span> val <span class=\"token keyword\">in</span></span> book_instances</span>\n      <span class=\"token tag\">hr</span>\n      <span class=\"token flow-control\"><span class=\"token branch keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Available'</span></span>\n        <span class=\"token tag\">p<span class=\"token attr-class\">.text-success</span></span> <span class=\"token plain-text\">#{val.status}</span>\n      <span class=\"token flow-control\"><span class=\"token branch keyword\">else</span> <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Maintenance'</span></span>\n        <span class=\"token tag\">p<span class=\"token attr-class\">.text-danger</span></span> <span class=\"token plain-text\">#{val.status}</span>\n      <span class=\"token flow-control\"><span class=\"token branch keyword\">else</span></span>\n        <span class=\"token tag\">p<span class=\"token attr-class\">.text-warning</span></span> <span class=\"token plain-text\">#{val.status}</span>\n      <span class=\"token tag\">p</span> <span class=\"token plain-text\">#[strong Imprint:] #{val.imprint}</span>\n      <span class=\"token flow-control\"><span class=\"token branch keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span></span>\n        <span class=\"token tag\">p</span> <span class=\"token plain-text\">#[strong Due back:] #{val.due_back}</span>\n      <span class=\"token tag\">p</span> <span class=\"token plain-text\">#[strong Id:]</span>\n        <span class=\"token tag\">a<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">href</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">val<span class=\"token punctuation\">.</span>url</span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">#{val._id}</span>\n\n    <span class=\"token flow-control\"><span class=\"token branch keyword\">else</span></span>\n      <span class=\"token tag\">p</span> <span class=\"token plain-text\">There are no copies of this book in the library.</span>\n</code></pre></div>\n<p>Almost everything in this template has been demonstrated in previous sections.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> The list of genres associated with the book is implemented in the template as below. This adds a comma after every genre associated with the book except for the last one.</p>\n  <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">pug</span></p><pre class=\"brush: pug notranslate\"><code>  <span class=\"token tag\">p</span> <span class=\"token plain-text\">#[strong Genre:]</span>\n    <span class=\"token flow-control\"><span class=\"token each\"><span class=\"token keyword\">each</span> val<span class=\"token punctuation\">,</span> index <span class=\"token keyword\">in</span></span> book<span class=\"token punctuation\">.</span>genre</span>\n      <span class=\"token tag\">a<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">href</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">val<span class=\"token punctuation\">.</span>url</span><span class=\"token punctuation\">)</span></span></span> <span class=\"token plain-text\">#{val.name}</span>\n      <span class=\"token flow-control\"><span class=\"token branch keyword\">if</span> index <span class=\"token operator\">&lt;</span> book<span class=\"token punctuation\">.</span>genre<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span></span>\n        <span class=\"token punctuation\">|</span>,\n</code></pre></div>\n</div>"}},{"type":"prose","value":{"id":"what_does_it_look_like","title":"What does it look like?","isH3":false,"content":"<p>Run the application and open your browser to <code>http://localhost:3000/</code>. Select the <em>All books</em> link, then select one of the books. If everything is set up correctly, your page should look something like the following screenshot.</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page/locallibary_express_book_detail.png\" alt=\"Book Detail Page - Express Local Library site\" width=\"1491\" height=\"765\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<ul>\n  <li>Return to <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a>.</li>\n  <li>Proceed to the next subarticle of part 5: <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page\">Author detail page</a>.</li>\n</ul>"}}],"toc":[{"text":"Controller","id":"controller"},{"text":"View","id":"view"},{"text":"What does it look like?","id":"what_does_it_look_like"},{"text":"Next steps","id":"next_steps"}],"summary":"The Book detail page needs to display the information for a specific Book (identified using its automatically generated _id field value), along with information about each associated copy in the library (BookInstance). Wherever we display an author, genre, or book instance, these should be linked to the associated detail page for that item.","popularity":0.002,"modified":"2023-07-03T10:12:35.000Z","source":{"folder":"en-us/learn/server-side/express_nodejs/displaying_data/book_detail_page","github_url":"https://github.com/mdn/content/blob/main/files/en-us/learn/server-side/express_nodejs/displaying_data/book_detail_page/index.md","last_commit_url":"https://github.com/mdn/content/commit/bb026bcb88b7f45374d602301b7b0db5a49ff303","filename":"index.md"},"short_title":"Book detail page","parents":[{"uri":"/en-US/docs/Learn","title":"Guides"},{"uri":"/en-US/docs/Learn/Server-side","title":"Server-side website programming"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express Tutorial Part 5: Displaying library data"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page","title":"Book detail page"}],"pageTitle":"Book detail page - Learn web development | MDN","noIndexing":false}}