{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Creating our first Vue component","mdn_url":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component","locale":"en-US","native":"English (US)","summary":"And that will do for this article. At this point we have a nicely-working ToDoItem component that can be passed a label to display, will store its checked state, and will be rendered with a unique id each time it is called. You can check if the unique ids are working by temporarily adding more <to-do-item></to-do-item> calls into App.vue, and then checking their rendered output with your browser's DevTools.","popularity":0.0094,"modified":"2023-09-08T01:05:56.000Z","source":{"folder":"en-us/learn/tools_and_testing/client-side_javascript_frameworks/vue_first_component","github_url":"https://github.com/mdn/content/blob/main/files/en-us/learn/tools_and_testing/client-side_javascript_frameworks/vue_first_component/index.md","last_commit_url":"https://github.com/mdn/content/commit/6aa664dc5ccb5edf0897f99ad5feb59325dff831","filename":"index.md"},"short_title":"Creating our first Vue component","parents":[{"uri":"/en-US/docs/Learn","title":"Guides"},{"uri":"/en-US/docs/Learn/Tools_and_testing","title":"Tools and testing"},{"uri":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks","title":"Understanding client-side JavaScript frameworks"},{"uri":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component","title":"Creating our first Vue component"}],"pageTitle":"Creating our first Vue component - Learn web development | MDN","noIndexing":false,"hash":"fad57acaadfc4d2a377d9309a056890fff3a363c889c3fd2a7d4a94e1dfa3075"}