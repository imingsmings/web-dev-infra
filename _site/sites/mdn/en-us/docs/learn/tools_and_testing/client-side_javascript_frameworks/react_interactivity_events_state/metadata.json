{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"React interactivity: Events and state","mdn_url":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state","locale":"en-US","native":"English (US)","summary":"That's enough for one article. Here we've given you the lowdown on how React deals with events and handles state, and implemented functionality to add tasks, delete tasks, and toggle tasks as completed. We are nearly there. In the next article we'll implement functionality to edit existing tasks and filter the list of tasks between all, completed, and incomplete tasks. We'll look at conditional UI rendering along the way.","popularity":0.0199,"modified":"2023-09-08T01:05:56.000Z","source":{"folder":"en-us/learn/tools_and_testing/client-side_javascript_frameworks/react_interactivity_events_state","github_url":"https://github.com/mdn/content/blob/main/files/en-us/learn/tools_and_testing/client-side_javascript_frameworks/react_interactivity_events_state/index.md","last_commit_url":"https://github.com/mdn/content/commit/6aa664dc5ccb5edf0897f99ad5feb59325dff831","filename":"index.md"},"short_title":"React interactivity: Events and state","parents":[{"uri":"/en-US/docs/Learn","title":"Guides"},{"uri":"/en-US/docs/Learn/Tools_and_testing","title":"Tools and testing"},{"uri":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks","title":"Understanding client-side JavaScript frameworks"},{"uri":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state","title":"React interactivity: Events and state"}],"pageTitle":"React interactivity: Events and state - Learn web development | MDN","noIndexing":false,"hash":"0fc45a19dac4277dad677b7cec8e2f1124b2e416c185d9b1673ccc8c6f5ce901"}