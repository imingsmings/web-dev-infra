{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Ember Interactivity: Footer functionality, conditional rendering","mdn_url":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web\"><strong>Complete beginners start here!</strong></a></li><li><details><summary>Getting started with the web</summary><ol><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web\">Getting started with the web</a></li><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Installing basic software</a></li><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">What will your website look like?</a></li><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Dealing with files</a></li><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML basics</a></li><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS basics</a></li><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publishing your website</a></li><li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">How the web works</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/HTML\"><strong>HTML — Structuring the web</strong></a></li><li><details><summary>Introduction to HTML</summary><ol><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML\">Introduction to HTML</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Getting started with HTML</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">What's in the head? Metadata in HTML</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML text fundamentals</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Creating hyperlinks</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Advanced text formatting</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Document and website structure</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Debugging HTML</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Marking up a letter</a></li><li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Structuring a page of content</a></li></ol></details></li><li><details><summary>Multimedia and embedding</summary><ol><li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding\">Multimedia and embedding</a></li><li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Images in HTML</a></li><li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Video and audio content</a></li><li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">From object to iframe — other embedding technologies</a></li><li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adding vector graphics to the web</a></li><li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Responsive images</a></li><li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Mozilla splash page</a></li></ol></details></li><li><details><summary>HTML tables</summary><ol><li><a href=\"/en-US/docs/Learn/HTML/Tables\">HTML tables</a></li><li><a href=\"/en-US/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li><li><a href=\"/en-US/docs/Learn/HTML/Tables/Advanced\">HTML table advanced features and accessibility</a></li><li><a href=\"/en-US/docs/Learn/HTML/Tables/Structuring_planet_data\">Structuring planet data</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/CSS\"><strong>CSS — Styling the web</strong></a></li><li><details><summary>CSS first steps</summary><ol><li><a href=\"/en-US/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li><li><a href=\"/en-US/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li><li><a href=\"/en-US/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li><li><a href=\"/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li><li><a href=\"/en-US/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li><li><a href=\"/en-US/docs/Learn/CSS/First_steps/Styling_a_biography_page\">Styling a biography page</a></li></ol></details></li><li><details><summary>CSS building blocks</summary><ol><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks\">CSS building blocks</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors/Type_Class_and_ID_Selectors\">Type, class, and ID selectors</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors/Attribute_selectors\">Attribute selectors</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements\">Pseudo-classes and pseudo-elements</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors/Combinators\">Combinators</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade, specificity, and inheritance</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_layers\">Cascade layers</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\">CSS values and units</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Fundamental_CSS_comprehension\">Fundamental CSS comprehension</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Creating_fancy_letterheaded_paper\">Creating fancy letterheaded paper</a></li><li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/A_cool_looking_box\">A cool-looking box</a></li></ol></details></li><li><details><summary>Styling text</summary><ol><li><a href=\"/en-US/docs/Learn/CSS/Styling_text\">CSS styling text</a></li><li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamental text and font styling</a></li><li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_lists\">Styling lists</a></li><li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_links\">Styling links</a></li><li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Web_fonts\">Web fonts</a></li><li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Typesetting a community school homepage</a></li></ol></details></li><li><details><summary>CSS layout</summary><ol><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout\">CSS layout</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Floats\">Floats</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Positioning\">Positioning</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column layout</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy layout methods</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting older browsers</a></li><li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental layout comprehension</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/JavaScript\"><strong>JavaScript — Dynamic client-side scripting</strong></a></li><li><details><summary>JavaScript first steps</summary><ol><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps\">JavaScript First Steps</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">What is JavaScript?</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/A_first_splash\">A first splash into JavaScript</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong\">What went wrong? Troubleshooting JavaScript</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Variables\">Storing the information you need — Variables</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Math\">Basic math in JavaScript — numbers and operators</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Strings\">Handling text — strings in JavaScript</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Useful string methods</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Arrays\">Arrays</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Silly story generator</a></li></ol></details></li><li><details><summary>JavaScript building blocks</summary><ol><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — conditionals</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Functions\">Functions — reusable blocks of code</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Image gallery</a></li></ol></details></li><li><details><summary>Introducing JavaScript objects</summary><ol><li><a href=\"/en-US/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">JavaScript object basics</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Objects/JSON\">Working with JSON</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Adding features to our bouncing balls demo</a></li></ol></details></li><li><details><summary>Asynchronous JavaScript</summary><ol><li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Promises\">How to use promises</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Implementing_a_promise-based_API\">How to implement a promise-based API</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing_workers\">Introducing workers</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Sequencing_animations\">Sequencing animations</a></li></ol></details></li><li><details><summary>Client-side web APIs</summary><ol><li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third-party APIs</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and Audio APIs</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li><li><details><summary>Core forms learning pathway</summary><ol><li><a href=\"/en-US/docs/Learn/Forms\">Web forms — Working with user data</a></li><li><a href=\"/en-US/docs/Learn/Forms/Your_first_form\">Your first form</a></li><li><a href=\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li><li><a href=\"/en-US/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li><li><a href=\"/en-US/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li><li><a href=\"/en-US/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li><li><a href=\"/en-US/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li><li><a href=\"/en-US/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li><li><a href=\"/en-US/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li><li><a href=\"/en-US/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li><li><a href=\"/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li></ol></details></li><li><details><summary>Advanced forms articles</summary><ol><li><a href=\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li><li><a href=\"/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li><li><a href=\"/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li><li><a href=\"/en-US/docs/Learn/Forms/HTML_forms_in_legacy_browsers\">HTML forms in legacy browsers</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li><li><details><summary>Accessibility guides</summary><ol><li><a href=\"/en-US/docs/Learn/Accessibility\">Accessibility</a></li><li><a href=\"/en-US/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li><li><a href=\"/en-US/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li><li><a href=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li><li><a href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li><li><a href=\"/en-US/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li><li><a href=\"/en-US/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li><li><a href=\"/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/Performance\"><strong>Performance — Making websites fast and responsive</strong></a></li><li><details><summary>Performance guides</summary><ol><li><a href=\"/en-US/docs/Learn/Performance\">Web performance</a></li><li><a href=\"/en-US/docs/Learn/Performance/why_web_performance\">The \"why\" of web performance</a></li><li><a href=\"/en-US/docs/Learn/Performance/What_is_web_performance\">What is web performance?</a></li><li><a href=\"/en-US/docs/Learn/Performance/Perceived_performance\">Perceived performance</a></li><li><a href=\"/en-US/docs/Learn/Performance/Measuring_performance\">Measuring performance</a></li><li><a href=\"/en-US/docs/Learn/Performance/Multimedia\">Multimedia: Images</a></li><li><a href=\"/en-US/docs/Learn/Performance/video\">Multimedia: video</a></li><li><a href=\"/en-US/docs/Learn/Performance/JavaScript\">JavaScript performance optimization</a></li><li><a href=\"/en-US/docs/Learn/Performance/HTML\">HTML performance optimization</a></li><li><a href=\"/en-US/docs/Learn/Performance/CSS\">CSS performance optimization</a></li><li><a href=\"/en-US/docs/Learn/Performance/business_case_for_performance\">The business case for web performance</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/MathML\"><strong>MathML — Writing mathematics with MathML</strong></a></li><li><details><summary>MathML first steps</summary><ol><li><a href=\"/en-US/docs/Learn/MathML/First_steps\">MathML first steps overview</a></li><li><a href=\"/en-US/docs/Learn/MathML/First_steps/Getting_started\">Getting started with MathML</a></li><li><a href=\"/en-US/docs/Learn/MathML/First_steps/Text_containers\">MathML Text Containers</a></li><li><a href=\"/en-US/docs/Learn/MathML/First_steps/Fractions_and_roots\">MathML fractions and roots</a></li><li><a href=\"/en-US/docs/Learn/MathML/First_steps/Scripts\">MathML scripted elements</a></li><li><a href=\"/en-US/docs/Learn/MathML/First_steps/Tables\">MathML tables</a></li><li><a href=\"/en-US/docs/Learn/MathML/First_steps/Three_famous_mathematical_formulas\">Three famous mathematical formulas</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/../Games\"><strong>Games — Developing games for the web</strong></a></li><li><details><summary>Guides and tutorials</summary><ol><li><a href=\"/en-US/docs/Games/Introduction\">Introduction to game development for the Web</a></li><li><a href=\"/en-US/docs/Games/Techniques\">Techniques for game development</a></li><li><a href=\"/en-US/docs/Games/Tutorials\">Tutorials</a></li><li><a href=\"/en-US/docs/Games/Publishing_games\">Publishing games</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing\"><strong>Tools and testing</strong></a></li><li><details><summary>Client-side web development tools</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Understanding client-side web development tools</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li></ol></details></li><li><details><summary>Introduction to client-side frameworks</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Introduction to client-side frameworks</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li></ol></details></li><li><details><summary>React</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li></ol></details></li><li><details open=\"\"><summary>Ember</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li><li><em><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\" aria-current=\"page\">Ember Interactivity: Footer functionality, conditional rendering</a></em></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li></ol></details></li><li><details><summary>Vue</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering\">Vue conditional rendering: editing existing todos</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li></ol></details></li><li><details><summary>Svelte</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte to-do list app</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript\">TypeScript support in Svelte</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li></ol></details></li><li><details><summary>Angular</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li></ol></details></li><li><details><summary>Git and GitHub</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub</a></li></ol></details></li><li><details><summary>Cross browser testing</summary><ol><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\">Cross browser testing</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross-browser testing</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementing feature detection</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li><li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/Server-side\"><strong>Server-side website programming</strong></a></li><li><details><summary>First steps</summary><ol><li><a href=\"/en-US/docs/Learn/Server-side/First_steps\">Server-side website programming first steps</a></li><li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Introduction\">Introduction to the server side</a></li><li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\">Client-Server Overview</a></li><li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Web_frameworks\">Server-side web frameworks</a></li><li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Website_security\">Website security</a></li></ol></details></li><li><details><summary>Django web framework (Python)</summary><ol><li><a href=\"/en-US/docs/Learn/Server-side/Django\">Django Web Framework (Python)</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Introduction\">Django introduction</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/development_environment\">Setting up a Django development environment</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Django Tutorial: The Local Library website</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/skeleton_website\">Django Tutorial Part 2: Creating a skeleton website</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Models\">Django Tutorial Part 3: Using models</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Admin_site\">Django Tutorial Part 4: Django admin site</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Home_page\">Django Tutorial Part 5: Creating our home page</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Generic_views\">Django Tutorial Part 6: Generic list and detail views</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Sessions\">Django Tutorial Part 7: Sessions framework</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Authentication\">Django Tutorial Part 8: User authentication and permissions</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Forms\">Django Tutorial Part 9: Working with forms</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Testing\">Django Tutorial Part 10: Testing a Django web application</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Django Tutorial Part 11: Deploying Django to production</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/web_application_security\">Django web application security</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Django/django_assessment_blog\">Assessment: DIY Django mini blog</a></li></ol></details></li><li><details><summary>Express Web Framework (Node.js/JavaScript)</summary><ol><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs\">Express web framework (Node.js/JavaScript)</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node development environment</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express Tutorial: The Local Library website</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a Database (with Mongoose)</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li><li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li></ol></details></li><li><a href=\"/en-US/docs/Learn/Common_questions\"><strong>Further resources</strong></a></li><li><details><summary>Common questions</summary><ol><li><a href=\"/en-US/docs/Learn/Common_questions\">Common questions</a></li><li><a href=\"/en-US/docs/Learn/HTML/Howto\">Use HTML to solve common problems</a></li><li><a href=\"/en-US/docs/Learn/CSS/Howto\">Use CSS to solve common problems</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Howto\">Solve common problems in your JavaScript code</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics\">Web mechanics</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup\">Tools and setup</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Design_and_accessibility\">Design and accessibility</a></li></ol></details></li></ol>","sidebarMacro":"LearnSidebar","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\"><span class=\"button-wrap\"> Previous </span></a></li>\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\"><span class=\"button-wrap\"> Overview: Client-side JavaScript frameworks</span></a></li>\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\"><span class=\"button-wrap\"> Next  </span></a></li>\n</ul>\n<p>Now it's time to start tackling the footer functionality in our app. Here we'll get the todo counter to update to show the correct number of todos still to complete, and correctly apply styling to completed todos (i.e. where the checkbox has been checked). We'll also wire up our \"Clear completed\" button. Along the way, we'll learn about using conditional rendering in our templates.</p>\n<figure class=\"table-container\"><table>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Prerequisites:</th>\n      <td>\n        <p>\n          At minimum, it is recommended that you are familiar with the core\n          <a href=\"/en-US/docs/Learn/HTML\">HTML</a>,\n          <a href=\"/en-US/docs/Learn/CSS\">CSS</a>, and\n          <a href=\"/en-US/docs/Learn/JavaScript\">JavaScript</a> languages, and\n          have knowledge of the\n          <a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">terminal/command line</a>.\n        </p>\n        <p>\n          A deeper understanding of modern JavaScript features (such as classes,\n          modules, etc.), will be extremely beneficial, as Ember makes heavy use\n          of them.\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Objective:</th>\n      <td>\n        To continue our learning about components classes, start looking at\n        conditional rendering, and wire up some of our footer functionality.\n      </td>\n    </tr>\n  </tbody>\n</table></figure>"}},{"type":"prose","value":{"id":"connecting_the_behavior_in_the_footer","title":"Connecting the behavior in the footer","isH3":false,"content":"<p>To get the footer working, we need to implement the following three areas of functionality:</p>\n<ul>\n  <li>A pending todo counter.</li>\n  <li>Filters for all, active, and completed todos.</li>\n  <li>A button to clear the completed todos.</li>\n</ul>\n<ol>\n  <li>Because we need access to our service from the footer component, we need to generate a class for the footer. Enter the following terminal command to do so:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">bash</span></p><pre class=\"brush: bash notranslate\"><code>ember generate component-class footer\n</code></pre></div>\n  </li>\n  <li>Next, go and find the newly-created <code>todomvc/app/components/footer.js</code> file and update it to the following:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">\"@glimmer/component\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> inject <span class=\"token keyword\">as</span> service <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@ember/service\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FooterComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todo-data\"</span><span class=\"token punctuation\">)</span> todos<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </li>\n  <li>\n    Now we need to go back to our <code>todo-data.js</code> file and add some functionality that will allow us to return the number of incomplete todos (useful for showing how many are left), and clear the completed todos out of the list (which is what the \"Clear completed\" functionality needs).\n    In <code>todo-data.js</code>, add the following getter underneath the existing <code>all()</code> getter to define what the incomplete todos actually are:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">get</span> <span class=\"token function\">incomplete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">filterBy</span><span class=\"token punctuation\">(</span><span class=\"token string\">'isCompleted'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>Using Ember's <a href=\"https://api.emberjs.com/ember/4.2/classes/ArrayProxy/methods/filterBy?anchor=filterBy\" class=\"external\" target=\"_blank\"><code>ArrayProxy.filterBy()</code></a> method, we're able to easily filter Objects in our array based on simple equals conditions. Here we're asking for all the todo items where the <code>isCompleted</code> property is equal to <code>false</code>, and because <code>isCompleted</code> is <code>@tracked</code> in our <code>Todo</code> object, this getter will re-compute when the value changes on an Object in the array.\n  </li>\n  <li>Next, add the following action underneath the existing <code>add(text)</code> action:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>@action\n<span class=\"token function\">clearCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todos <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>incomplete<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>This is rather nice for clearing the todos — we just need to set the <code>todos</code> array to equal the list of incomplete todos.\n  </li>\n  <li>Finally, we need to make use of this new functionality in our <code>footer.hbs</code> template. Go to this file now.</li>\n  <li>First of all, replace this line:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">/</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span> <span class=\"token variable\">todos</span> <span class=\"token variable\">left</span>\n</code></pre></div>With this, which populates the incomplete number with the length of the <code>incomplete</code> array:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">incomplete</span><span class=\"token punctuation\">.</span><span class=\"token variable\">length</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">/</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span> <span class=\"token variable\">todos</span> <span class=\"token variable\">left</span>\n</code></pre></div>\n  </li>\n  <li>Next, replace this:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">button</span> <span class=\"token variable\">type</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"button\"</span> <span class=\"token variable\">class</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"clear-completed\"</span><span class=\"token punctuation\">&gt;</span>\n</code></pre></div>With this:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">button</span> <span class=\"token variable\">type</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"button\"</span> <span class=\"token variable\">class</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"clear-completed\"</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token variable\">on</span> <span class=\"token string\">'click'</span> <span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">clearCompleted</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">&gt;</span>\n</code></pre></div>\n  </li>\n</ol>\n<p>\n  So now when the button is clicked, the <code>clearCompleted()</code> action we added earlier is run.\n  However, if you try to click the \"Clear Completed\" button now, it won't appear to do anything, because there is currently no way to \"complete\" a todo. We need to wire up the <code>todo.hbs</code> template to the service, so that checking the relevant checkbox changes the state of each todo. We'll do that next.\n</p>"}},{"type":"prose","value":{"id":"the_todotodos_plural_problem","title":"The todo/todos plural problem","isH3":false,"content":"<p>The above is fine, but we have another small issue to contend with. The \"todos left\" indicator always says \"x todos left\", even when there is only one todo left, which is bad grammar!</p>\n<p>To fix this, we need to update this part of the template to include some conditional rendering. In Ember, you can conditionally render parts of the template using <a href=\"https://guides.emberjs.com/v3.18.0/components/conditional-content/\" class=\"external\" target=\"_blank\">conditional content</a>; a simple block example looks something like this:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token delimiter punctuation\">{{</span><span class=\"token block keyword\">#if</span> <span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">thingIsTrue</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token variable\">Content</span> <span class=\"token variable\">for</span> <span class=\"token variable\">the</span> <span class=\"token variable\">block</span> <span class=\"token variable\">form</span> <span class=\"token variable\">of</span> <span class=\"token string\">\"if\"</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">/</span><span class=\"token variable\">if</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>So let's try replacing this part of <code>footer.hbs</code>:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">incomplete</span><span class=\"token punctuation\">.</span><span class=\"token variable\">length</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">/</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span> <span class=\"token variable\">todos</span> <span class=\"token variable\">left</span>\n</code></pre></div>\n<p>with the following:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">incomplete</span><span class=\"token punctuation\">.</span><span class=\"token variable\">length</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">/</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">#</span><span class=\"token variable\">if</span> <span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">incomplete</span><span class=\"token punctuation\">.</span><span class=\"token variable\">length</span> <span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token variable\">todo</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token variable\">else</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token variable\">todos</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">/</span><span class=\"token variable\">if</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token variable\">left</span>\n</code></pre></div>\n<p>This will give us an error, however — in Ember, these simple if statements can currently only test for a truthy/falsy value, not a more complex expression such as a comparison. To fix this, we'll have to add a getter to <code>todo-data.js</code> to return the result of <code>this.incomplete.length === 1</code>, and then call that in our template.</p>\n<p>Add the following new getter to <code>todo-data.js</code>, just below the existing getters. Note that here we need <code>this.incomplete.length</code>, not <code>this.todos.incomplete.length</code>, because we are doing this inside the service, where the <code>incomplete()</code> getter is available directly (in the template, the contents of the service has been made available as <code>todos</code> via the <code>@service('todo-data') todos;</code> line inside the footer class, hence it being <code>this.todos.incomplete.length</code> there).</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">get</span> <span class=\"token function\">todoCountIsOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>incomplete<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Then go back over to <code>footer.hbs</code> and update the previous template section we edited to the following:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">incomplete</span><span class=\"token punctuation\">.</span><span class=\"token variable\">length</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">/</span><span class=\"token variable\">strong</span><span class=\"token punctuation\">&gt;</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">#</span><span class=\"token variable\">if</span> <span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todoCountIsOne</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token variable\">todo</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token variable\">else</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">/</span><span class=\"token variable\">if</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token variable\">left</span>\n</code></pre></div>\n<p>Now save and test, and you'll see the correct pluralization used when you only have one todo item present!</p>\n<p>Note that this is the block form of <code>if</code> in Ember; you could also use the inline form:</p>\n<div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token delimiter punctuation\">{{</span><span class=\"token variable\">if</span> <span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todoCountIsOne</span> <span class=\"token string\">\"todo\"</span> <span class=\"token string\">\"todos\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"completing_todos","title":"Completing todos","isH3":false,"content":"<p>As with the other components, we need a class to access the service.</p>"}},{"type":"prose","value":{"id":"creating_a_todo_class","title":"Creating a todo class","isH3":true,"content":"<ol>\n  <li>Run the following command in your terminal:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">bash</span></p><pre class=\"brush: bash notranslate\"><code>ember generate component-class todo\n</code></pre></div>\n  </li>\n  <li>Now go to the newly-created <code>todomvc/app/components/todo.js</code> file and update the contents to look like so, to give the todo component access to the service:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">import</span> Component <span class=\"token keyword\">from</span> <span class=\"token string\">\"@glimmer/component\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> inject <span class=\"token keyword\">as</span> service <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@ember/service\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  @<span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todo-data\"</span><span class=\"token punctuation\">)</span> todos<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </li>\n  <li>Next, go back again to our <code>todo-data.js</code> service file and add the following action just below the previous ones, which will allow us to toggle a completion state for each todo:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">js</span></p><pre class=\"brush: js notranslate\"><code>@action\n<span class=\"token function\">toggleCompletion</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  todo<span class=\"token punctuation\">.</span>isCompleted <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>todo<span class=\"token punctuation\">.</span>isCompleted<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"updating_the_template_to_show_completed_state","title":"Updating the template to show completed state","isH3":true,"content":"<p>Finally, we will edit the <code>todo.hbs</code> template such that the checkbox's value is now bound to the <code>isCompleted</code> property on the todo, and so that on change, the <code>toggleCompletion()</code> method on the todo service is invoked.</p>\n<ol>\n  <li>In <code>todo.hbs</code>, first find the following line:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">li</span><span class=\"token punctuation\">&gt;</span>\n</code></pre></div>And replace it with this — you'll notice that here we're using some more conditional content to add the class value if appropriate:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">li</span> <span class=\"token variable\">class</span><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">if</span> <span class=\"token punctuation\">@</span><span class=\"token variable\">todo</span><span class=\"token punctuation\">.</span><span class=\"token variable\">isCompleted</span> <span class=\"token string\">'completed'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">&gt;</span>\n</code></pre></div>\n  </li>\n  <li>Next, find the following line:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">input</span>\n  <span class=\"token variable\">aria-label</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"Toggle the completion of this todo\"</span>\n  <span class=\"token variable\">class</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"toggle\"</span>\n  <span class=\"token variable\">type</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"checkbox\"</span>\n<span class=\"token punctuation\">&gt;</span>\n</code></pre></div>And replace it with this:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">hbs</span></p><pre class=\"brush: hbs notranslate\"><code><span class=\"token punctuation\">&lt;</span><span class=\"token variable\">input</span>\n  <span class=\"token variable\">class</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"toggle\"</span>\n  <span class=\"token variable\">type</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"checkbox\"</span>\n  <span class=\"token variable\">aria-label</span><span class=\"token punctuation\">=</span><span class=\"token string\">\"Toggle the completion of this todo\"</span>\n  <span class=\"token variable\">checked</span><span class=\"token punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">@</span><span class=\"token variable\">todo</span><span class=\"token punctuation\">.</span><span class=\"token variable\">isCompleted</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">on</span> <span class=\"token string\">'change'</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">fn</span> <span class=\"token variable\">this</span><span class=\"token punctuation\">.</span><span class=\"token variable\">todos</span><span class=\"token punctuation\">.</span><span class=\"token variable\">toggleCompletion</span> <span class=\"token punctuation\">@</span><span class=\"token variable\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">&gt;</span>\n</code></pre></div>\n    <div class=\"notecard note\" id=\"sect1\">\n      <p><strong>Note:</strong> The above snippet uses a new Ember-specific keyword — <code>fn</code>. <code>fn</code> allows for <a href=\"https://en.wikipedia.org/wiki/Partial_application\" class=\"external\" target=\"_blank\">partial application</a>, which is similar to <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>bind</code></a>, but it never changes the invocation context; this is equivalent to using <code>bind</code> with a <code>null</code> first argument.</p>\n    </div>\n  </li>\n</ol>\n<p>Try restarting the dev server and going to <code>localhost:4200</code> again, and you'll now see that we have a fully-operational \"todos left\" counter and Clear button:</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer/todos-being-marked-completed-and-cleared.gif\" alt=\"todos being marked as complete, and cleared\" width=\"854\" height=\"731\" loading=\"lazy\">\n</p>\n<p>If you're asking yourself why we're not just doing the toggle on the component, since the function is entirely self-contained and not at all needing anything from the service, then you are 100% right to ask that question! However, because *eventually*, we'll want to persist or sync all changes to the todos list to <a href=\"/en-US/docs/Web/API/Window/localStorage\">local storage</a> (see the <a href=\"https://nullvoxpopuli.github.io/ember-todomvc-tutorial/\" class=\"external\" target=\"_blank\">final version of the app</a>), it makes sense to have all persistent-state-changing operations be in the same place.</p>"}},{"type":"prose","value":{"id":"summary","title":"Summary","isH3":false,"content":"<p>That's enough for now. At this point, not only can we mark todos as complete, but we can clear them as well. Now the only thing left to wire up the footer are the three filtering links: \"All\", \"Active\", and \"Completed\". We'll do that in the next article, using Routing.</p><ul class=\"prev-next\">\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\"><span class=\"button-wrap\"> Previous </span></a></li>\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\"><span class=\"button-wrap\"> Overview: Client-side JavaScript frameworks</span></a></li>\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\"><span class=\"button-wrap\"> Next  </span></a></li>\n</ul>"}}],"toc":[{"text":"Connecting the behavior in the footer","id":"connecting_the_behavior_in_the_footer"},{"text":"The todo/todos plural problem","id":"the_todotodos_plural_problem"},{"text":"Completing todos","id":"completing_todos"},{"text":"Summary","id":"summary"}],"summary":"That's enough for now. At this point, not only can we mark todos as complete, but we can clear them as well. Now the only thing left to wire up the footer are the three filtering links: \"All\", \"Active\", and \"Completed\". We'll do that in the next article, using Routing.","popularity":0.0008,"modified":"2023-10-10T16:42:00.000Z","source":{"folder":"en-us/learn/tools_and_testing/client-side_javascript_frameworks/ember_conditional_footer","github_url":"https://github.com/mdn/content/blob/main/files/en-us/learn/tools_and_testing/client-side_javascript_frameworks/ember_conditional_footer/index.md","last_commit_url":"https://github.com/mdn/content/commit/8b6d3ebc5f4e854e5f78d354aa39b2e2f4cc9f63","filename":"index.md"},"short_title":"Ember Interactivity: Footer functionality, conditional rendering","parents":[{"uri":"/en-US/docs/Learn","title":"Guides"},{"uri":"/en-US/docs/Learn/Tools_and_testing","title":"Tools and testing"},{"uri":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks","title":"Understanding client-side JavaScript frameworks"},{"uri":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer","title":"Ember Interactivity: Footer functionality, conditional rendering"}],"pageTitle":"Ember Interactivity: Footer functionality, conditional rendering - Learn web development | MDN","noIndexing":false}}