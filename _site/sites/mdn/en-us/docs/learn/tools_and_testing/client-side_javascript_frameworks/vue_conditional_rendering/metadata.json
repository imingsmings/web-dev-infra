{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Vue conditional rendering: editing existing todos","mdn_url":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering","locale":"en-US","native":"English (US)","summary":"This article has been fairly intense, and we covered a lot here. We've now got edit and delete functionality in our app, which is fairly exciting. We are nearing the end of our Vue series now. The last bit of functionality to look at is focus management, or put another way, how we can improve our app's keyboard accessibility.","popularity":0.0022,"modified":"2023-07-03T10:12:35.000Z","source":{"folder":"en-us/learn/tools_and_testing/client-side_javascript_frameworks/vue_conditional_rendering","github_url":"https://github.com/mdn/content/blob/main/files/en-us/learn/tools_and_testing/client-side_javascript_frameworks/vue_conditional_rendering/index.md","last_commit_url":"https://github.com/mdn/content/commit/bb026bcb88b7f45374d602301b7b0db5a49ff303","filename":"index.md"},"short_title":"Vue conditional rendering: editing existing todos","parents":[{"uri":"/en-US/docs/Learn","title":"Guides"},{"uri":"/en-US/docs/Learn/Tools_and_testing","title":"Tools and testing"},{"uri":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks","title":"Understanding client-side JavaScript frameworks"},{"uri":"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering","title":"Vue conditional rendering: editing existing todos"}],"pageTitle":"Vue conditional rendering: editing existing todos - Learn web development | MDN","noIndexing":false,"hash":"e4af508c0cb99bea3d375b777782b751d479a1e4ea72695b156ae78cbb1a8894"}