{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"How do you set up a local testing server?","mdn_url":"/en-US/docs/Learn/Common_questions/Tools_and_setup/set_up_a_local_testing_server","locale":"en-US","native":"English (US)","sidebarHTML":"\n<ol><li><a href=\"/en-US/docs/Learn/Common_questions/Design_and_accessibility\">Design and accessibility</a><ol><li><a href=\"/en-US/docs/Learn/Common_questions/Design_and_accessibility\">Design and accessibility</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Design_and_accessibility/Common_web_layouts\">What do common web layouts contain?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Design_and_accessibility/Design_for_all_types_of_users\">How can we design for all types of users?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Design_and_accessibility/HTML_features_for_accessibility\">What HTML features promote accessibility?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Design_and_accessibility/Thinking_before_coding\">How do I start to design my website?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Design_and_accessibility/What_is_accessibility\">What is accessibility?</a></li></ol></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup\">Tools and setup</a><ol><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup\">Tools and setup</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/Available_text_editors\">What text editors are available?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/Checking_that_your_web_site_is_working_properly\">How do you make sure your website works properly?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/How_do_you_host_your_website_on_Google_App_Engine\">How do you host your website on Google App Engine?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/How_much_does_it_cost\">How much does it cost to do something on the Web?</a></li><li><em><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/set_up_a_local_testing_server\" aria-current=\"page\">How do you set up a local testing server?</a></em></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/Upload_files_to_a_web_server\">How do you upload your files to a web server?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/Using_GitHub_pages\">How do I use GitHub Pages?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/What_are_browser_developer_tools\">What are browser developer tools?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Tools_and_setup/What_software_do_I_need\">What software do I need to build a website?</a></li></ol></li><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics\">Web mechanics</a><ol><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics\">Web mechanics</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics/How_does_the_Internet_work\">How does the Internet work?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics/Pages_sites_servers_and_search_engines\">What is the difference between webpage, website, web server, and search engine?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics/What_are_hyperlinks\">What are hyperlinks?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_domain_name\">What is a Domain Name?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL\">What is a URL?</a></li><li><a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_web_server\">What is a web server?</a></li></ol></li></ol>\n","sidebarMacro":"QuickLinksWithSubpages","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>This article explains how to set up a simple local testing server on your machine, and the basics of how to use it.</p>\n<figure class=\"table-container\"><table>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Prerequisites:</th>\n      <td>\n        You need to first know\n        <a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics/How_does_the_Internet_work\">how the Internet works</a>, and\n        <a href=\"/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_web_server\">what a Web server is</a>.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Objective:</th>\n      <td>You will learn how to set up a local testing server.</td>\n    </tr>\n  </tbody>\n</table></figure>"}},{"type":"prose","value":{"id":"local_files_vs._remote_files","title":"Local files vs. remote files","isH3":false,"content":"<p>Throughout most of the learning area, we tell you to just open your examples directly in a browser — this can be done by double-clicking the HTML file, dragging and dropping it into the browser window, or choosing <em>File</em> &gt; <em>Open…</em> and navigating to the HTML file. There are many ways to achieve this.</p>\n<p>If the web address path starts with <code>file://</code> followed by the path to the file on your local hard drive, a local file is being used. In contrast, if you view one of our examples hosted on GitHub (or an example on some other remote server), the web address will start with <code>http://</code> or <code>https://</code>, to show that the file has been received via HTTP.</p>"}},{"type":"prose","value":{"id":"the_problem_with_testing_local_files","title":"The problem with testing local files","isH3":false,"content":"<p>Some examples won't run if you open them as local files. This can be due to a variety of reasons, the most likely being:</p>\n<ul>\n  <li><strong>They feature asynchronous requests</strong>. Some browsers (including Chrome) will not run async requests (see <a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a>) if you just run the example from a local file. This is because of security restrictions (for more on web security, read <a href=\"/en-US/docs/Learn/Server-side/First_steps/Website_security\">Website security</a>).</li>\n  <li><strong>They feature a server-side language</strong>. Server-side languages (such as PHP or Python) require a special server to interpret the code and deliver the results.</li>\n  <li>\n    <strong>They include other files</strong>. Browsers commonly treat requests to load resources using the <code>file://</code> schema as cross-origin requests.\n    So if you load a local file that includes other local files, this may trigger a <a href=\"/en-US/docs/Glossary/CORS\">CORS</a> error.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"running_a_simple_local_http_server","title":"Running a simple local HTTP server","isH3":false,"content":"<p>To get around the problem of async requests, we need to test such examples by running them through a local web server.</p>"}},{"type":"prose","value":{"id":"using_an_extension_in_your_code_editor","title":"Using an extension in your code editor","isH3":true,"content":"<p>If you only need HTML, CSS and JavaScript, and no server-side language, the easiest way may be to check for extensions in your code editor. As well as automating installation and set-up for your local HTTP server, they also integrate nicely with your code editors. Testing local files in an HTTP server may be one click away.</p>\n<p>For VSCode, you can check the following free extension:</p>\n<ul>\n  <li><code>vscode-preview-server</code>. You can check it on its <a href=\"https://marketplace.visualstudio.com/items?itemName=yuichinukiyama.vscode-preview-server\" class=\"external\" target=\"_blank\">home page</a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"using_python","title":"Using Python","isH3":true,"content":"<p>Another way to achieve this is to use Python's <code>http.server</code> module.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Older versions of Python (up to version 2.7) provided a similar module named <code>SimpleHTTPServer</code>. If you are using Python 2.x, you can follow this guide by replacing all uses of <code>http.server</code> with <code>SimpleHTTPServer</code>. However, we recommend you use the latest version of Python.</p>\n</div>\n<p>To do this:</p>\n<ol>\n  <li>Install Python. If you are using Linux or macOS, it should be available on your system already. If you are a Windows user, you can get an installer from the Python homepage and follow the instructions to install it:\n    <ul>\n      <li>Go to <a href=\"https://www.python.org/\" class=\"external\" target=\"_blank\">python.org</a></li>\n      <li>Under the Download section, click the link for Python \"3.xxx\".</li>\n      <li>At the bottom of the page, click the <em>Windows Installer</em> link to download the installer file.</li>\n      <li>When it has downloaded, run it.</li>\n      <li>On the first installer page, make sure you check the \"Add Python 3.xxx to PATH\" checkbox.</li>\n      <li>Click <em>Install</em>, then click <em>Close</em> when the installation has finished.</li>\n    </ul>\n  </li>\n  <li>Open your command prompt (Windows) / terminal (macOS/ Linux). To check if Python is installed, enter the following command:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">bash</span></p><pre class=\"brush: bash notranslate\"><code>python <span class=\"token parameter variable\">-V</span>\n<span class=\"token comment\"># If the above fails, try:</span>\npython3 <span class=\"token parameter variable\">-V</span>\n<span class=\"token comment\"># Or, if the \"py\" command is available, try:</span>\npy <span class=\"token parameter variable\">-V</span>\n</code></pre></div>\n  </li>\n  <li>This should return a version number. If this is OK, navigate to the directory that your example is inside, using the <code>cd</code> command.\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">bash</span></p><pre class=\"brush: bash notranslate\"><code><span class=\"token comment\"># include the directory name to enter it, for example</span>\n<span class=\"token builtin class-name\">cd</span> Desktop\n<span class=\"token comment\"># use two dots to jump up one directory level if you need to</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n</code></pre></div>\n  </li>\n  <li>Enter the command to start up the server in that directory:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">bash</span></p><pre class=\"brush: bash notranslate\"><code><span class=\"token comment\"># If Python version returned above is 3.X</span>\n<span class=\"token comment\"># On Windows, try \"python -m http.server\" or \"py -3 -m http.server\"</span>\npython3 <span class=\"token parameter variable\">-m</span> http.server\n<span class=\"token comment\"># If Python version returned above is 2.X</span>\npython <span class=\"token parameter variable\">-m</span> SimpleHTTPServer\n</code></pre></div>\n  </li>\n  <li>By default, this will run the contents of the directory on a local web server, on port 8000. You can go to this server by going to the URL <code>localhost:8000</code> in your web browser. Here you'll see the contents of the directory listed — click the HTML file you want to run.</li>\n</ol>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> If you already have something running on port 8000, you can choose another port by running the server command followed by an alternative port number, e.g. <code>python3 -m http.server 7800</code> (Python 3.x) or <code>python -m SimpleHTTPServer 7800</code> (Python 2.x). You can then access your content at <code>localhost:7800</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"running_server-side_languages_locally","title":"Running server-side languages locally","isH3":false,"content":"<p>Python's <code>http.server</code> (or <code>SimpleHTTPServer</code> for Python 2) module is useful, but it is merely a <em>static</em> file server; it doesn't know how to run code written in languages such as Python, PHP or JavaScript. To handle them, you'll need something more — exactly what you'll need depends on the server-side language you are trying to run. Here are a few examples:</p>\n<ul>\n  <li>To run Python server-side code, you'll need to use a Python web framework. There are many popular Python web frameworks, such as Django (a <a href=\"/en-US/docs/Learn/Server-side/Django\">guide</a> is available), <a href=\"https://flask.palletsprojects.com/\" class=\"external\" target=\"_blank\">Flask</a>, and <a href=\"https://trypyramid.com\" class=\"external\" target=\"_blank\">Pyramid</a>.</li>\n  <li>To run Node.js (JavaScript) server-side code, you'll need to use raw node or a framework built on top of it. Express is a good choice — see <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript)</a>.</li>\n  <li>To run PHP server-side code, launch <a href=\"https://www.php.net/manual/en/features.commandline.webserver.php\" class=\"external\" target=\"_blank\">PHP's built-in development server</a>:\n    <div class=\"code-example\"><p class=\"example-header\"><span class=\"language-name\">bash</span></p><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> path/to/your/php/code\nphp <span class=\"token parameter variable\">-S</span> localhost:8000\n</code></pre></div>\n  </li>\n</ul>"}}],"toc":[{"text":"Local files vs. remote files","id":"local_files_vs._remote_files"},{"text":"The problem with testing local files","id":"the_problem_with_testing_local_files"},{"text":"Running a simple local HTTP server","id":"running_a_simple_local_http_server"},{"text":"Running server-side languages locally","id":"running_server-side_languages_locally"}],"summary":"This article explains how to set up a simple local testing server on your machine, and the basics of how to use it.","popularity":0.068,"modified":"2023-07-03T10:12:35.000Z","source":{"folder":"en-us/learn/common_questions/tools_and_setup/set_up_a_local_testing_server","github_url":"https://github.com/mdn/content/blob/main/files/en-us/learn/common_questions/tools_and_setup/set_up_a_local_testing_server/index.md","last_commit_url":"https://github.com/mdn/content/commit/bb026bcb88b7f45374d602301b7b0db5a49ff303","filename":"index.md"},"short_title":"How do you set up a local testing server?","parents":[{"uri":"/en-US/docs/Learn","title":"Guides"},{"uri":"/en-US/docs/Learn/Common_questions","title":"Common questions"},{"uri":"/en-US/docs/Learn/Common_questions/Tools_and_setup","title":"Tools and setup"},{"uri":"/en-US/docs/Learn/Common_questions/Tools_and_setup/set_up_a_local_testing_server","title":"How do you set up a local testing server?"}],"pageTitle":"How do you set up a local testing server? - Learn web development | MDN","noIndexing":false}}