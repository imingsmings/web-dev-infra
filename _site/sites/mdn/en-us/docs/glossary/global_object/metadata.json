{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"/en-US/docs/Glossary/interface does not exist","name":"MacroBrokenLinkError","error":{},"errorStack":"Error: /en-US/docs/Glossary/interface does not exist\n    at Object.recordNonFatalError (file:///Users/jason/Code/yari/kumascript/src/render.ts:88:13)\n    at Object.smartLink (file:///Users/jason/Code/yari/kumascript/src/api/web.ts:121:29)\n    at eval (\"/Users/jason/Code/yari/kumascript/macros/Glossary.ejs\":22:18)\n    at Glossary (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:703:17)\n    at /Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:260:40\n    at new Promise (<anonymous>)\n    at tryHandleCache (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:258:14)\n    at exports.renderFile (/Users/jason/Code/yari/node_modules/ejs/lib/ejs.js:491:10)\n    at Templates.render (file:///Users/jason/Code/yari/kumascript/src/templates.ts:55:40)\n    at render (file:///Users/jason/Code/yari/kumascript/src/render.ts:181:56)","offset":6,"line":9,"column":343,"macroName":"Glossary","sourceContext":"  | {{GlossarySidebar}}\n  | <p>A global object is an {{glossary(\"object\")}} that always exists in the {{glossary(\"global scope\")}}.</p>\n> | <p>In JavaScript, there's always a global object defined. In a web browser, when scripts create global variables defined with the <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/var\"><code>var</code></a> keyword, they're created as members of the global object. (In {{Glossary(\"Node.js\")}} this is not the case.) The global object's {{Glossary(\"interface\")}} depends on the execution context in which the script is running. For example:</p>\n                                                                                                                                                                                                                                                                                                                                                          ^\n  | <ul>\n  |   <li>In a web browser, any code which the script doesn't specifically start up as a background task has a {{domxref(\"Window\")}} as its global object. This is the vast majority of JavaScript code on the Web.</li>","fatal":false,"filepath":"/Users/jason/Code/content/files/en-us/glossary/global_object/index.md","macroSource":"{{Glossary(\"interface\")}}"}]},"title":"Global object","mdn_url":"/en-US/docs/Glossary/Global_object","locale":"en-US","native":"English (US)","summary":"A global object is an object that always exists in the global scope.","popularity":0.0134,"modified":"2023-06-08T13:19:16.000Z","source":{"folder":"en-us/glossary/global_object","github_url":"https://github.com/mdn/content/blob/main/files/en-us/glossary/global_object/index.md","last_commit_url":"https://github.com/mdn/content/commit/ada5fa5ef15eadd44b549ecf906423b4a2092f34","filename":"index.md"},"short_title":"Global object","parents":[{"uri":"/en-US/docs/Glossary","title":"MDN Web Docs Glossary: Definitions of Web-related terms"},{"uri":"/en-US/docs/Glossary/Global_object","title":"Global object"}],"pageTitle":"Global object - MDN Web Docs Glossary: Definitions of Web-related terms | MDN","noIndexing":false,"hash":"c9662105bc17f6d1dca5f5d632c36687f9eb8683455cfe5c8a12c23bd0998624"}