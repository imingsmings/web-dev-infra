{"version":3,"file":"static/js/996.a57b0c30.chunk.js","mappings":"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","sources":["document/toolbar/edit-actions.tsx","document/toolbar/flaws.tsx","document/toolbar/index.tsx","flaw-utils.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { WRITER_MODE_HOSTNAMES } from \"../../env\";\nimport { Source } from \"../../../../libs/types/document\";\n\nimport \"./edit-actions.scss\";\nimport { useLocale } from \"../../hooks\";\n\nexport function EditActions({ source }: { source: Source }) {\n  const { folder, filename, github_url } = source;\n\n  const [opening, setOpening] = useState(false);\n  const [editorOpeningError, setEditorOpeningError] = useState<Error | null>(\n    null\n  );\n\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(false);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  async function openInEditorHandler(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const filepath = `${folder}/${filename}`;\n    console.log(`Going to try to open ${filepath} in your editor`);\n    setOpening(true);\n    try {\n      const response = await fetch(`/_open?filepath=${filepath}`);\n      if (!response.ok) {\n        if (response.status >= 500) {\n          setEditorOpeningError(\n            new Error(`${response.status}: ${response.statusText}`)\n          );\n        } else {\n          const body = await response.text();\n          setEditorOpeningError(new Error(`${response.status}: ${body}`));\n        }\n      }\n    } catch (err: any) {\n      setEditorOpeningError(err);\n    }\n  }\n\n  const locale = useLocale();\n  const { \"*\": slug } = useParams();\n\n  if (!folder) {\n    return null;\n  }\n\n  // If window.location.host is 'localhost:3000` then\n  // window.location.hostname is 'localhost'\n  const isReadOnly = !WRITER_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  return (\n    <ul className=\"edit-actions\">\n      {!isReadOnly && (\n        <li>\n          <button\n            type=\"button\"\n            className=\"button\"\n            title={`Folder: ${folder}`}\n            onClick={openInEditorHandler}\n          >\n            Open in your <b>editor</b>\n          </button>\n        </li>\n      )}\n\n      <li>\n        <a\n          href={`https://developer.mozilla.org/${locale}/docs/${slug}`}\n          className=\"button\"\n        >\n          View on MDN\n        </a>\n      </li>\n\n      {!isReadOnly && (\n        <li>\n          <a\n            href={github_url.replace(\"/blob/\", \"/edit/\")}\n            className=\"button\"\n            rel=\"noopener noreferrer\"\n          >\n            Edit on <b>GitHub</b>\n          </a>\n        </li>\n      )}\n\n      {editorOpeningError ? (\n        <p className=\"error-message editor-opening-error\">\n          <b>Error opening page in your editor!</b>\n          <br />\n          <code>{editorOpeningError.toString()}</code>\n        </p>\n      ) : (\n        opening && <small>Trying to your editor now...</small>\n      )}\n    </ul>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { annotate, annotationGroup } from \"rough-notation\";\nimport { RoughAnnotation } from \"rough-notation/lib/model\";\nimport { diffWords } from \"diff\";\n\nimport { WRITER_MODE, WRITER_MODE_HOSTNAMES } from \"../../env\";\nimport { humanizeFlawName } from \"../../flaw-utils\";\nimport { useDocumentURL } from \"../hooks\";\nimport {\n  Doc,\n  BrokenLink,\n  MacroErrorMessage,\n  ImageReferenceFlaw,\n  ImageWidthFlaw,\n  GenericFlaw,\n  BadBCDQueryFlaw,\n  BadPreTagFlaw,\n  SectioningFlaw,\n  HeadingLinksFlaw,\n  TranslationDifferenceFlaw,\n  UnsafeHTMLFlaw,\n} from \"../../../../libs/types/document\";\nimport \"./flaws.scss\";\n\ninterface FlawCount {\n  name: string;\n  count: number;\n}\n\nfunction useAnnotations(genericFlaws: GenericFlaw[]) {\n  useEffect(() => {\n    const annotations: RoughAnnotation[] = [];\n    const elements: HTMLElement[] = [];\n    for (const flaw of genericFlaws) {\n      const element = document.querySelector(\n        `[data-flaw=\"${flaw.id}\"]`\n      ) as HTMLElement;\n      if (!element) {\n        console.warn(`Flaw ID '${flaw.id}' does not exist in the DOM`);\n        continue;\n      }\n      elements.push(element);\n      const annotationColor = flaw.suggestion ? \"orange\" : \"red\";\n      element.dataset.originalTitle = element.title;\n\n      element.title = flaw.suggestion\n        ? `Flaw suggestion: ${flaw.suggestion}`\n        : `Flaw explanation: ${flaw.explanation}`;\n      annotations.push(\n        annotate(element, {\n          type: \"box\",\n          color: annotationColor,\n          animationDuration: 300,\n        })\n      );\n    }\n    const ag = annotationGroup(annotations);\n    ag.show();\n\n    return () => {\n      ag.hide();\n\n      // Now, restore any 'title' attributes that were overridden.\n      for (const element of elements) {\n        if (element.dataset.originalTitle !== undefined) {\n          element.title = element.dataset.originalTitle;\n        }\n      }\n    };\n  }, [genericFlaws]);\n\n  function focus(flawID: string) {\n    const element = document.querySelector(\n      `[data-flaw=\"${flawID}\"]`\n    ) as HTMLElement;\n    if (!element) return;\n    const annotations: RoughAnnotation[] = [];\n    element.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n    });\n\n    if (element.parentElement) {\n      annotations.push(\n        annotate(element, {\n          type: \"circle\",\n          color: \"purple\",\n          animationDuration: 500,\n          strokeWidth: 2,\n          padding: 6,\n        })\n      );\n    }\n\n    if (annotations.length) {\n      const ag = annotationGroup(annotations);\n      ag.show();\n      // Only show this extra highlight temporarily\n      window.setTimeout(() => {\n        ag.hide();\n      }, 2000);\n    }\n  }\n\n  return {\n    focus,\n  };\n}\n\nconst FLAWS_HASH = \"#_flaws\";\n\nexport function ToggleDocumentFlaws({\n  doc,\n  reloadPage,\n}: {\n  doc: Doc;\n  reloadPage: () => void;\n}) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const rootElement = useRef<HTMLDivElement>(null);\n  const isInitialRender = useRef(true);\n\n  const show = location.hash === FLAWS_HASH;\n\n  useEffect(() => {\n    if (isInitialRender.current && show && rootElement.current) {\n      rootElement.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n    isInitialRender.current = false;\n  }, [show]);\n\n  function toggle() {\n    if (show) {\n      navigate(location.pathname + location.search);\n    } else {\n      navigate(location.pathname + location.search + FLAWS_HASH);\n    }\n  }\n\n  const flawsCounts = Object.entries(doc.flaws)\n    .map(([name, actualFlaws]) => ({\n      name,\n      count: actualFlaws.length,\n    }))\n    .sort((a, b) => b.count - a.count);\n\n  React.useEffect(() => {\n    const el = document.querySelector('link[rel=\"icon\"]') as HTMLLinkElement;\n    if (el) {\n      let allFixableFlaws = 0;\n      let allFlaws = 0;\n      Object.values(doc.flaws).forEach((flaws) => {\n        allFlaws += flaws.length;\n        allFixableFlaws += flaws.filter((flaw) => flaw.fixable).length;\n      });\n      el.href = !allFlaws\n        ? \"/favicon-48x48-flawless.png\"\n        : allFlaws === allFixableFlaws\n        ? \"/favicon-48x48-flaws-fixable.png\"\n        : \"/favicon-48x48-flaws.png\";\n    }\n  }, [doc.flaws]);\n\n  return (\n    <div\n      id={FLAWS_HASH.slice(1)}\n      ref={rootElement}\n      className=\"toggle-show-flaws\"\n    >\n      {flawsCounts.length > 0 ? (\n        <button type=\"button\" className=\"button\" onClick={toggle}>\n          {show ? \"Hide flaws\" : \"Show flaws\"} (\n          {flawsCounts.reduce((acc, flaw) => flaw.count + acc, 0)})\n        </button>\n      ) : (\n        <p>\n          No known flaws at the moment\n          <span role=\"img\" aria-label=\"yay!\">\n            🍾\n          </span>\n        </p>\n      )}{\" \"}\n      {show ? (\n        <Flaws doc={doc} flaws={flawsCounts} reloadPage={reloadPage} />\n      ) : (\n        <span>\n          {/* a one-liner about all the flaws */}\n          {flawsCounts\n            .map((flaw) => `${humanizeFlawName(flaw.name)}: ${flaw.count}`)\n            .join(\" + \")}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction Flaws({\n  doc,\n  flaws,\n  reloadPage,\n}: {\n  doc: Doc;\n  flaws: FlawCount[];\n  reloadPage: () => void;\n}) {\n  if (!WRITER_MODE) {\n    throw new Error(\"This shouldn't be used without WRITER_MODE=true\");\n  }\n\n  const fixableFlaws = Object.values(doc.flaws)\n    .map((flaws) => {\n      return flaws.filter(\n        (flaw) => !flaw.fixed && (flaw.fixable || flaw.externalImage)\n      );\n    })\n    .flat();\n\n  const isReadOnly = !WRITER_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  // Note! This will work on Windows. The filename can be sent to\n  // the server in POSIX style and the `open-editor` program will make\n  // this work for Windows automatically.\n  const filePath = doc.source.folder + \"/\" + doc.source.filename;\n\n  return (\n    <div id=\"document-flaws\">\n      {!!fixableFlaws.length && !isReadOnly && fixableFlaws.length > 0 && (\n        <>\n          {doc.isMarkdown && (\n            <small>\n              Automatic fixing fixable flaws is experimental for Markdown\n              documents. See{\" \"}\n              <a href=\"https://github.com/mdn/yari/issues/4333\">\n                mdn/yari#4333\n              </a>\n            </small>\n          )}\n          <FixableFlawsAction\n            count={fixableFlaws.length}\n            reloadPage={reloadPage}\n          />\n        </>\n      )}{\" \"}\n      {flaws.map((flaw) => {\n        switch (flaw.name) {\n          case \"broken_links\":\n            return (\n              <BrokenLinks\n                key=\"broken_links\"\n                sourceFilePath={filePath}\n                links={doc.flaws.broken_links as BrokenLink[]}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"bad_bcd_queries\":\n            return (\n              <BadBCDQueries\n                key=\"bad_bcd_queries\"\n                flaws={doc.flaws.bad_bcd_queries as BadBCDQueryFlaw[]}\n              />\n            );\n          case \"bad_pre_tags\":\n            return (\n              <BadPreTag\n                key=\"bad_pre_tags\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.bad_pre_tags as BadPreTagFlaw[]}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"macros\":\n            return (\n              <Macros\n                key=\"macros\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.macros as MacroErrorMessage[]}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"images\":\n            return (\n              <Images\n                key=\"images\"\n                sourceFilePath={filePath}\n                images={doc.flaws.images as ImageReferenceFlaw[]}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"image_widths\":\n            return (\n              <ImageWidths\n                key=\"image_widths\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.image_widths as ImageWidthFlaw[]}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"heading_links\":\n            return (\n              <HeadingLinks\n                key=\"heading_links\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.heading_links as HeadingLinksFlaw[]}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"unsafe_html\":\n            return (\n              <UnsafeHTML\n                key=\"unsafe_html\"\n                flaws={doc.flaws.unsafe_html as UnsafeHTMLFlaw[]}\n              />\n            );\n          case \"translation_differences\":\n            return (\n              <TranslationDifferences\n                key=\"translation_differences\"\n                flaws={\n                  doc.flaws\n                    .translation_differences as TranslationDifferenceFlaw[]\n                }\n              />\n            );\n          case \"sectioning\":\n            return (\n              <Sectioning\n                key=\"sectioning\"\n                flaws={doc.flaws.sectioning as SectioningFlaw[]}\n              />\n            );\n          default:\n            throw new Error(`Unknown flaw check '${flaw.name}'`);\n        }\n      })}\n    </div>\n  );\n}\n\nfunction FixableFlawsAction({\n  count,\n  reloadPage,\n}: {\n  count: number;\n  reloadPage: () => void;\n}) {\n  const [fixing, setFixing] = useState(false);\n  const [fixed, setFixed] = useState(false);\n  const [fixingError, setFixingError] = useState<Error | null>(null);\n\n  const documentURL = useDocumentURL();\n\n  async function fix() {\n    try {\n      const response = await fetch(\n        `/_document/fixfixableflaws?${new URLSearchParams({\n          url: documentURL,\n        }).toString()}`,\n        {\n          method: \"PUT\",\n        }\n      );\n      if (!response.ok) {\n        throw new Error(`${response.status} on ${response.url}`);\n      }\n      setFixed(true);\n    } catch (error: any) {\n      console.error(\"Error trying to fix fixable flaws\");\n\n      setFixingError(error);\n    } finally {\n      setFixing(false);\n    }\n  }\n\n  return (\n    <div>\n      {fixingError && (\n        <p style={{ color: \"red\" }}>\n          <b>Error:</b> <code>{fixingError.toString()}</code>\n        </p>\n      )}\n      <button\n        type=\"button\"\n        className=\"button\"\n        disabled={fixing}\n        onClick={async () => {\n          setFixing((prev) => !prev);\n          await fix();\n          // Add a tiny delay so you get a chance to see the \"Fixed!\" message.\n          setTimeout(() => {\n            reloadPage();\n          }, 1000);\n        }}\n      >\n        {fixing ? \"Fixing...\" : `Fix fixable flaws (${count})`}\n      </button>{\" \"}\n      {fixed && <b style={{ color: \"darkgreen\" }}>Fixed!</b>}\n    </div>\n  );\n}\n\nfunction FixableFlawBadge() {\n  return (\n    <span title=\"This flaw is fixable.\">\n      Fixable{\" \"}\n      <span role=\"img\" aria-label=\"Thumbs up\">\n        👍🏼\n      </span>\n    </span>\n  );\n}\n\nfunction ShowDiff({ before, after }: { before: string; after: string }) {\n  const diff = diffWords(before, after);\n  const bits = diff.map((part, i: number) => {\n    if (part.added) {\n      return <ins key={i}>{part.value}</ins>;\n    } else if (part.removed) {\n      return <del key={i}>{part.value}</del>;\n    } else {\n      return <span key={i}>{part.value}</span>;\n    }\n  });\n  return <code>{bits}</code>;\n}\n\nfunction BrokenLinks({\n  sourceFilePath,\n  links,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  links: BrokenLink[];\n  isReadOnly: boolean;\n}) {\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(links);\n\n  return (\n    <div className=\"flaw flaw__broken_links\">\n      <h3>Broken Links</h3>\n      <ol>\n        {links.map((flaw, i) => {\n          const key = `${flaw.href}${flaw.line}${flaw.column}`;\n          return (\n            <li\n              key={key}\n              className={flaw.fixed ? \"fixed_flaw\" : undefined}\n              title={\n                flaw.fixed\n                  ? \"This broken link has been automatically fixed.\"\n                  : undefined\n              }\n            >\n              <code>{flaw.href}</code>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight broken link\"\n                title=\"Click to highlight broken link anchor\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  {/* It would be cool if we can change this to a link to the line in the\n                  file in GitHub's UI. */}\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />}{\" \"}\n              {opening && opening === key && <span>Opening...</span>}\n              <br />\n              {flaw.suggestion ? (\n                <span>\n                  <b>Suggestion:</b>\n                  <ShowDiff before={flaw.href} after={flaw.suggestion} />\n                </span>\n              ) : (\n                <code>{flaw.explanation}</code>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </div>\n  );\n}\n\nfunction BadBCDQueries({ flaws }: { flaws: BadBCDQueryFlaw[] }) {\n  return (\n    <div className=\"flaw flaw__bad_bcd_queries\">\n      <h3>{humanizeFlawName(\"bad_bcd_queries\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            <code>{flaw.explanation}</code>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Sectioning({ flaws }: { flaws: SectioningFlaw[] }) {\n  return (\n    <div className=\"flaw flaw__sectioning\">\n      <h3>{humanizeFlawName(\"sectioning\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            <code>{flaw.explanation}</code>\n            <br />\n            <small>\n              Usually this means there's something in the raw content that makes\n              it hard to split up the rendered HTML. Perhaps delete unnecessary\n              empty divs.\n            </small>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction BadPreTag({\n  flaws,\n  sourceFilePath,\n  isReadOnly,\n}: {\n  flaws: BadPreTagFlaw[];\n  sourceFilePath: string;\n  isReadOnly: boolean;\n}) {\n  const { focus } = useAnnotations(flaws);\n\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  return (\n    <div className=\"flaw flaw__bad_pre_tags\">\n      <h3>{humanizeFlawName(\"bad_pre_tags\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            {flaw.explanation}{\" \"}\n            <span\n              role=\"img\"\n              aria-label=\"Click to highlight broken link\"\n              title=\"Click to highlight broken link anchor\"\n              style={{ cursor: \"zoom-in\" }}\n              onClick={() => {\n                focus(flaw.id);\n              }}\n            >\n              👀\n            </span>{\" \"}\n            {flaw.line && flaw.column ? (\n              isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    if (flaw.line && flaw.column)\n                      openInEditor(flaw.id, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )\n            ) : null}{\" \"}\n            {flaw.fixable && <FixableFlawBadge />}{\" \"}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Macros({\n  flaws,\n  sourceFilePath,\n  isReadOnly,\n}: {\n  flaws: MacroErrorMessage[];\n  sourceFilePath: string;\n  isReadOnly: boolean;\n}) {\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(msg: MacroErrorMessage, id: string) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", msg.filepath);\n    sp.set(\"line\", `${msg.line}`);\n    sp.set(\"column\", `${msg.column}`);\n    console.log(\n      `Going to try to open ${msg.filepath}:${msg.line}:${msg.column} in your editor`\n    );\n    setOpening(id);\n    fetch(`/_open?${sp.toString()}`);\n  }\n\n  return (\n    <div className=\"flaw flaw__macros\">\n      <h3>{humanizeFlawName(\"macros\")}</h3>\n      {flaws.map((flaw) => {\n        const inPrerequisiteMacro = !flaw.filepath.includes(sourceFilePath);\n        return (\n          <details\n            key={flaw.id}\n            className={flaw.fixed ? \"fixed_flaw\" : undefined}\n            title={\n              flaw.fixed\n                ? \"This macro flaw has been automatically fixed.\"\n                : undefined\n            }\n          >\n            <summary>\n              <code>{flaw.name}</code> from <code>{flaw.macroName}</code>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${flaw.filepath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(flaw, flaw.id);\n                  }}\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {opening && opening === flaw.id && <span>Opening...</span>}{\" \"}\n              {inPrerequisiteMacro && (\n                <span\n                  className=\"macro-filepath-in-prerequisite\"\n                  title={`This page depends on a macro expansion inside ${flaw.filepath}`}\n                >\n                  In prerequisite macro\n                </span>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />}{\" \"}\n            </summary>\n            {flaw.fixable && flaw.suggestion && (\n              <>\n                <b>Suggestion:</b>\n                <ShowDiff before={flaw.macroSource} after={flaw.suggestion} />\n                <br />\n              </>\n            )}\n            {flaw.explanation && (\n              <>\n                <b>Explanation:</b> <code>{flaw.explanation}</code>\n                <br />\n              </>\n            )}\n            <b>Context:</b>\n            <pre>{flaw.sourceContext}</pre>\n            <b>Original error stack:</b>\n            <pre>{flaw.errorStack}</pre>\n            <b>Filepath:</b>{\" \"}\n            {inPrerequisiteMacro && (\n              <i className=\"macro-filepath-in-prerequisite\">\n                Note that this is different from the page you're currently\n                viewing.\n              </i>\n            )}\n            <br />\n            <code>{flaw.filepath}</code>\n          </details>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction Images({\n  sourceFilePath,\n  images,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  images: ImageReferenceFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(images);\n\n  return (\n    <div className=\"flaw flaw__images\">\n      <h3>{humanizeFlawName(\"images\")}</h3>\n      <ul>\n        {images.map((flaw, i) => {\n          const key = `${flaw.src}${flaw.line}${flaw.column}`;\n          return (\n            <li key={key}>\n              <code>{flaw.src}</code>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight image\"\n                title=\"Click to highlight image\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {(flaw.fixable || flaw.externalImage) && <FixableFlawBadge />}{\" \"}\n              <br />\n              {flaw.suggestion && (\n                <span>\n                  <b>Suggestion:</b>\n                  <ShowDiff before={flaw.src} after={flaw.suggestion} />\n                </span>\n              )}{\" \"}\n              <span>{flaw.explanation}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction ImageWidths({\n  sourceFilePath,\n  flaws,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  flaws: ImageWidthFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(flaws);\n\n  return (\n    <div className=\"flaw flaw__image_widths\">\n      <h3>{humanizeFlawName(\"image_widths\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = `${flaw.style}${flaw.line}${flaw.column}`;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight image\"\n                title=\"Click to highlight image\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {(flaw.fixable || flaw.externalImage) && <FixableFlawBadge />}{\" \"}\n              <br />\n              {flaw.suggestion === \"\" && (\n                <>\n                  <b>Style:</b> <code>{flaw.style}</code>\n                  <br />\n                </>\n              )}\n              {flaw.suggestion !== null && (\n                <span>\n                  <b>Suggestion:</b>{\" \"}\n                  {flaw.suggestion ? (\n                    <ShowDiff before={flaw.style} after={flaw.suggestion} />\n                  ) : (\n                    <i>\n                      delete the <code>style</code> attribute\n                    </i>\n                  )}\n                </span>\n              )}{\" \"}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction HeadingLinks({\n  sourceFilePath,\n  flaws,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  flaws: HeadingLinksFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  return (\n    <div className=\"flaw flaw__heading_links\">\n      <h3>{humanizeFlawName(\"heading_links\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = flaw.id;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              {flaw.line && flaw.column ? (\n                isReadOnly ? (\n                  <>\n                    line {flaw.line}:{flaw.column}\n                  </>\n                ) : (\n                  <a\n                    href={`file://${sourceFilePath}`}\n                    onClick={(event: React.MouseEvent) => {\n                      event.preventDefault();\n                      openInEditor(\n                        key,\n                        flaw.line as number,\n                        flaw.column as number\n                      );\n                    }}\n                    title=\"Click to open in your editor\"\n                  >\n                    line {flaw.line}:{flaw.column}\n                  </a>\n                )\n              ) : null}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />} <br />\n              <b>HTML:</b> <code>{flaw.html}</code> <br />\n              {flaw.suggestion && flaw.before ? (\n                <span>\n                  <b>Suggestion:</b>{\" \"}\n                  <ShowDiff before={flaw.before} after={flaw.suggestion} />\n                </span>\n              ) : (\n                <i>\n                  All <code>&lt;a&gt;</code> tags need to be removed\n                </i>\n              )}{\" \"}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction UnsafeHTML({ flaws }: { flaws: UnsafeHTMLFlaw[] }) {\n  // The UI for this flaw can be a bit \"simplistic\" because by default this\n  // flaw will error rather than warn.\n  return (\n    <div className=\"flaw\">\n      <h3>⚠️ {humanizeFlawName(\"unsafe_html\")} ⚠️</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = flaw.id;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              {flaw.line && flaw.column && (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />} <br />\n              <b>HTML:</b>\n              <pre className=\"example-bad\">{flaw.html}</pre>\n              <br />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction TranslationDifferences({\n  flaws,\n}: {\n  flaws: TranslationDifferenceFlaw[];\n}) {\n  return (\n    <div className=\"flaw\">\n      <h3>{humanizeFlawName(\"translation_differences\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => (\n          <li key={flaw.id}>\n            {<b>{flaw.explanation}</b>}\n            {flaw.difference.explanationNotes &&\n              flaw.difference.explanationNotes.length > 0 && (\n                <ul className=\"explanation-notes\">\n                  {flaw.difference.explanationNotes.map(\n                    (explanationNotes, i) => {\n                      return (\n                        <li key={`${explanationNotes}${i}`}>\n                          <code>{explanationNotes}</code>\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { WRITER_MODE_HOSTNAMES } from \"../../env\";\nimport { Doc } from \"../../../../libs/types/document\";\nimport { EditActions } from \"./edit-actions\";\nimport { ToggleDocumentFlaws } from \"./flaws\";\n\nimport \"./index.scss\";\n\nexport default function Toolbar({\n  doc,\n  reloadPage,\n}: {\n  doc: Doc;\n  reloadPage: () => void;\n}) {\n  // Every time the toolbar is used to view a document, log that in localStorage\n  // as a list of recent document views. This can be used on the homepage to\n  // help you navigate back to pages you frequently visit.\n  useEffect(() => {\n    try {\n      const localStorageKey = \"viewed-documents\";\n      const entry = {\n        url: doc.mdn_url,\n        title: doc.title,\n        timestamp: new Date().getTime(),\n      };\n      const previousVisits = JSON.parse(\n        localStorage.getItem(localStorageKey) || \"[]\"\n      );\n      const visits = [\n        entry,\n        ...previousVisits.filter((v) => v.url !== entry.url),\n      ];\n      localStorage.setItem(\n        localStorageKey,\n        JSON.stringify(visits.slice(0, 20))\n      );\n    } catch (err) {\n      console.warn(\"Unable to write viewed documents to localStorage\", err);\n    }\n  }, [doc]);\n\n  const isReadOnly = !WRITER_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  return (\n    <div className=\"toolbar\">\n      <div className=\"toolbar-first-row\">\n        <EditActions source={doc.source} />\n      </div>\n      {isReadOnly && (\n        <div>\n          <i>\n            You're in <b>read-only</b> mode.\n          </i>\n        </div>\n      )}\n      <ToggleDocumentFlaws doc={doc} reloadPage={reloadPage} />\n    </div>\n  );\n}\n","/**\n * This file serves to help flaws when displayed one at a time and when\n * displayed in batches.\n *\n */\n\nexport function humanizeFlawName(name) {\n  const verboseNames = {\n    // List all the names that can't be nicely computed by the fallback()\n    // function.\n    bad_bcd_queries: \"Bad BCD queries\",\n    bad_pre_tags: \"Bad <pre> tags\",\n    unsafe_html: \"Unsafe HTML\",\n  };\n  function fallback() {\n    return name.charAt(0).toUpperCase() + name.slice(1).replace(/_/g, \" \");\n  }\n  return verboseNames[name] || fallback();\n}\n"],"names":["EditActions","_ref","source","folder","filename","github_url","opening","setOpening","useState","editorOpeningError","setEditorOpeningError","useEffect","unsetOpeningTimer","setTimeout","clearTimeout","locale","useLocale","slug","useParams","isReadOnly","WRITER_MODE_HOSTNAMES","includes","window","location","hostname","_jsxs","className","children","_jsx","type","title","concat","onClick","async","event","preventDefault","filepath","console","log","response","fetch","ok","status","Error","statusText","body","text","err","href","replace","rel","toString","useAnnotations","genericFlaws","annotations","elements","flaw","element","document","querySelector","id","warn","push","annotationColor","suggestion","dataset","originalTitle","explanation","annotate","color","animationDuration","ag","annotationGroup","show","hide","undefined","focus","flawID","scrollIntoView","behavior","block","parentElement","strokeWidth","padding","length","FLAWS_HASH","ToggleDocumentFlaws","doc","reloadPage","useLocation","navigate","useNavigate","rootElement","useRef","isInitialRender","hash","current","flawsCounts","Object","entries","flaws","map","_ref2","name","actualFlaws","count","sort","a","b","React","el","allFixableFlaws","allFlaws","values","forEach","filter","fixable","slice","ref","pathname","search","reduce","acc","role","Flaws","humanizeFlawName","join","_ref3","WRITER_MODE","fixableFlaws","fixed","externalImage","flat","filePath","_Fragment","isMarkdown","FixableFlawsAction","BrokenLinks","sourceFilePath","links","broken_links","BadBCDQueries","bad_bcd_queries","BadPreTag","bad_pre_tags","Macros","macros","Images","images","ImageWidths","image_widths","HeadingLinks","heading_links","UnsafeHTML","unsafe_html","TranslationDifferences","translation_differences","Sectioning","sectioning","_ref4","fixing","setFixing","setFixed","fixingError","setFixingError","documentURL","useDocumentURL","style","disabled","prev","URLSearchParams","url","method","error","fix","FixableFlawBadge","ShowDiff","_ref5","before","after","bits","diffWords","part","i","added","value","removed","_ref6","key","line","column","cursor","sp","set","catch","openInEditor","_ref7","_ref8","_ref9","_ref10","inPrerequisiteMacro","macroName","msg","macroSource","sourceContext","errorStack","_ref11","src","_ref12","_ref13","html","_ref14","_ref15","difference","explanationNotes","Toolbar","localStorageKey","entry","mdn_url","timestamp","Date","getTime","previousVisits","JSON","parse","localStorage","getItem","visits","v","setItem","stringify","charAt","toUpperCase"],"sourceRoot":""}