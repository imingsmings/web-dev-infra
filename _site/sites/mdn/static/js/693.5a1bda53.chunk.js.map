{"version":3,"file":"static/js/693.5a1bda53.chunk.js","mappings":"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","sources":["site-search/search-results.tsx","site-search/utils.tsx","../../libs/languages/index.js"],"sourcesContent":["import React from \"react\";\nimport { createSearchParams, Link, useSearchParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\n\nimport { Loading } from \"../ui/atoms/loading\";\nimport { WRITER_MODE, KUMA_HOST } from \"../env\";\nimport { useLocale } from \"../hooks\";\nimport { appendURL } from \"./utils\";\nimport { Button } from \"../ui/atoms/button\";\n\nimport \"./search-results.scss\";\nimport { useGA } from \"../ga-context\";\nimport NoteCard from \"../ui/molecules/notecards\";\n\nimport LANGUAGES_RAW from \"../../../libs/languages\";\n\nconst LANGUAGES = new Map(\n  Object.entries(LANGUAGES_RAW).map(([locale, data]) => {\n    return [locale.toLowerCase(), data];\n  })\n);\n\nconst SORT_OPTIONS = [\n  [\"best\", \"Best\"],\n  [\"relevance\", \"Relevance\"],\n  [\"popularity\", \"Popularity\"],\n];\n\ntype Highlight = {\n  body?: string[];\n  title?: string[];\n};\n\ninterface Document {\n  mdn_url: string;\n  locale: string;\n  title: string;\n  highlight: Highlight;\n  summary: string;\n  score: number;\n  popularity: number;\n}\n\ntype Total = {\n  value: number;\n  relation: \"eq\" | \"gt\";\n};\n\ninterface Metadata {\n  // The time it took Elasticsearch query\n  took_ms: number;\n  // The time it took Kuma's API to wrap the Elasticsearch query\n  api_took_ms: number;\n  total: Total;\n}\n\ninterface Suggestion {\n  text: string;\n  total: Total;\n}\n\ninterface FormErrorMessage {\n  message: string;\n  code: string;\n}\n\ntype FormErrors = [{ key: string }, FormErrorMessage[]];\n\nclass BadRequestError extends Error {\n  public formErrors: FormErrors;\n\n  constructor(formErrors: FormErrors) {\n    super(`BadRequestError ${JSON.stringify(formErrors)}`);\n    this.formErrors = formErrors;\n  }\n}\n\nclass ServerOperationalError extends Error {\n  public statusCode: number;\n\n  constructor(statusCode: number) {\n    super(`ServerOperationalError ${statusCode}`);\n    this.statusCode = statusCode;\n  }\n}\n\nexport default function SearchResults() {\n  const ga = useGA();\n  const [searchParams] = useSearchParams();\n  const locale = useLocale();\n  // A call to `/api/v1/search` will default to mean the same thing as\n  // a call to `/api/v1/search?locale=en-us`. But if they page you're currently\n  // on, (e.g. `/ja/search`) we should supply a more explicit default.\n  const sp = createSearchParams(searchParams);\n  if (!searchParams.getAll(\"locale\").length) {\n    // In other words, if it's not explicitly set by the current query string,\n    // force in the locale based on the current URL (path).\n    sp.set(\"locale\", locale);\n  }\n  const fetchURL = `/api/v1/search?${sp.toString()}`;\n\n  const { data, error } = useSWR(\n    fetchURL,\n    async (url) => {\n      const response = await fetch(url);\n      if (response.status === 400) {\n        const badRequest = await response.json();\n        throw new BadRequestError(badRequest.errors);\n      } else if (response.status >= 500) {\n        throw new ServerOperationalError(response.status);\n      } else if (!response.ok) {\n        throw new Error(`${response.status} on ${url}`);\n      }\n\n      // See docs/experiments/0001_site-search-x-cache.md\n      const xCacheHeaderValue = response.headers.get(\"x-cache\");\n      ga(\"send\", {\n        hitType: \"event\",\n        eventCategory: \"Site-search X-Cache\",\n        eventAction: url,\n        eventLabel: xCacheHeaderValue || \"no value\",\n      });\n\n      return await response.json();\n    },\n    {\n      revalidateOnFocus: process.env.NODE_ENV === \"development\",\n    }\n  );\n\n  const page = searchParams.get(\"page\");\n  const [initialPage, setInitialPage] = React.useState(page);\n  React.useEffect(() => {\n    if (page !== initialPage) {\n      setInitialPage(page);\n      const resultsElement = document.querySelector(\"div.site-search\");\n      if (resultsElement) {\n        resultsElement.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n  }, [page, initialPage]);\n\n  if (error) {\n    if (error instanceof BadRequestError) {\n      return (\n        <SearchErrorContainer>\n          <ExplainBadRequestError errors={error.formErrors} />\n        </SearchErrorContainer>\n      );\n    }\n\n    if (error instanceof ServerOperationalError) {\n      return (\n        <SearchErrorContainer>\n          <ExplainServerOperationalError statusCode={error.statusCode} />\n        </SearchErrorContainer>\n      );\n    }\n\n    return (\n      <SearchErrorContainer>\n        <p>Something else went horribly wrong with the search</p>\n        <p>\n          <code>{error.toString()}</code>\n        </p>\n      </SearchErrorContainer>\n    );\n  }\n\n  if (data) {\n    const currentPage = data.metadata.page;\n    const pageSize = data.metadata.size;\n    const hitCount = data.metadata.total.value;\n\n    return (\n      <>\n        {/* It only makes sense to display the sorting options if anything was found */}\n        {hitCount > 1 && <SortOptions />}\n\n        <RemoteSearchWarning />\n\n        <Results {...data} />\n\n        <Pagination\n          currentPage={currentPage}\n          hitCount={hitCount}\n          pageSize={pageSize}\n          maxPage={10}\n        />\n      </>\n    );\n  }\n  // else...\n  return <Loading minHeight={500} message=\"Loading search results...\" />;\n}\n\nfunction RemoteSearchWarning() {\n  if (WRITER_MODE) {\n    // If you're in WRITER_MODE, the search results will be proxied from a remote\n    // Kuma and it might be confusing if a writer is wondering why their\n    // actively worked-on content isn't showing up in searches.\n    // The default value in the server is not accessible from the react app,\n    // so it's hardcoded here in the client.\n    const kumaHost = KUMA_HOST;\n    return (\n      <NoteCard type=\"warning\">\n        <h4>Note!</h4>\n        <p>\n          Site-search is proxied to <code>{kumaHost}</code> which means that\n          some content found doesn't reflect what's in your current branch.\n        </p>\n      </NoteCard>\n    );\n  }\n  return null;\n}\n\nfunction SortOptions() {\n  const [searchParams] = useSearchParams();\n  const querySort = searchParams.get(\"sort\") || SORT_OPTIONS[0][0];\n  return (\n    <div className=\"sort-options\">\n      <h2>Sort by:</h2>\n      <ul className=\"sort-option-list\">\n        {SORT_OPTIONS.map(([key, label], i) => {\n          return (\n            <li key={key}>\n              {key === querySort ? (\n                label\n              ) : (\n                <Link to={`?${appendURL(searchParams, { sort: key })}`}>\n                  {label}\n                </Link>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction SearchErrorContainer({ children }: { children: React.ReactNode }) {\n  return (\n    <div>\n      <h3>Search error</h3>\n      {children}\n    </div>\n  );\n}\n\nfunction ExplainBadRequestError({ errors }: { errors: FormErrors }) {\n  return (\n    <NoteCard type=\"warning\">\n      <p>The search didn't work because there were problems with the input.</p>\n      <ul>\n        {Object.keys(errors).map((key) => {\n          const messages: FormErrorMessage[] = errors[key];\n          return (\n            <li key={key}>\n              <code>{key}</code>{\" \"}\n              {messages.map((message) => {\n                return <b key={message.code}>{message.message}</b>;\n              })}\n            </li>\n          );\n        })}\n      </ul>\n    </NoteCard>\n  );\n}\n\nfunction ExplainServerOperationalError({ statusCode }: { statusCode: number }) {\n  return (\n    <NoteCard type=\"warning\">\n      <p>The search failed because the server failed to respond.</p>\n      <p>\n        If you're curious, it was a <b>{statusCode}</b> error.\n      </p>\n      <p>\n        <Button\n          onClickHandler={() => {\n            window.location.reload();\n          }}\n          type=\"secondary\"\n        >\n          Try reloading\n        </Button>\n      </p>\n    </NoteCard>\n  );\n}\n\nfunction Results({\n  documents,\n  metadata,\n  suggestions,\n}: {\n  documents: Document[];\n  metadata: Metadata;\n  suggestions: Suggestion[];\n}) {\n  const locale = useLocale();\n  const [searchParams] = useSearchParams();\n\n  return (\n    <div className=\"search-results\">\n      <p>\n        Found <ShowTotal total={metadata.total} /> in {metadata.took_ms}{\" \"}\n        milliseconds.\n      </p>\n\n      {!!suggestions.length && (\n        <div className=\"search-suggestions\">\n          <p>Did you mean...</p>\n          <ul className=\"search-suggestion-list\">\n            {suggestions.map((suggestion) => {\n              return (\n                <li key={suggestion.text}>\n                  <Link\n                    to={`?${appendURL(searchParams, {\n                      q: suggestion.text,\n                      page: undefined,\n                    })}`}\n                  >\n                    {suggestion.text}\n                  </Link>{\" \"}\n                  <ShowTotal total={suggestion.total} />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      <ul className=\"search-results-list readable-line-length\">\n        {documents.map((document) => {\n          const highlights = document.highlight.body || [];\n          return (\n            <li className=\"search-result-entry\" key={document.mdn_url}>\n              {/* We're using plain <a href> instead of <Link to> here until\n                the bug has been figured out about scrolling to the top on click. */}\n              {document.highlight.title && document.highlight.title.length ? (\n                <h3 className=\"title\">\n                  <a\n                    href={document.mdn_url}\n                    dangerouslySetInnerHTML={{\n                      __html: document.highlight.title[0],\n                    }}\n                  ></a>\n                </h3>\n              ) : (\n                <h3 className=\"title\">\n                  <a href={document.mdn_url}>{document.title}</a>\n                </h3>\n              )}{\" \"}\n              {locale.toLowerCase() !== document.locale &&\n                LANGUAGES.has(document.locale) && (\n                  <span\n                    className=\"locale-indicator\"\n                    title={`The linked document is in ${LANGUAGES.get(\n                      document.locale\n                    )?.English} which is different from your current locale.`}\n                  >\n                    {LANGUAGES.get(document.locale)?.English}\n                  </span>\n                )}\n              <p className=\"search-result-url\">\n                <a href={document.mdn_url}>{document.mdn_url}</a>\n              </p>\n              <p>\n                {highlights.length ? (\n                  highlights.map((highlight, i) => {\n                    return (\n                      <span\n                        key={`${document.mdn_url}${i}`}\n                        className=\"highlight\"\n                        dangerouslySetInnerHTML={{ __html: `…${highlight}…` }}\n                      ></span>\n                    );\n                  })\n                ) : (\n                  <span className=\"summary\">{document.summary}</span>\n                )}\n              </p>\n              {searchParams.get(\"debug\") !== null && (\n                <span className=\"nerd-data\">\n                  <b>score:</b> <code>{document.score}</code>,{\" \"}\n                  <b>popularity:</b> <code>{document.popularity}</code>,{\" \"}\n                </span>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction ShowTotal({ total }: { total: Total }) {\n  return (\n    <>\n      {total.relation === \"gt\" && \"more than\"} {total.value.toLocaleString()}{\" \"}\n      {total.value === 1 ? \"match\" : \"matches\"}\n    </>\n  );\n}\n\nfunction Pagination({\n  currentPage,\n  maxPage,\n  hitCount,\n  pageSize,\n}: {\n  currentPage: number;\n  maxPage: number;\n  hitCount: number;\n  pageSize: number;\n}) {\n  const [searchParams] = useSearchParams();\n\n  if (!hitCount) {\n    return null;\n  }\n  if (hitCount <= pageSize) {\n    return null;\n  }\n  let previousPage: number | null = null;\n  let nextPage: number | null = null;\n  if (hitCount > currentPage * pageSize && currentPage < maxPage) {\n    nextPage = currentPage + 1;\n  }\n  if (currentPage > 1) {\n    previousPage = currentPage - 1;\n  }\n\n  if (nextPage || previousPage !== null) {\n    let previousURL = \"\";\n    if (previousPage) {\n      if (previousPage === 1) {\n        previousURL = `?${appendURL(searchParams, {\n          page: undefined,\n        })}`;\n      } else {\n        previousURL = `?${appendURL(searchParams, {\n          page: `${previousPage}`,\n        })}`;\n      }\n    }\n    return (\n      <ul className=\"pagination readable-line-length\">\n        {previousURL ? (\n          <li>\n            <Link to={previousURL} className=\"button\">\n              Previous\n            </Link>\n          </li>\n        ) : null}{\" \"}\n        {nextPage ? (\n          <li>\n            <Link\n              to={`?${appendURL(searchParams, { page: `${nextPage}` })}`}\n              className=\"button\"\n            >\n              Next\n            </Link>\n          </li>\n        ) : null}\n      </ul>\n    );\n  }\n  return null;\n}\n","import { createSearchParams, URLSearchParamsInit } from \"react-router-dom\";\n\nexport function appendURL(\n  searchParams: URLSearchParamsInit,\n  overrides: Record<string, string | string[] | undefined>\n) {\n  const sp = createSearchParams(searchParams);\n  Object.entries(overrides).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      sp.delete(key);\n      value.forEach((v) => sp.append(key, v));\n    } else if (value === undefined) {\n      sp.delete(key);\n    } else {\n      sp.set(key, value);\n    }\n  });\n  return sp;\n}\n","export default {\n  ach: {\n    English: \"Acholi\",\n    native: \"Acholi\",\n  },\n  ak: {\n    English: \"Akan\",\n    native: \"Akan\",\n  },\n  \"am-et\": {\n    English: \"Amharic\",\n    native: \"\\u12a0\\u121b\\u122d\\u129b\",\n  },\n  an: {\n    English: \"Aragonese\",\n    native: \"aragon\\u00e9s\",\n  },\n  ar: {\n    English: \"Arabic\",\n    native: \"\\u0639\\u0631\\u0628\\u064a\",\n  },\n  as: {\n    English: \"Assamese\",\n    native: \"\\u0985\\u09b8\\u09ae\\u09c0\\u09af\\u09bc\\u09be\",\n  },\n  ast: {\n    English: \"Asturian\",\n    native: \"Asturianu\",\n  },\n  azz: {\n    English: \"Highland Puebla Nahuatl\",\n    native: \"nahuatl sierra norte Puebla\",\n  },\n  be: {\n    English: \"Belarusian\",\n    native: \"\\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0441\\u043a\\u0430\\u044f\",\n  },\n  bg: {\n    English: \"Bulgarian\",\n    native: \"\\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0441\\u043a\\u0438\",\n  },\n  bm: {\n    English: \"Bambara\",\n    native: \"Bamanankan\",\n  },\n  bn: {\n    English: \"Bengali\",\n    native: \"\\u09ac\\u09be\\u0982\\u09b2\\u09be\",\n  },\n  br: {\n    English: \"Breton\",\n    native: \"Brezhoneg\",\n  },\n  brx: {\n    English: \"Bodo\",\n    native: \"\\u092c\\u0930'\",\n  },\n  bs: {\n    English: \"Bosnian\",\n    native: \"Bosanski\",\n  },\n  ca: {\n    English: \"Catalan\",\n    native: \"Catal\\u00e0\",\n  },\n  \"ca-valencia\": {\n    English: \"Catalan (Valencian)\",\n    native: \"catal\\u00e0 (valenci\\u00e0)\",\n  },\n  cak: {\n    English: \"Kaqchikel\",\n    native: \"Maya Kaqchikel\",\n  },\n  csb: {\n    English: \"Kashubian\",\n    native: \"Kasz\\u00ebbsczi\",\n  },\n  cy: {\n    English: \"Welsh\",\n    native: \"Cymraeg\",\n  },\n  da: {\n    English: \"Danish\",\n    native: \"Dansk\",\n  },\n  dbg: {\n    English: \"Debug Robot\",\n    native: \"\\u1e12\\u1e17\\u0180\\u016d\\u0260 \\u0158\\u01ff\\u0180\\u01ff\\u0167\",\n  },\n  de: {\n    English: \"German\",\n    native: \"Deutsch\",\n  },\n  \"de-AT\": {\n    English: \"German (Austria)\",\n    native: \"Deutsch (\\u00d6sterreich)\",\n  },\n  \"de-CH\": {\n    English: \"German (Switzerland)\",\n    native: \"Deutsch (Schweiz)\",\n  },\n  \"de-DE\": {\n    English: \"German (Germany)\",\n    native: \"Deutsch (Deutschland)\",\n  },\n  dsb: {\n    English: \"Lower Sorbian\",\n    native: \"Dolnoserb\\u0161\\u0107ina\",\n  },\n  el: {\n    English: \"Greek\",\n    native: \"\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ac\",\n  },\n  \"en-AU\": {\n    English: \"English (Australian)\",\n    native: \"English (Australian)\",\n  },\n  \"en-CA\": {\n    English: \"English (Canadian)\",\n    native: \"English (Canadian)\",\n  },\n  \"en-GB\": {\n    English: \"English (British)\",\n    native: \"English (British)\",\n  },\n  \"en-NZ\": {\n    English: \"English (New Zealand)\",\n    native: \"English (New Zealand)\",\n  },\n  \"en-US\": {\n    English: \"English (US)\",\n    native: \"English (US)\",\n  },\n  \"en-ZA\": {\n    English: \"English (South African)\",\n    native: \"English (South African)\",\n  },\n  eo: {\n    English: \"Esperanto\",\n    native: \"Esperanto\",\n  },\n  es: {\n    English: \"Spanish\",\n    native: \"Espa\\u00f1ol\",\n  },\n  \"es-AR\": {\n    English: \"Spanish (Argentina)\",\n    native: \"Espa\\u00f1ol (de Argentina)\",\n  },\n  \"es-CL\": {\n    English: \"Spanish (Chile)\",\n    native: \"Espa\\u00f1ol (de Chile)\",\n  },\n  \"es-ES\": {\n    English: \"Spanish (Spain)\",\n    native: \"Espa\\u00f1ol (de Espa\\u00f1a)\",\n  },\n  \"es-MX\": {\n    English: \"Spanish (Mexico)\",\n    native: \"Espa\\u00f1ol (de M\\u00e9xico)\",\n  },\n  et: {\n    English: \"Estonian\",\n    native: \"Eesti keel\",\n  },\n  eu: {\n    English: \"Basque\",\n    native: \"Euskara\",\n  },\n  fa: {\n    English: \"Persian\",\n    native: \"\\u0641\\u0627\\u0631\\u0633\\u06cc\",\n  },\n  fi: {\n    English: \"Finnish\",\n    native: \"suomi\",\n  },\n  \"fj-FJ\": {\n    English: \"Fijian\",\n    native: \"Vosa vaka-Viti\",\n  },\n  fr: {\n    English: \"French\",\n    native: \"Fran\\u00e7ais\",\n  },\n  \"fur-IT\": {\n    English: \"Friulian\",\n    native: \"Furlan\",\n  },\n  ga: {\n    English: \"Irish\",\n    native: \"Gaeilge\",\n  },\n  gd: {\n    English: \"Gaelic (Scotland)\",\n    native: \"G\\u00e0idhlig\",\n  },\n  gl: {\n    English: \"Galician\",\n    native: \"Galego\",\n  },\n  gn: {\n    English: \"Guarani\",\n    native: \"Ava\\u00f1e'\\u1ebd\",\n  },\n  gu: {\n    English: \"Gujarati\",\n    native: \"\\u0a97\\u0ac1\\u0a9c\\u0ab0\\u0abe\\u0aa4\\u0ac0\",\n  },\n  \"gu-IN\": {\n    English: \"Gujarati (India)\",\n    native:\n      \"\\u0a97\\u0ac1\\u0a9c\\u0ab0\\u0abe\\u0aa4\\u0ac0 (\\u0aad\\u0abe\\u0ab0\\u0aa4)\",\n  },\n  he: {\n    English: \"Hebrew\",\n    native: \"\\u05e2\\u05d1\\u05e8\\u05d9\\u05ea\",\n  },\n  hi: {\n    English: \"Hindi\",\n    native: \"\\u0939\\u093f\\u0928\\u094d\\u0926\\u0940\",\n  },\n  \"hi-IN\": {\n    English: \"Hindi (India)\",\n    native: \"\\u0939\\u093f\\u0928\\u094d\\u0926\\u0940 (\\u092d\\u093e\\u0930\\u0924)\",\n  },\n  hsb: {\n    English: \"Upper Sorbian\",\n    native: \"Hornjoserbsce\",\n  },\n  hu: {\n    English: \"Hungarian\",\n    native: \"magyar\",\n  },\n  \"hy-AM\": {\n    English: \"Armenian\",\n    native: \"\\u0540\\u0561\\u0575\\u0565\\u0580\\u0565\\u0576\",\n  },\n  ia: {\n    English: \"Interlingua\",\n    native: \"Interlingua\",\n  },\n  id: {\n    English: \"Indonesian\",\n    native: \"Bahasa Indonesia\",\n  },\n  is: {\n    English: \"Icelandic\",\n    native: \"\\u00edslenska\",\n  },\n  it: {\n    English: \"Italian\",\n    native: \"Italiano\",\n  },\n  ja: {\n    English: \"Japanese\",\n    native: \"\\u65e5\\u672c\\u8a9e\",\n  },\n  \"ja-JP-mac\": {\n    English: \"Japanese\",\n    native: \"\\u65e5\\u672c\\u8a9e\",\n  },\n  kab: {\n    English: \"Kabyle\",\n    native: \"Taqbaylit\",\n  },\n  kk: {\n    English: \"Kazakh\",\n    native: \"\\u049a\\u0430\\u0437\\u0430\\u049b\",\n  },\n  km: {\n    English: \"Khmer\",\n    native: \"\\u1781\\u17d2\\u1798\\u17c2\\u179a\",\n  },\n  kn: {\n    English: \"Kannada\",\n    native: \"\\u0c95\\u0ca8\\u0ccd\\u0ca8\\u0ca1\",\n  },\n  ko: {\n    English: \"Korean\",\n    native: \"\\ud55c\\uad6d\\uc5b4\",\n  },\n  kok: {\n    English: \"Konkani\",\n    native: \"\\u0915\\u094b\\u0902\\u0915\\u0928\\u0940\",\n  },\n  ku: {\n    English: \"Kurdish\",\n    native: \"Kurd\\u00ee\",\n  },\n  ks: {\n    English: \"Kashmiri\",\n    native: \"\\u0643\\u0634\\u0645\\u06cc\\u0631\\u06cc\",\n  },\n  la: {\n    English: \"Latin\",\n    native: \"Latina\",\n  },\n  lg: {\n    English: \"Luganda\",\n    native: \"Luganda\",\n  },\n  lij: {\n    English: \"Ligurian\",\n    native: \"Ligure\",\n  },\n  lo: {\n    English: \"Lao\",\n    native: \"\\u0e9e\\u0eb2\\u0eaa\\u0eb2\\u0ea5\\u0eb2\\u0ea7\",\n  },\n  lt: {\n    English: \"Lithuanian\",\n    native: \"Lietuvi\\u0173\",\n  },\n  ltg: {\n    English: \"Latgalian\",\n    native: \"Latgalie\\u0161u valoda\",\n  },\n  lv: {\n    English: \"Latvian\",\n    native: \"Latvie\\u0161u\",\n  },\n  mai: {\n    English: \"Maithili\",\n    native:\n      \"\\u092e\\u0948\\u0925\\u093f\\u0932\\u0940 \\u09ae\\u09c8\\u09a5\\u09bf\\u09b2\\u09c0\",\n  },\n  mi: {\n    English: \"Maori (Aotearoa)\",\n    native: \"M\\u0101ori (Aotearoa)\",\n  },\n  mk: {\n    English: \"Macedonian\",\n    native: \"\\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0441\\u043a\\u0438\",\n  },\n  mn: {\n    English: \"Mongolian\",\n    native: \"\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b\",\n  },\n  mr: {\n    English: \"Marathi\",\n    native: \"\\u092e\\u0930\\u093e\\u0920\\u0940\",\n  },\n  ms: {\n    English: \"Malay\",\n    native: \"Melayu\",\n  },\n  my: {\n    English: \"Burmese\",\n    native: \"\\u1019\\u103c\\u1014\\u103a\\u1019\\u102c\\u1018\\u102c\\u101e\\u102c\",\n  },\n  \"nb-NO\": {\n    English: \"Norwegian (Bokm\\u00e5l)\",\n    native: \"Norsk bokm\\u00e5l\",\n  },\n  \"ne-NP\": {\n    English: \"Nepali\",\n    native: \"\\u0928\\u0947\\u092a\\u093e\\u0932\\u0940\",\n  },\n  \"nn-NO\": {\n    English: \"Norwegian (Nynorsk)\",\n    native: \"Norsk nynorsk\",\n  },\n  nl: {\n    English: \"Dutch\",\n    native: \"Nederlands\",\n  },\n  nr: {\n    English: \"Ndebele, South\",\n    native: \"isiNdebele\",\n  },\n  nso: {\n    English: \"Northern Sotho\",\n    native: \"Sepedi\",\n  },\n  oc: {\n    English: \"Occitan (Lengadocian)\",\n    native: \"occitan (lengadocian)\",\n  },\n  or: {\n    English: \"Odia\",\n    native: \"\\u0b13\\u0b21\\u0b3c\\u0b3f\\u0b06\",\n  },\n  pa: {\n    English: \"Punjabi\",\n    native: \"\\u0a2a\\u0a70\\u0a1c\\u0a3e\\u0a2c\\u0a40\",\n  },\n  \"pa-IN\": {\n    English: \"Punjabi (India)\",\n    native: \"\\u0a2a\\u0a70\\u0a1c\\u0a3e\\u0a2c\\u0a40 (\\u0a2d\\u0a3e\\u0a30\\u0a24)\",\n  },\n  pl: {\n    English: \"Polish\",\n    native: \"Polski\",\n  },\n  \"pt-BR\": {\n    English: \"Portuguese (Brazilian)\",\n    native: \"Portugu\\u00eas (do\\u00a0Brasil)\",\n  },\n  \"pt-PT\": {\n    English: \"Portuguese (Portugal)\",\n    native: \"Portugu\\u00eas (Europeu)\",\n  },\n  rm: {\n    English: \"Romansh\",\n    native: \"rumantsch\",\n  },\n  ru: {\n    English: \"Russian\",\n    native: \"\\u0420\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439\",\n  },\n  rw: {\n    English: \"Kinyarwanda\",\n    native: \"Ikinyarwanda\",\n  },\n  sa: {\n    English: \"Sanskrit\",\n    native: \"\\u0938\\u0902\\u0938\\u094d\\u0915\\u0943\\u0924\",\n  },\n  sat: {\n    English: \"Santali\",\n    native: \"\\u0938\\u0902\\u0924\\u093e\\u0932\\u0940\",\n  },\n  sah: {\n    English: \"Sakha\",\n    native: \"\\u0421\\u0430\\u0445\\u0430\\u043b\\u044b\\u044b\",\n  },\n  si: {\n    English: \"Sinhala\",\n    native: \"\\u0dc3\\u0dd2\\u0d82\\u0dc4\\u0dbd\",\n  },\n  sk: {\n    English: \"Slovak\",\n    native: \"sloven\\u010dina\",\n  },\n  sl: {\n    English: \"Slovenian\",\n    native: \"Sloven\\u0161\\u010dina\",\n  },\n  \"sr-Cyrl\": {\n    English: \"Serbian\",\n    native: \"\\u0421\\u0440\\u043f\\u0441\\u043a\\u0438\",\n  },\n  ss: {\n    English: \"Siswati\",\n    native: \"siSwati\",\n  },\n  st: {\n    English: \"Southern Sotho\",\n    native: \"Sesotho\",\n  },\n  \"sv-SE\": {\n    English: \"Swedish\",\n    native: \"Svenska\",\n  },\n  \"ta-IN\": {\n    English: \"Tamil (India)\",\n    native:\n      \"\\u0ba4\\u0bae\\u0bbf\\u0bb4\\u0bcd (\\u0b87\\u0ba8\\u0bcd\\u0ba4\\u0bbf\\u0baf\\u0bbe)\",\n  },\n  \"ta-LK\": {\n    English: \"Tamil (Sri Lanka)\",\n    native:\n      \"\\u0ba4\\u0bae\\u0bbf\\u0bb4\\u0bcd (\\u0b87\\u0bb2\\u0b99\\u0bcd\\u0b95\\u0bc8)\",\n  },\n  th: {\n    English: \"Thai\",\n    native: \"\\u0e44\\u0e17\\u0e22\",\n  },\n  tr: {\n    English: \"Turkish\",\n    native: \"T\\u00fcrk\\u00e7e\",\n  },\n  trs: {\n    English: \"Triqui\",\n    native: \"Triqui\",\n  },\n  ts: {\n    English: \"Tsonga\",\n    native: \"Xitsonga\",\n  },\n  tsz: {\n    English: \"Pur\\u00e9pecha\",\n    native: \"Pur\\u00e9pecha\",\n  },\n  \"tt-RU\": {\n    English: \"Tatar\",\n    native: \"Tatar\\u00e7a\",\n  },\n  uk: {\n    English: \"Ukrainian\",\n    native: \"\\u0423\\u043a\\u0440\\u0430\\u0457\\u043d\\u0441\\u044c\\u043a\\u0430\",\n  },\n  ur: {\n    English: \"Urdu\",\n    native: \"\\u0627\\u064f\\u0631\\u062f\\u0648\",\n  },\n  uz: {\n    English: \"Uzbek\",\n    native: \"O\\u02bbzbek tili\",\n  },\n  ve: {\n    English: \"Venda\",\n    native: \"Tshiven\\u1e13a\",\n  },\n  vi: {\n    English: \"Vietnamese\",\n    native: \"Ti\\u1ebfng Vi\\u1ec7t\",\n  },\n  \"x-testing\": {\n    English: \"Testing\",\n    native: \"\\u0166\\u1e17\\u015f\\u0167\\u012b\\u019e\\u0260\",\n  },\n  \"zh-CN\": {\n    English: \"Chinese (Simplified)\",\n    native: \"\\u4e2d\\u6587 (\\u7b80\\u4f53)\",\n  },\n  \"zh-TW\": {\n    English: \"Chinese (Traditional)\",\n    native: \"\\u6b63\\u9ad4\\u4e2d\\u6587 (\\u7e41\\u9ad4)\",\n  },\n};\n"],"names":["LANGUAGES","Map","Object","entries","LANGUAGES_RAW","map","_ref","locale","data","toLowerCase","SORT_OPTIONS","BadRequestError","Error","constructor","formErrors","super","concat","JSON","stringify","this","ServerOperationalError","statusCode","SearchResults","ga","useGA","searchParams","useSearchParams","useLocale","sp","createSearchParams","getAll","length","set","fetchURL","toString","error","useSWR","async","response","fetch","url","status","badRequest","json","errors","ok","xCacheHeaderValue","headers","get","hitType","eventCategory","eventAction","eventLabel","revalidateOnFocus","process","page","initialPage","setInitialPage","React","resultsElement","document","querySelector","scrollIntoView","behavior","_jsx","SearchErrorContainer","children","ExplainBadRequestError","ExplainServerOperationalError","_jsxs","currentPage","metadata","pageSize","size","hitCount","total","value","_Fragment","SortOptions","RemoteSearchWarning","Results","Pagination","maxPage","Loading","minHeight","message","WRITER_MODE","kumaHost","KUMA_HOST","NoteCard","type","querySort","className","_ref2","i","key","label","Link","to","appendURL","sort","_ref3","_ref4","keys","messages","code","_ref5","Button","onClickHandler","window","location","reload","_ref6","documents","suggestions","ShowTotal","took_ms","suggestion","q","text","undefined","_LANGUAGES$get","_LANGUAGES$get2","highlights","highlight","body","title","href","mdn_url","dangerouslySetInnerHTML","__html","has","English","summary","score","popularity","_ref7","relation","toLocaleString","_ref8","previousPage","nextPage","previousURL","overrides","forEach","Array","isArray","delete","v","append","ach","native","ak","an","ar","as","ast","azz","be","bg","bm","bn","br","brx","bs","ca","cak","csb","cy","da","dbg","de","dsb","el","eo","es","et","eu","fa","fi","fr","gd","gl","gn","gu","he","hi","hsb","hu","ia","id","is","it","ja","kab","kk","km","kn","ko","kok","ku","ks","la","lg","lij","lo","lt","ltg","lv","mai","mi","mk","mn","mr","ms","my","nl","nr","nso","oc","or","pa","pl","rm","ru","rw","sa","sat","sah","si","sk","sl","ss","st","th","tr","trs","ts","tsz","uk","ur","uz","ve","vi"],"sourceRoot":""}