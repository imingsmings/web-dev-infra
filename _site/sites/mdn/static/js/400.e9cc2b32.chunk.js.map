{"version":3,"file":"static/js/400.e9cc2b32.chunk.js","mappings":"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","sources":["plus/ai-help/use-ai.ts","plus/ai-help/banners.tsx","ui/atoms/thumbs/index.tsx","plus/ai-help/index.tsx","plus/ai-help/utils.ts","plus/common/login-banner.tsx"],"sourcesContent":["// Source: https://github.com/supabase/supabase/blob/0f1254252f6b066e088a40617f239744e3a1e22b/packages/ui/src/components/Command/AiCommand.tsx\n// License: Apache 2.0 - https://github.com/supabase/supabase/blob/0f1254252f6b066e088a40617f239744e3a1e22b/LICENSE\nimport type { OpenAI } from \"openai\";\nimport { useCallback, useEffect, useReducer, useRef, useState } from \"react\";\n\nimport { SSE } from \"sse.js\";\nimport useSWR from \"swr\";\n\nexport enum MessageRole {\n  User = \"user\",\n  Assistant = \"assistant\",\n}\n\nexport enum MessageStatus {\n  Pending = \"pending\",\n  InProgress = \"in-progress\",\n  Complete = \"complete\",\n  Stopped = \"stopped\",\n}\n\nexport interface Message {\n  role: MessageRole;\n  content: string;\n  status: MessageStatus;\n  sources?: PageReference[];\n}\n\ninterface NewMessageAction {\n  type: \"new\";\n  message: Message;\n}\n\ninterface UpdateMessageAction {\n  type: \"update\";\n  message: Partial<Message>;\n}\n\ninterface AppendContentAction {\n  type: \"append-content\";\n  content: string;\n}\n\ninterface SetSourcesAction {\n  type: \"set-sources\";\n  sources: PageReference[];\n}\n\ninterface ResetAction {\n  type: \"reset\";\n}\n\ntype MessageAction =\n  | NewMessageAction\n  | UpdateMessageAction\n  | AppendContentAction\n  | ResetAction\n  | SetSourcesAction;\n\ninterface PageReference {\n  url: string;\n  slug: string;\n  title: string;\n}\n\nexport interface Quota {\n  used: number;\n  remaining: number;\n  limit: number;\n}\n\nfunction messageReducer(state: Message[], messageAction: MessageAction) {\n  let newState = [...state];\n  const { type } = messageAction;\n\n  const index = state.length - 1;\n\n  switch (type) {\n    case \"new\": {\n      const { message } = messageAction;\n      newState.push(message);\n      break;\n    }\n    case \"update\": {\n      const { message } = messageAction;\n      newState[index] = {\n        ...state[index],\n        ...message,\n      };\n      break;\n    }\n    case \"append-content\": {\n      const { content } = messageAction;\n      newState[index] = {\n        ...state[index],\n        content: state[index].content + content,\n      };\n      break;\n    }\n    case \"set-sources\": {\n      const { sources } = messageAction;\n      newState[index] = {\n        ...state[index],\n        sources,\n      };\n      break;\n    }\n    case \"reset\": {\n      newState = [];\n      break;\n    }\n    default: {\n      throw new Error(`Unknown message action '${type}'`);\n    }\n  }\n\n  return newState;\n}\n\ninterface Storage {\n  messages?: Message[];\n}\n\nclass AiHelpStorage {\n  static KEY = \"ai-help\";\n\n  private static get value(): Storage {\n    return JSON.parse(window.localStorage.getItem(this.KEY) ?? \"{}\");\n  }\n\n  private static mutate(partial: Partial<Storage>) {\n    window.localStorage.setItem(\n      this.KEY,\n      JSON.stringify({\n        ...this.value,\n        ...partial,\n      })\n    );\n  }\n\n  static getMessages(): Message[] {\n    return this.value?.messages ?? [];\n  }\n\n  static setMessages(messages: Message[]) {\n    this.mutate({ messages });\n  }\n}\n\nexport interface UseAiChatOptions {\n  messageTemplate?: (message: string) => string;\n}\n\nexport function useAiChat({\n  messageTemplate = (message) => message,\n}: UseAiChatOptions = {}) {\n  const eventSourceRef = useRef<SSE>();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isResponding, setIsResponding] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [datas, dispatchData] = useReducer(\n    (state: any[], value: any) => (value === null ? [] : [...state, value]),\n    []\n  );\n\n  const [messages, dispatchMessage] = useReducer(\n    messageReducer,\n    undefined,\n    () => AiHelpStorage.getMessages()\n  );\n\n  const [quota, setQuota] = useState<Quota | null | undefined>(undefined);\n  const remoteQuota = useRemoteQuota();\n\n  useEffect(() => {\n    if (!isLoading && !isResponding && messages.length > 0) {\n      AiHelpStorage.setMessages(messages);\n    }\n  }, [isLoading, isResponding, messages]);\n\n  useEffect(() => {\n    if (remoteQuota !== undefined) {\n      setQuota(remoteQuota);\n    }\n  }, [remoteQuota]);\n\n  const handleError = useCallback((err: any) => {\n    setIsLoading(false);\n    setIsResponding(false);\n    setHasError(true);\n    console.error(err);\n  }, []);\n\n  const handleEventData = useCallback(\n    (data: any) => {\n      try {\n        dispatchData(data);\n        setIsLoading(false);\n\n        dispatchMessage({\n          type: \"update\",\n          message: {\n            status: MessageStatus.InProgress,\n          },\n        });\n\n        setIsResponding(true);\n\n        if (data.type === \"metadata\") {\n          const { sources = undefined, quota = undefined } = data;\n          // Sources.\n          if (Array.isArray(sources)) {\n            dispatchMessage({\n              type: \"set-sources\",\n              sources: sources,\n            });\n          }\n          // Quota.\n          if (typeof quota !== \"undefined\") {\n            setQuota(quota);\n          }\n          return;\n        }\n\n        if (!data.id) {\n          console.warn(\"Received unsupported message\", { data });\n          return;\n        }\n\n        const completionResponse: OpenAI.Chat.ChatCompletionChunk = data;\n        const [\n          {\n            delta: { content },\n            finish_reason,\n          },\n        ] = completionResponse.choices;\n\n        if (content) {\n          dispatchMessage({\n            type: \"append-content\",\n            content,\n          });\n        }\n\n        if (finish_reason) {\n          if (finish_reason !== \"stop\") {\n            // See: https://platform.openai.com/docs/guides/gpt/chat-completions-response-format\n            // - length (most likely) -> token limit exceeded,\n            // - function_call -> not applicable to our use case,\n            // - content_filter -> content flagged and omitted\n            console.warn(\"Got unexpected finish_reason\", { finish_reason });\n          }\n          const status =\n            finish_reason === \"stop\"\n              ? MessageStatus.Complete\n              : MessageStatus.Stopped;\n          setIsResponding(false);\n          dispatchMessage({\n            type: \"update\",\n            message: {\n              status,\n            },\n          });\n        }\n      } catch (err) {\n        handleError(err);\n      }\n    },\n    [handleError]\n  );\n\n  const submit = useCallback(\n    (query: string) => {\n      dispatchMessage({\n        type: \"new\",\n        message: {\n          status: MessageStatus.Complete,\n          role: MessageRole.User,\n          content: query,\n        },\n      });\n      dispatchMessage({\n        type: \"new\",\n        message: {\n          status: MessageStatus.Pending,\n          role: MessageRole.Assistant,\n          content: \"\",\n        },\n      });\n      setIsResponding(false);\n      setHasError(false);\n      setIsLoading(true);\n\n      // We send all completed in the conversation + the question the user asked.\n      // Note that `dispatchMessage()` above does not change `messages` here yet.\n      const completeMessagesAndUserQuery = messages\n        .filter(({ status }) => status === MessageStatus.Complete)\n        .map(({ role, content }) => ({ role, content }))\n        .concat({\n          role: MessageRole.User,\n          content: messageTemplate(query),\n        });\n\n      const eventSource = new SSE(`/api/v1/plus/ai/ask`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true,\n        payload: JSON.stringify({\n          messages: completeMessagesAndUserQuery,\n        }),\n      });\n\n      eventSource.addEventListener(\"error\", handleError);\n      eventSource.addEventListener(\"message\", (e: any) => {\n        const data = JSON.parse(e.data);\n\n        handleEventData(data);\n      });\n\n      eventSource.stream();\n\n      eventSourceRef.current = eventSource;\n\n      setIsLoading(true);\n    },\n    [messages, messageTemplate, handleError, handleEventData]\n  );\n\n  function useRemoteQuota() {\n    const { data } = useSWR<Quota>(\"/api/v1/plus/ai/ask/quota\", async (url) => {\n      const response = await fetch(url);\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`${response.status} on ${url}: ${text}`);\n      }\n      const data = await response.json();\n      return data.quota;\n    });\n\n    return data;\n  }\n\n  function resetLoadingState() {\n    eventSourceRef.current?.close();\n    eventSourceRef.current = undefined;\n    setIsLoading(false);\n    setIsResponding(false);\n    setHasError(false);\n    dispatchData(null);\n  }\n\n  function stop() {\n    resetLoadingState();\n    dispatchMessage({\n      type: \"update\",\n      message: {\n        status: MessageStatus.Stopped,\n      },\n    });\n  }\n\n  function reset() {\n    resetLoadingState();\n    dispatchMessage({\n      type: \"reset\",\n    });\n  }\n\n  return {\n    submit,\n    datas,\n    stop,\n    reset,\n    messages,\n    isLoading,\n    isResponding,\n    hasError,\n    quota,\n  };\n}\n","import { AI_HELP } from \"../../telemetry/constants\";\nimport { SignUpLink } from \"../../ui/atoms/signup-link\";\nimport { PlusLoginBanner } from \"../common/login-banner\";\n\nexport function AiLoginBanner() {\n  return (\n    <PlusLoginBanner gleanPrefix={AI_HELP}>\n      Want to use AI Help?\n    </PlusLoginBanner>\n  );\n}\n\nexport function AiUpsellBanner({ limit }: { limit: number }) {\n  return (\n    <div className=\"login-banner\">\n      <span>\n        <span>You have reached the limit of {limit} questions per day.</span>\n        <br />\n        <span>\n          <strong>Want to ask more?</strong> Upgrade to MDN Plus 5 or MDN\n          Supporter 10.\n        </span>\n      </span>\n      <ul className=\"auth-container\">\n        <li>\n          <SignUpLink\n            gleanContext={`${AI_HELP}: upsell-button`}\n            toPlans={true}\n          />\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { THUMBS } from \"../../../telemetry/constants\";\nimport { useGleanClick } from \"../../../telemetry/glean-context\";\nimport { Button } from \"../button\";\n\nimport \"./index.scss\";\n\nconst LOCAL_STORAGE_KEY = \"thumbs\";\n\nfunction getPreviouslySubmitted() {\n  try {\n    return JSON.parse(window?.localStorage?.getItem(LOCAL_STORAGE_KEY) ?? \"{}\");\n  } catch (e) {\n    console.warn(\"Unable to read thumbs state to localStorage\", e);\n    return {};\n  }\n}\n\nfunction isPreviouslySubmitted(feature: string): boolean {\n  try {\n    return feature in getPreviouslySubmitted();\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction markPreviouslySubmitted(feature: string, value: boolean) {\n  try {\n    window?.localStorage?.setItem(\n      LOCAL_STORAGE_KEY,\n      JSON.stringify({\n        ...getPreviouslySubmitted(),\n        [feature]: {\n          submitted_at: Date.now(),\n          value,\n        },\n      })\n    );\n  } catch (e) {\n    console.warn(\"Unable to write thumbs state to localStorage\", e);\n  }\n}\n\nexport function GleanThumbs({\n  feature,\n  question = \"Is this feature useful?\",\n  confirmation = \"Thank you for your feedback! ❤️\",\n  upLabel = \"This feature is useful.\",\n  downLabel = \"This feature is not useful.\",\n  permanent = false,\n}: {\n  feature: string;\n  question?: string;\n  confirmation?: string;\n  upLabel?: string;\n  downLabel?: string;\n  permanent?: boolean;\n}) {\n  const [previouslySubmitted, setPreviouslySubmitted] = useState(true);\n  const [submitted, setSubmitted] = useState(false);\n  const gleanClick = useGleanClick();\n\n  useEffect(() => {\n    setPreviouslySubmitted(!permanent && isPreviouslySubmitted(feature));\n  }, [feature, permanent, setPreviouslySubmitted]);\n\n  const handleThumbs = (value: \"up\" | \"down\") => {\n    gleanClick(`${THUMBS}: ${feature} -> ${value === \"up\" ? 1 : 0}`);\n    setSubmitted(true);\n    if (!permanent) {\n      markPreviouslySubmitted(feature, value === \"up\");\n    }\n  };\n\n  return (\n    <>\n      {!previouslySubmitted && (\n        <section className=\"glean-thumbs\">\n          {!submitted ? (\n            <>\n              {question && <span className=\"question\">{question}</span>}\n              <Thumbs\n                upLabel={upLabel}\n                downLabel={downLabel}\n                onThumbsUp={() => handleThumbs(\"up\")}\n                onThumbsDown={() => handleThumbs(\"down\")}\n              />\n            </>\n          ) : (\n            confirmation && <span className=\"confirmation\">{confirmation}</span>\n          )}\n        </section>\n      )}\n    </>\n  );\n}\n\nexport function Thumbs({\n  upLabel = \"Thumbs up\",\n  downLabel = \"Thumbs down\",\n  onThumbsUp,\n  onThumbsDown,\n  size,\n}: {\n  upLabel?: string;\n  downLabel?: string;\n  onThumbsUp: React.MouseEventHandler;\n  onThumbsDown: React.MouseEventHandler;\n  size?: \"small\" | \"medium\";\n}) {\n  return (\n    <>\n      <Button\n        type=\"action\"\n        extraClasses={\"thumbs\"}\n        icon=\"thumbs-up\"\n        size={size}\n        onClickHandler={onThumbsUp}\n        title={upLabel}\n      >\n        <span className=\"visually-hidden\">{upLabel}</span>\n      </Button>\n      <Button\n        type=\"action\"\n        extraClasses={\"thumbs\"}\n        icon=\"thumbs-down\"\n        size={size}\n        onClickHandler={onThumbsDown}\n        title={downLabel}\n      >\n        <span className=\"visually-hidden\">{downLabel}</span>\n      </Button>\n    </>\n  );\n}\n","import Prism from \"prismjs\";\nimport {\n  Children,\n  MutableRefObject,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport { Message, MessageRole, Quota, useAiChat } from \"./use-ai\";\nimport { AiLoginBanner, AiUpsellBanner } from \"./banners\";\nimport { useUserData } from \"../../user-context\";\nimport Container from \"../../ui/atoms/container\";\nimport { FeatureId, MDN_PLUS_TITLE } from \"../../constants\";\nimport { useScrollToTop, useViewedState } from \"../../hooks\";\nimport { Icon } from \"../../ui/atoms/icon\";\nimport Mandala from \"../../ui/molecules/mandala\";\n\nimport \"./index.scss\";\nimport { Avatar } from \"../../ui/atoms/avatar\";\nimport { Button } from \"../../ui/atoms/button\";\nimport { GleanThumbs } from \"../../ui/atoms/thumbs\";\nimport NoteCard from \"../../ui/molecules/notecards\";\nimport { Loading } from \"../../ui/atoms/loading\";\nimport { useLocation } from \"react-router-dom\";\nimport { isExternalUrl } from \"./utils\";\nimport { useGleanClick } from \"../../telemetry/glean-context\";\nimport { AI_HELP } from \"../../telemetry/constants\";\nimport MDNModal from \"../../ui/atoms/modal\";\nimport { AI_FEEDBACK_GITHUB_REPO } from \"../../env\";\n\ntype Category = \"apis\" | \"css\" | \"html\" | \"http\" | \"js\" | \"learn\";\n\nconst EXAMPLES: { category: Category; query: string }[] = [\n  {\n    category: \"css\",\n    query: \"How to center a div with CSS?\",\n  },\n  {\n    category: \"html\",\n    query: \"How do I create a form in HTML?\",\n  },\n  {\n    category: \"js\",\n    query: \"How can I sort an Array in JavaScript?\",\n  },\n  {\n    category: \"apis\",\n    query: \"How can I use the Fetch API to make HTTP requests in JavaScript?\",\n  },\n  {\n    category: \"http\",\n    query: \"How can I redirect using HTTP?\",\n  },\n  {\n    category: \"learn\",\n    query: \"What are some accessibility best practices?\",\n  },\n];\n\nexport default function AiHelp() {\n  document.title = `AI Help | ${MDN_PLUS_TITLE}`;\n  useScrollToTop();\n  const user = useUserData();\n  const { setViewed } = useViewedState();\n  useEffect(() => setViewed(FeatureId.PLUS_AI_HELP));\n\n  return (\n    <div className=\"ai-help\">\n      <header className=\"plus-header-mandala\">\n        <Container>\n          <h1>\n            <div className=\"mandala-icon-wrapper\">\n              <Mandala />\n              <Icon name=\"chatgpt\" />\n            </div>\n            <span>AI Help</span>\n          </h1>\n          <p>\n            Get answers using generative AI based on MDN content.\n            <br />\n            <a\n              href={\n                user?.isAuthenticated\n                  ? \"https://survey.alchemer.com/s3/7418589/MDN-AI-Help-Feedback\"\n                  : \"https://survey.alchemer.com/s3/7405739/MDN-AI-Help\"\n              }\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              className=\"external\"\n            >\n              We'd love to hear your feedback!\n            </a>\n          </p>\n        </Container>\n      </header>\n      <Container>\n        <div className=\"notecard experimental\">\n          <p>\n            <strong>This is a beta feature.</strong>\n            <br />\n            May occasionally generate incorrect answers. Please always verify\n            information independently.\n            <br />\n            <a href=\"/en-US/blog/introducing-ai-help/\">\n              <strong>Learn more</strong>\n            </a>\n          </p>\n        </div>\n      </Container>\n      <Container>\n        {user?.isAuthenticated ? <AIHelpInner /> : <AiLoginBanner />}\n      </Container>\n    </div>\n  );\n}\n\nconst SORRY_BACKEND = \"Sorry, I don't know how to help with that.\";\nconst SORRY_FRONTEND =\n  \"Sorry, I don’t know how to help with that.\\n\\nPlease keep in mind that I am only limited to answer based on the MDN documentation.\";\n\nexport function AIHelpInner() {\n  const formRef = useRef<HTMLFormElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const bodyRef = useRef<HTMLDivElement>(null);\n  const footerRef = useRef<HTMLDivElement>(null);\n  const [query, setQuery] = useState(\"\");\n  const [isExample, setIsExample] = useState(false);\n  const [showDisclaimer, setShowDisclaimer] = useState(false);\n  const { hash } = useLocation();\n  const gleanClick = useGleanClick();\n\n  const {\n    isLoading,\n    isResponding,\n    hasError,\n    datas,\n    messages,\n    quota,\n    reset,\n    stop,\n    submit,\n  } = useAiChat();\n\n  const isQuotaLoading = quota === undefined;\n  const hasQuota = !isQuotaLoading && quota !== null;\n  const hasConversation = messages.length > 0;\n\n  function isQuotaExceeded(quota: Quota | null | undefined): quota is Quota {\n    return quota ? quota.remaining <= 0 : false;\n  }\n\n  function placeholder(status: string) {\n    if (!hasQuota) {\n      return status;\n    }\n\n    return `${status} (${quota.remaining} ${\n      quota.remaining === 1 ? \"question\" : \"questions\"\n    } remaining today)`;\n  }\n\n  const { autoScroll, setAutoScroll } = useAutoScroll(messages, {\n    bodyRef,\n    footerRef,\n  });\n\n  useEffect(() => {\n    // Focus input:\n    // - When the user loads the page (-> isQuotaLoading).\n    // - When the user starts a \"New chat\" (-> hasConversation).\n    const input = inputRef.current;\n    if (input) {\n      window.setTimeout(() => input.focus());\n    }\n  }, [isQuotaLoading, hasConversation]);\n\n  return isQuotaLoading ? (\n    <Loading />\n  ) : (\n    <section\n      className={[\"ai-help-inner\", query.trim() && \"has-input\"]\n        .filter(Boolean)\n        .join(\" \")}\n    >\n      {hasConversation && (\n        <div ref={bodyRef} className=\"ai-help-body\">\n          <ul className=\"ai-help-messages\">\n            {messages.map((message, index) => (\n              <li\n                key={index}\n                className={[\n                  \"ai-help-message\",\n                  `role-${message.role}`,\n                  `status-${message.status}`,\n                ].join(\" \")}\n              >\n                <div className=\"ai-help-message-role\">\n                  <RoleIcon role={message.role} />\n                </div>\n                <div\n                  className={[\n                    \"ai-help-message-content\",\n                    !message.content && \"empty\",\n                  ]\n                    .filter(Boolean)\n                    .join(\" \")}\n                >\n                  {message.role === \"user\" ? (\n                    message.content\n                  ) : (\n                    <>\n                      <ReactMarkdown\n                        remarkPlugins={[remarkGfm]}\n                        components={{\n                          a: ({ node, ...props }) => {\n                            if (isExternalUrl(props.href ?? \"\")) {\n                              props = {\n                                ...props,\n                                className: \"external\",\n                                rel: \"noopener noreferrer\",\n                                target: \"_blank\",\n                              };\n                            }\n                            // eslint-disable-next-line jsx-a11y/anchor-has-content\n                            return <a {...props} />;\n                          },\n                          pre: ({ node, className, children, ...props }) => {\n                            const code = Children.toArray(children)\n                              .map(\n                                (child) =>\n                                  /language-(\\w+)/.exec(\n                                    (child as ReactElement)?.props?.className ||\n                                      \"\"\n                                  )?.[1]\n                              )\n                              .find(Boolean);\n\n                            if (!code) {\n                              return (\n                                <pre {...props} className={className}>\n                                  {children}\n                                </pre>\n                              );\n                            }\n                            return (\n                              <div className=\"code-example\">\n                                <p className=\"example-header\">\n                                  <span className=\"language-name\">{code}</span>\n                                </p>\n                                <pre className={`brush: ${code}`}>\n                                  {children}\n                                </pre>\n                              </div>\n                            );\n                          },\n                          code: ({ className, children, ...props }) => {\n                            const match = /language-(\\w+)/.exec(\n                              className || \"\"\n                            );\n                            const lang = Prism.languages[match?.[1]];\n                            return lang ? (\n                              <code\n                                {...props}\n                                className={className}\n                                dangerouslySetInnerHTML={{\n                                  __html: Prism.highlight(\n                                    String(children),\n                                    lang\n                                  ),\n                                }}\n                              />\n                            ) : (\n                              <code {...props} className={className}>\n                                {children}\n                              </code>\n                            );\n                          },\n                        }}\n                      >\n                        {message.content.replace(SORRY_BACKEND, SORRY_FRONTEND)}\n                      </ReactMarkdown>\n                      {message.status === \"complete\" &&\n                        !message.content.includes(SORRY_BACKEND) && (\n                          <>\n                            {message.sources && message.sources.length > 0 && (\n                              <>\n                                <p>\n                                  MDN content that I've consulted that you might\n                                  want to check:\n                                </p>\n                                <ul>\n                                  {message.sources.map(\n                                    ({ url, title }, index) => (\n                                      <li key={index}>\n                                        <a href={url}>{title}</a>\n                                      </li>\n                                    )\n                                  )}\n                                </ul>\n                              </>\n                            )}\n                            <section className=\"ai-help-feedback\">\n                              <GleanThumbs\n                                feature=\"ai-help-answer\"\n                                question={\"Was this answer useful?\"}\n                                upLabel={\"Yes, this answer was useful.\"}\n                                downLabel={\"No, this answer was not useful.\"}\n                                permanent={true}\n                              />\n                              <ReportIssueOnGitHubLink\n                                messages={messages}\n                                currentMessage={message}\n                              >\n                                Report an issue with this answer on GitHub\n                              </ReportIssueOnGitHubLink>\n                            </section>\n                          </>\n                        )}\n                    </>\n                  )}\n                </div>\n                {index === 0 && (\n                  <div className=\"ai-help-actions\">\n                    <Button\n                      type=\"action\"\n                      isDisabled={isQuotaExceeded(quota)}\n                      extraClasses=\"ai-help-reset-button\"\n                      onClickHandler={() => {\n                        gleanClick(`${AI_HELP}: reset`);\n                        setQuery(\"\");\n                        setIsExample(false);\n                        reset();\n                        window.setTimeout(() => window.scrollTo(0, 0));\n                      }}\n                    >\n                      + New chat\n                    </Button>\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {hasError && (\n        <NoteCard extraClasses=\"ai-help-error\" type=\"error\">\n          <h4>Error</h4>\n          <p>An error occurred. Please try again.</p>\n        </NoteCard>\n      )}\n      <div ref={footerRef} className=\"ai-help-footer\">\n        {(isLoading || isResponding) && (\n          <div className=\"ai-help-footer-actions\">\n            <Button\n              type=\"action\"\n              extraClasses=\"ai-help-stop-button\"\n              onClickHandler={() => {\n                gleanClick(`${AI_HELP}: stop`);\n                stop();\n              }}\n            >\n              ⏹ Stop answering\n            </Button>\n            <Button\n              type=\"action\"\n              isDisabled={autoScroll}\n              extraClasses=\"ai-help-scroll-button\"\n              onClickHandler={() => setAutoScroll(true)}\n            >\n              ↓ Enable auto-scroll\n            </Button>\n          </div>\n        )}\n        {isQuotaExceeded(quota) ? (\n          <AiUpsellBanner limit={quota.limit} />\n        ) : (\n          <>\n            <form\n              ref={formRef}\n              className=\"ai-help-input-form\"\n              onSubmit={(event) => {\n                event.preventDefault();\n                const questionNumber =\n                  1 +\n                  messages.filter((m) => m.role === MessageRole.User).length;\n                gleanClick(\n                  `${AI_HELP}: submit ${\n                    isExample ? \"example\" : \"question\"\n                  } ${questionNumber}`\n                );\n                if (query.trim()) {\n                  submit(query.trim());\n                  setQuery(\"\");\n                  setIsExample(false);\n                  setAutoScroll(true);\n                }\n              }}\n            >\n              <input\n                ref={inputRef}\n                disabled={isLoading || isResponding}\n                type=\"text\"\n                onChange={(event) => {\n                  setQuery(event.target.value);\n                  setIsExample(false);\n                }}\n                value={query}\n                placeholder={placeholder(\n                  isLoading\n                    ? \"Requesting answer...\"\n                    : isResponding\n                    ? \"Receiving answer...\"\n                    : \"Ask your question\"\n                )}\n              />\n              <Button\n                type=\"action\"\n                icon=\"send\"\n                buttonType=\"submit\"\n                title=\"Submit question\"\n                isDisabled={!query}\n              >\n                <span className=\"visually-hidden\">Submit question</span>\n              </Button>\n            </form>\n            <div className=\"ai-help-footer-text\">\n              <span>\n                Results based on MDN's most recent documentation and powered by\n                GPT-3.5, an LLM by{\" \"}\n                <a\n                  href=\"https://platform.openai.com/docs/api-reference/models\"\n                  className=\"external\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  OpenAI\n                </a>\n                . Please verify information independently as LLM responses may\n                not be 100% accurate. Read our{\" \"}\n                <Button\n                  type=\"link\"\n                  onClickHandler={() => setShowDisclaimer(true)}\n                >\n                  full guidance\n                </Button>{\" \"}\n                for more details.\n              </span>\n              <MDNModal\n                isOpen={showDisclaimer}\n                onRequestClose={() => setShowDisclaimer(false)}\n              >\n                <header className=\"modal-header\">\n                  <h2 className=\"modal-heading\">AI Help Usage Guidance</h2>\n                  <Button\n                    onClickHandler={() => setShowDisclaimer(false)}\n                    type=\"action\"\n                    icon=\"cancel\"\n                    extraClasses=\"close-button\"\n                  />\n                </header>\n                <div className=\"modal-body\">\n                  <p>\n                    Our AI Help feature employs GPT-3.5, a Large Language Model\n                    (LLM) developed by{\" \"}\n                    <a\n                      href=\"https://platform.openai.com/docs/api-reference/models\"\n                      className=\"external\"\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      OpenAI\n                    </a>\n                    . While it's designed to offer helpful and relevant\n                    information drawn from MDN's comprehensive documentation,\n                    it's important to bear in mind that it is an LLM and may not\n                    produce perfectly accurate information in every\n                    circumstance.\n                  </p>\n                  <p>\n                    We strongly advise all users to cross-verify the information\n                    generated by this AI Help feature, particularly for complex\n                    or critical topics. While we strive for accuracy and\n                    relevance, the nature of AI means that responses may vary in\n                    precision.\n                  </p>\n                  <p>\n                    The AI Help feature provides links at the end of its\n                    responses to support further reading and verification within\n                    the MDN documentation. These links are intended to\n                    facilitate deeper understanding and context.\n                  </p>\n                  <p>\n                    As you use the AI Help feature, keep in mind its nature as\n                    an LLM. It's not perfect, but it's here to assist you as\n                    best as it can. We're excited to have you try AI Help, and\n                    we hope it makes your MDN experience even better.\n                  </p>\n                </div>\n              </MDNModal>\n            </div>\n          </>\n        )}\n      </div>\n      {!hasConversation && !query && !isQuotaExceeded(quota) && (\n        <section className=\"ai-help-examples\">\n          <header>Examples</header>\n          {EXAMPLES.map(({ category, query }, index) => (\n            <button\n              key={index}\n              type=\"button\"\n              className={[\"ai-help-example\", `category-${category}`].join(\" \")}\n              onClick={() => {\n                gleanClick(`${AI_HELP}: example`);\n                setQuery(query);\n                setIsExample(true);\n                inputRef.current?.focus();\n                window.setTimeout(() => window.scrollTo(0, 0));\n              }}\n            >\n              {query}\n            </button>\n          ))}\n        </section>\n      )}\n      {hash === \"#debug\" && <pre>{JSON.stringify(datas, null, 2)}</pre>}\n    </section>\n  );\n}\n\nexport function RoleIcon({ role }: { role: \"user\" | \"assistant\" }) {\n  const userData = useUserData();\n\n  switch (role) {\n    case \"user\":\n      return <Avatar userData={userData} />;\n\n    case \"assistant\":\n      return <Icon name=\"chatgpt\" />;\n  }\n}\n\nfunction useAutoScroll(\n  dependency,\n  {\n    bodyRef,\n    footerRef,\n  }: {\n    bodyRef: MutableRefObject<HTMLElement | null>;\n    footerRef: MutableRefObject<HTMLElement | null>;\n  }\n) {\n  const [autoScroll, setAutoScroll] = useState(true);\n  const lastScrollY = useRef(0);\n  const lastHeight = useRef(0);\n\n  useEffect(() => {\n    const body = (bodyRef.current ??=\n      document.querySelector<HTMLElement>(\".ai-help-body\"));\n    const footer = (footerRef.current ??=\n      document.querySelector<HTMLElement>(\".ai-help-footer\"));\n\n    if (!body || !footer) {\n      return;\n    }\n\n    window.setTimeout(() => {\n      const { offsetTop, offsetHeight } = body;\n      const elementBottom = offsetTop + offsetHeight + footer.offsetHeight;\n      const targetScrollY = elementBottom - window.innerHeight;\n\n      // Only scroll if our element grew and the target scroll position is further down.\n      const shouldScroll =\n        lastHeight.current < offsetHeight &&\n        lastScrollY.current < targetScrollY;\n\n      lastHeight.current = offsetHeight;\n      lastScrollY.current = window.scrollY;\n\n      if (autoScroll && shouldScroll) {\n        window.scrollTo(0, targetScrollY);\n      }\n    });\n\n    const scrollListener = () => {\n      const { offsetTop, offsetHeight } = body;\n      const { innerHeight, scrollY } = window;\n      const elementBottom = offsetTop + offsetHeight + footer.offsetHeight;\n      const windowBottom = scrollY + innerHeight;\n      const isBottomVisible =\n        scrollY <= elementBottom && elementBottom <= windowBottom;\n\n      const scrollOffset = scrollY - lastScrollY.current;\n      if (autoScroll && scrollOffset < 0 && !isBottomVisible) {\n        // User scrolled up.\n        setAutoScroll(false);\n      } else if (!autoScroll && scrollOffset > 0 && isBottomVisible) {\n        // User scrolled down again.\n        setAutoScroll(true);\n      }\n      lastScrollY.current = scrollY;\n    };\n    window.addEventListener(\"scroll\", scrollListener);\n\n    return () => window.removeEventListener(\"scroll\", scrollListener);\n  }, [autoScroll, bodyRef, dependency, footerRef]);\n\n  return {\n    autoScroll,\n    setAutoScroll,\n  };\n}\n\nfunction ReportIssueOnGitHubLink({\n  messages,\n  currentMessage,\n  children,\n}: {\n  messages: Message[];\n  currentMessage: Message;\n  children: React.ReactNode;\n}) {\n  const currentMessageIndex = messages.indexOf(currentMessage);\n  const questions = messages\n    .slice(0, currentMessageIndex)\n    .filter((message) => message.role === MessageRole.User)\n    .map(({ content }) => content);\n  const lastQuestion = questions.at(-1);\n\n  const url = new URL(\"https://github.com/\");\n  url.pathname = `/${AI_FEEDBACK_GITHUB_REPO}/issues/new`;\n\n  const sp = new URLSearchParams();\n  sp.set(\"title\", `[AI Help] Question: ${lastQuestion}`);\n  sp.set(\"questions\", questions.map((question) => `1. ${question}`).join(\"\\n\"));\n  sp.set(\"answer\", currentMessage.content);\n  sp.set(\n    \"sources\",\n    currentMessage.sources\n      ?.map(\n        (source) =>\n          `- [${source.title}](https://developer.mozilla.org${source.url})`\n      )\n      .join(\"\\n\") ?? \"(None)\"\n  );\n  sp.set(\"template\", \"ai-help-answer.yml\");\n\n  url.search = sp.toString();\n\n  return (\n    <a\n      href={url.href}\n      className=\"external\"\n      title=\"This will take you to GitHub to file a new issue.\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children}\n    </a>\n  );\n}\n","export function isExternalUrl(url: string) {\n  return url.startsWith(\"//\") || !url.startsWith(\"/\");\n}\n","import { useGleanClick } from \"../../telemetry/glean-context\";\nimport { AuthContainer } from \"../../ui/molecules/auth-container\";\nimport { usePlusUrl } from \"../utils\";\nimport \"./login-banner.scss\";\n\nexport function PlusLoginBanner({\n  children,\n  className = \"login-banner\",\n  gleanPrefix,\n}: {\n  children: React.ReactNode;\n  className?: string;\n  gleanPrefix: string;\n}) {\n  const href = usePlusUrl();\n  const gleanClick = useGleanClick();\n\n  return (\n    <div className={className}>\n      <span>\n        <span>{children}</span>{\" \"}\n        <strong>\n          Upgrade to{\" \"}\n          <a\n            className=\"plus-link\"\n            href={href}\n            onClick={() => gleanClick(`${gleanPrefix}: banner-link`)}\n          >\n            MDN Plus\n          </a>{\" \"}\n          for free.\n        </strong>\n      </span>\n      <AuthContainer\n        logInGleanContext={`${gleanPrefix}: banner-login`}\n        signUpGleanContext={`${gleanPrefix}: banner-signup`}\n      />\n    </div>\n  );\n}\n"],"names":["MessageRole","MessageStatus","messageReducer","state","messageAction","newState","type","index","length","message","push","content","sources","Error","concat","AiHelpStorage","value","_window$localStorage$","JSON","parse","window","localStorage","getItem","this","KEY","partial","setItem","stringify","static","_this$value$messages","_this$value","messages","mutate","AiLoginBanner","_jsx","PlusLoginBanner","gleanPrefix","AI_HELP","children","AiUpsellBanner","_ref","limit","_jsxs","className","SignUpLink","gleanContext","toPlans","LOCAL_STORAGE_KEY","getPreviouslySubmitted","_window","_window$localStorage","e","console","warn","GleanThumbs","feature","question","confirmation","upLabel","downLabel","permanent","previouslySubmitted","setPreviouslySubmitted","useState","submitted","setSubmitted","gleanClick","useGleanClick","useEffect","isPreviouslySubmitted","handleThumbs","THUMBS","_window2","_window2$localStorage","submitted_at","Date","now","markPreviouslySubmitted","_Fragment","Thumbs","onThumbsUp","onThumbsDown","_ref2","size","Button","extraClasses","icon","onClickHandler","title","EXAMPLES","category","query","AiHelp","document","MDN_PLUS_TITLE","useScrollToTop","user","useUserData","setViewed","useViewedState","FeatureId","PLUS_AI_HELP","Container","Mandala","Icon","name","href","isAuthenticated","target","rel","AIHelpInner","SORRY_BACKEND","SORRY_FRONTEND","formRef","useRef","inputRef","bodyRef","footerRef","setQuery","isExample","setIsExample","showDisclaimer","setShowDisclaimer","hash","useLocation","isLoading","isResponding","hasError","datas","quota","reset","stop","submit","messageTemplate","arguments","undefined","eventSourceRef","setIsLoading","setIsResponding","setHasError","dispatchData","useReducer","dispatchMessage","getMessages","setQuota","remoteQuota","data","useSWR","async","response","fetch","url","ok","text","status","json","useRemoteQuota","setMessages","handleError","useCallback","err","error","handleEventData","InProgress","Array","isArray","id","completionResponse","delta","finish_reason","choices","Complete","Stopped","resetLoadingState","_eventSourceRef$curre","current","close","role","User","Pending","Assistant","completeMessagesAndUserQuery","filter","map","eventSource","SSE","headers","withCredentials","payload","addEventListener","stream","useAiChat","isQuotaLoading","hasQuota","hasConversation","isQuotaExceeded","remaining","autoScroll","setAutoScroll","dependency","_ref7","lastScrollY","lastHeight","_bodyRef$current","_footerRef$current","body","querySelector","footer","setTimeout","offsetTop","offsetHeight","targetScrollY","innerHeight","shouldScroll","scrollY","scrollTo","scrollListener","elementBottom","isBottomVisible","scrollOffset","removeEventListener","useAutoScroll","input","focus","Loading","trim","Boolean","join","ref","RoleIcon","ReactMarkdown","remarkPlugins","remarkGfm","components","a","_props$href","node","props","startsWith","pre","code","Children","toArray","child","_exec","_props","exec","find","_ref3","match","lang","Prism","dangerouslySetInnerHTML","__html","String","replace","includes","_ref4","ReportIssueOnGitHubLink","currentMessage","isDisabled","NoteCard","onSubmit","event","preventDefault","questionNumber","m","disabled","onChange","placeholder","buttonType","MDNModal","isOpen","onRequestClose","_ref5","onClick","_inputRef$current","_ref6","userData","Avatar","_ref8","_currentMessage$sourc","_currentMessage$sourc2","currentMessageIndex","indexOf","questions","slice","_ref9","lastQuestion","at","URL","pathname","AI_FEEDBACK_GITHUB_REPO","sp","URLSearchParams","set","source","search","toString","usePlusUrl","AuthContainer","logInGleanContext","signUpGleanContext"],"sourceRoot":""}