{"version":3,"file":"static/js/211.b58358c5.chunk.js","mappings":"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","sources":["flaws/index.tsx","flaw-utils.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { createSearchParams, Link, useSearchParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\n\nimport \"./index.scss\";\n\nimport { humanizeFlawName } from \"../flaw-utils\";\nimport { MainContentContainer } from \"../ui/atoms/page-content\";\nimport { useLocale } from \"../hooks\";\n\ninterface DocumentPopularity {\n  value: number;\n  ranking: number;\n}\n\ninterface DocumentFlaws {\n  name: string;\n  value: number | string;\n  countFixable: number;\n}\ninterface Document {\n  mdn_url: string;\n  modified: string;\n  title: string;\n  popularity: DocumentPopularity;\n  flaws: DocumentFlaws[];\n}\n\ntype Count = { [key: string]: number };\n\ninterface FlawsCounts {\n  total: number;\n  fixable: number;\n  type: Count;\n  macros: Count;\n}\n\ninterface Counts {\n  found: number;\n  built: number;\n  pages: number;\n  flaws: FlawsCounts;\n}\n\ninterface Times {\n  built: number;\n}\n\ninterface FlawLevel {\n  name: string;\n  level: string;\n  ignored: boolean;\n}\n\ninterface Data {\n  counts: Counts;\n  documents: Document[];\n  times: Times;\n  flawLevels: FlawLevel[];\n}\n\ninterface Filters {\n  mdn_url: string;\n  title: string;\n  popularity: string;\n  fixableFlaws: string;\n  flaws: string[];\n  page: number;\n  sort_by: string;\n  sort_reverse: boolean;\n  search_flaws: string[];\n}\n\nconst defaultFilters: Filters = Object.freeze({\n  mdn_url: \"\",\n  title: \"\",\n  popularity: \"\",\n  fixableFlaws: \"\",\n  flaws: [],\n  page: 1,\n  sort_by: \"popularity\",\n  sort_reverse: false,\n  search_flaws: [],\n});\n\nfunction withoutDefaultFilters(filters: Filters): Partial<Filters> {\n  return Object.fromEntries(\n    Object.entries(filters).filter(\n      ([key, value]) =>\n        JSON.stringify(defaultFilters[key]) !== JSON.stringify(value)\n    )\n  );\n}\n\n/**\n * Returns an array where\n * first element is the currently set (or default) filters\n * second element is a function to update a given set of partial filters.\n * NOTE: This only changes the given filters, and doesn't reset what is missing\n */\nfunction useFiltersURL(): [Filters, (filters: Partial<Filters>) => void] {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function groupParamsByKey(params: URLSearchParams): any {\n    return [...params.entries()].reduce((acc, tuple) => {\n      // getting the key and value from each tuple\n      const [key, val] = tuple;\n      if (Object.prototype.hasOwnProperty.call(acc, key)) {\n        // if the current key is already an array, we'll add the value to it\n        if (Array.isArray(acc[key])) {\n          acc[key] = [...acc[key], val];\n        } else {\n          // if it's not an array, but contains a value, we'll convert it into an array\n          // and add the current value to it\n          acc[key] = [acc[key], val];\n        }\n      } else {\n        // plain assignment if no special case is present\n        acc[key] = val;\n      }\n      return acc;\n    }, {});\n  }\n\n  const filters = useMemo(() => {\n    const searchParamsObject = groupParamsByKey(searchParams);\n    if (searchParamsObject.page) {\n      searchParamsObject.page = parseInt(searchParamsObject.page);\n    }\n    return { ...defaultFilters, ...searchParamsObject };\n  }, [searchParams]);\n\n  const updateFiltersURL = useCallback(\n    (partialFilters: Partial<Filters>) => {\n      const newSearchParams = withoutDefaultFilters({\n        ...filters,\n        ...partialFilters,\n      }) as Record<string, string | string[]>;\n      setSearchParams(newSearchParams);\n    },\n    [filters, setSearchParams]\n  );\n\n  const mustBeArrayKeys = [\"flaws\", \"search_flaws\"];\n  for (const key of mustBeArrayKeys) {\n    if (filters[key] && !Array.isArray(filters[key])) {\n      filters[key] = [filters[key]];\n    }\n  }\n\n  return [filters, updateFiltersURL];\n}\n\nexport default function AllFlaws() {\n  const locale = useLocale();\n  const [filters] = useFiltersURL();\n  const [lastData, setLastData] = useState<Data | null>(null);\n\n  useEffect(() => {\n    let title = \"Documents with flaws\";\n    if (lastData) {\n      title = `(${lastData.counts.found.toLocaleString()} found) ${title}`;\n    }\n    document.title = title;\n  }, [lastData]);\n\n  const getAPIUrl = useCallback(() => {\n    const { sort_by, sort_reverse, page, ...restFilters } = filters;\n    const params = createSearchParams({\n      ...restFilters,\n      page: String(page),\n      locale,\n      sort: sort_by,\n      reverse: JSON.stringify(sort_reverse),\n    });\n    return `/_flaws?${params.toString()}`;\n  }, [locale, filters]);\n\n  const { data, error, isValidating } = useSWR<Data, Error>(\n    getAPIUrl(),\n    async (url) => {\n      let response;\n      try {\n        response = await fetch(url);\n      } catch (ex) {\n        throw ex;\n      }\n      if (!response.ok) {\n        throw new Error(`${response.status} on ${url}`);\n      }\n      if (!response.headers.get(\"content-type\").includes(\"application/json\")) {\n        throw new Error(\n          `Response is not JSON (${response.headers.get(\"content-type\")})`\n        );\n      }\n      // Always return a promise!\n      return response.json();\n    },\n    {\n      // revalidateOnFocus: false\n    }\n  );\n\n  useEffect(() => {\n    if (data) {\n      setLastData(data);\n    }\n  }, [data]);\n\n  // XXX there's something weird about this logic\n  let loading: React.ReactNode = <small>&nbsp;</small>;\n  if (!data && !error) {\n    if (lastData) {\n      loading = <small>Reloading...</small>;\n    } else {\n      loading = <small>Loading...</small>;\n    }\n  } else if (isValidating) {\n    loading = <small>Reloading...</small>;\n  }\n\n  const { page } = filters;\n  const pageCount = lastData ? lastData.counts.pages : 0;\n  return (\n    <MainContentContainer className=\"all-flaws\" standalone={true}>\n      {loading}\n      {error && <ShowSearchError error={error} />}\n      {lastData && (\n        <div className=\"filter-documents\">\n          <FilterControls flawLevels={lastData.flawLevels} />\n          <DocumentsTable\n            locale={locale}\n            counts={lastData.counts}\n            documents={lastData.documents}\n            pageCount={pageCount}\n            page={page}\n          />\n        </div>\n      )}\n      {data && data.counts && <AllFlawCounts counts={data.counts.flaws} />}\n      {data && <BuildTimes times={data.times} />}\n    </MainContentContainer>\n  );\n}\n\nfunction ShowSearchError({ error }) {\n  return (\n    <div className=\"error-message search-error\">\n      <h3>Search error</h3>\n      <pre>{error.toString()}</pre>\n    </div>\n  );\n}\n\nfunction BuildTimes({ times }: { times: Times }) {\n  function format(ms: number) {\n    if (ms > 1000) {\n      const s = ms / 1000;\n      return `${s.toFixed(1)} seconds`;\n    } else {\n      return `${Math.trunc(ms)} milliseconds`;\n    }\n  }\n  return (\n    <div className=\"search-times\">\n      <p>Time to find built documents {format(times.built)}</p>\n    </div>\n  );\n}\n\ninterface SearchFlawRow {\n  flaw: string;\n  search: string;\n}\n\nfunction serializeSearchFlaws(rows: SearchFlawRow[]) {\n  return rows.map((row) => `${row.flaw}:${row.search}`);\n}\n\nfunction deserializeSearchFlaws(list: string[]) {\n  const rows: SearchFlawRow[] = [];\n  for (const row of list) {\n    const [flaw, search] = row.split(\":\", 2);\n    rows.push({ flaw, search });\n  }\n  return rows;\n}\n\nfunction FilterControls({ flawLevels }: { flawLevels: FlawLevel[] }) {\n  const [initialFilters, updateFiltersURL] = useFiltersURL();\n  const [filters, setFilters] = useState(initialFilters);\n  const [searchFlawsRows, setSearchFlawsRows] = useState<SearchFlawRow[]>(\n    deserializeSearchFlaws(initialFilters.search_flaws)\n  );\n\n  useEffect(() => {\n    // A little convenience DOM trick to put focus on the search input\n    // after you've added a row or used the <select>\n    const searchInputs = [\n      ...document.querySelectorAll<HTMLInputElement>(\n        'ul.search-flaws-rows input[type=\"search\"]'\n      ),\n    ].filter((input) => !input.value);\n    if (searchInputs.length) {\n      searchInputs[searchInputs.length - 1].focus();\n    }\n  }, [searchFlawsRows]);\n\n  function refreshFilters() {\n    updateFiltersURL(filters);\n  }\n\n  let hasFilters = !equalObjects(defaultFilters, filters);\n\n  let hasEmptySearchFlawsRow = searchFlawsRows.some(\n    (row) => !row.search.trim()\n  );\n\n  function resetFilters(event: React.MouseEvent) {\n    event.preventDefault();\n    setFilters(defaultFilters);\n    updateFiltersURL(defaultFilters);\n  }\n\n  return (\n    <div className=\"filters\">\n      <h3>Filters</h3>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          refreshFilters();\n        }}\n      >\n        <div>\n          <h4>Document</h4>\n          <input\n            type=\"search\"\n            placeholder=\"Filter by document URI\"\n            value={filters.mdn_url}\n            onChange={(event) => {\n              setFilters({ ...filters, mdn_url: event.target.value });\n            }}\n            onBlur={refreshFilters}\n          />\n          <input\n            type=\"search\"\n            placeholder=\"Filter by document title\"\n            value={filters.title}\n            onChange={(event) => {\n              setFilters({ ...filters, title: event.target.value });\n            }}\n            onBlur={refreshFilters}\n          />\n        </div>\n\n        <div>\n          <h4>Popularity</h4>\n          <input\n            type=\"search\"\n            placeholder=\"E.g. < 100\"\n            value={filters.popularity || \"\"}\n            onChange={(event) => {\n              setFilters({ ...filters, popularity: event.target.value });\n            }}\n            onBlur={refreshFilters}\n          />\n        </div>\n        <div>\n          <h4>Flaws</h4>\n          <select\n            multiple={true}\n            value={filters.flaws}\n            onChange={(event) => {\n              const flaws = [...event.target.selectedOptions].map(\n                (opt) => opt.value\n              );\n              setFilters({ ...filters, flaws });\n            }}\n          >\n            {flawLevels &&\n              flawLevels.map((flawLevel) => {\n                return (\n                  <option key={flawLevel.name} value={flawLevel.name}>\n                    {humanizeFlawName(flawLevel.name)}{\" \"}\n                    {flawLevel.ignored && \"(ignored)\"}\n                  </option>\n                );\n              })}\n          </select>\n        </div>\n        <div>\n          <h4>Search inside flaws</h4>\n          <ul className=\"search-flaws-rows\">\n            {searchFlawsRows.map((row, i) => {\n              return (\n                <li key={`${row.flaw}:${i}`}>\n                  <select\n                    value={row.flaw}\n                    onChange={(event) => {\n                      const clone = [...searchFlawsRows];\n                      clone[i].flaw = event.target.value;\n                      setSearchFlawsRows(clone);\n                    }}\n                  >\n                    {flawLevels &&\n                      flawLevels\n                        .filter((flawLevel) => !flawLevel.ignored)\n                        .map((flawLevel) => {\n                          return (\n                            <option key={flawLevel.name} value={flawLevel.name}>\n                              {humanizeFlawName(flawLevel.name)}\n                            </option>\n                          );\n                        })}\n                  </select>\n                  <input\n                    type=\"search\"\n                    placeholder=\"Search expression (e.g. jsxref)\"\n                    value={row.search}\n                    onChange={(event) => {\n                      setSearchFlawsRows(\n                        searchFlawsRows.map((row, j) => {\n                          if (i === j) {\n                            row.search = event.target.value;\n                          }\n                          return row;\n                        })\n                      );\n                    }}\n                    onBlur={() => {\n                      const serialized = serializeSearchFlaws(searchFlawsRows);\n                      setFilters({ ...filters, search_flaws: serialized });\n                      refreshFilters();\n                    }}\n                  />\n                  <button\n                    type=\"button\"\n                    title=\"Remove search row\"\n                    onClick={() => {\n                      const clone = [...searchFlawsRows];\n                      clone.splice(i, 1);\n                      setSearchFlawsRows(clone);\n\n                      // const serialized = serializeSearchFlaws(searchFlawsRows);\n                      // setFilters({ ...filters, search_flaws: serialized });\n                      // refreshFilters()\n                    }}\n                  >\n                    -\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n          <button\n            type=\"button\"\n            title=\"Add search row\"\n            disabled={hasEmptySearchFlawsRow}\n            onClick={() => {\n              setSearchFlawsRows([\n                ...searchFlawsRows,\n                ...[\n                  {\n                    flaw: \"macros\",\n                    search: \"\",\n                  },\n                ],\n              ]);\n            }}\n          >\n            +\n          </button>\n        </div>\n\n        <div>\n          <h4>Fixable flaws</h4>\n          <input\n            type=\"search\"\n            placeholder=\"E.g. >0\"\n            value={filters.fixableFlaws || \"\"}\n            onChange={(event) => {\n              setFilters({ ...filters, fixableFlaws: event.target.value });\n            }}\n            onBlur={refreshFilters}\n          />\n        </div>\n\n        <div>\n          <h4>&nbsp;</h4>\n          <button type=\"submit\">Filter now</button>\n          {hasFilters && (\n            <button type=\"button\" onClick={resetFilters}>\n              Reset filters\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction equalObjects(obj1: object, obj2: object) {\n  const keys1 = new Set(Object.keys(obj1));\n  const keys2 = new Set(Object.keys(obj2));\n  if (keys1.size !== keys2.size) {\n    return false;\n  }\n  for (const key of keys1) {\n    if (!keys2.has(key)) {\n      return false;\n    }\n  }\n\n  return Object.entries(obj1).every(([key, value]) => {\n    const value2 = obj2[key];\n    if (typeof value !== typeof value2) {\n      return false;\n    }\n    if (Array.isArray(value)) {\n      return (\n        value.length === value2.length && value.every((v, i) => v === value2[i])\n      );\n    } else {\n      return value === value2;\n    }\n  });\n}\n\nfunction DocumentsTable({\n  locale,\n  counts,\n  documents,\n  pageCount,\n  page,\n}: {\n  locale: string;\n  counts: Counts;\n  documents: Document[];\n  pageCount: number;\n  page: number;\n}) {\n  const [filters, updateFiltersURL] = useFiltersURL();\n\n  function setSort(key: string): void {\n    updateFiltersURL(\n      filters.sort_by === key\n        ? { sort_reverse: !filters.sort_reverse }\n        : { sort_by: key }\n    );\n  }\n  // https://gist.github.com/jlbruno/1535691/db35b4f3af3dcbb42babc01541410f291a8e8fac\n  function getGetOrdinal(n: number) {\n    const s = [\"th\", \"st\", \"nd\", \"rd\"];\n    const v = n % 100;\n    return n.toLocaleString() + (s[(v - 20) % 10] || s[v] || s[0]);\n  }\n\n  function summarizeFlaws(flaws: DocumentFlaws[]) {\n    // Return a one-liner about all the flaws\n    const totalCountFixable = flaws.reduce(\n      (acc, flaw) => flaw.countFixable + acc,\n      0\n    );\n    const bits = flaws.map((flaw) => {\n      return `${humanizeFlawName(flaw.name)}: ${flaw.value}`;\n    });\n    return (\n      <>\n        {bits.join(\", \")}{\" \"}\n        <span className=\"document-flaws-fixable\">\n          ({totalCountFixable} fixable)\n        </span>\n      </>\n    );\n  }\n\n  function TH({ id, title }: { id: string; title: string }) {\n    return (\n      <th onClick={() => setSort(id)} className=\"sortable\">\n        {title}{\" \"}\n        {filters.sort_by === id ? (filters.sort_reverse ? \"🔽\" : \"🔼\") : null}\n      </th>\n    );\n  }\n\n  function getHighlightedText(text: string, highlight: string) {\n    // Split on highlight term and include term into parts, ignore case\n    const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\n    return (\n      <span>\n        {\" \"}\n        {parts.map((part, i) => (\n          <span\n            key={i}\n            style={\n              part.toLowerCase() === highlight.toLowerCase()\n                ? { fontWeight: \"bold\" }\n                : {}\n            }\n          >\n            {part}\n          </span>\n        ))}{\" \"}\n      </span>\n    );\n  }\n\n  function showBriefURL(uri: string) {\n    const [left, right] = uri.split(/\\/docs\\//, 2);\n    return (\n      <>\n        <span className=\"url-prefix\">{left}/docs/</span>\n        <span className=\"url-slug\">\n          {filters.mdn_url ? getHighlightedText(right, filters.mdn_url) : right}\n        </span>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"documents\">\n      <h3>\n        Documents with flaws found ({counts.found.toLocaleString()}){\" \"}\n        {pageCount > 1 && (\n          <span className=\"page\">\n            page {page}/{pageCount}\n          </span>\n        )}\n      </h3>\n      {!counts.built ? (\n        <WarnAboutNothingBuilt />\n      ) : (\n        <h4 className=\"subheader\">\n          {counts.built.toLocaleString()} documents built ({locale})\n        </h4>\n      )}\n\n      <table>\n        <thead>\n          <tr>\n            <TH id=\"mdn_url\" title=\"Document\" />\n            <TH id=\"popularity\" title=\"Popularity\" />\n            <TH id=\"flaws\" title=\"Flaws\" />\n          </tr>\n        </thead>\n        <tbody>\n          {documents.map((doc: Document) => {\n            return (\n              <tr key={doc.mdn_url}>\n                <td>\n                  <Link\n                    to={`${doc.mdn_url}#_flaws`}\n                    title={doc.title}\n                    target=\"_blank\"\n                  >\n                    {showBriefURL(doc.mdn_url)}\n                  </Link>\n                  <span className=\"document-title-preview\">\n                    {filters.title\n                      ? getHighlightedText(doc.title, filters.title)\n                      : doc.title}\n                  </span>\n                </td>\n                <td\n                  className={doc.popularity.ranking ? \"\" : \"no-popularity\"}\n                  title={\n                    doc.popularity.ranking\n                      ? `Meaning there are ${\n                          doc.popularity.ranking - 1\n                        } more popular pages than this`\n                      : \"Meaning it has no ranking. Most likely a very rare (or new) document\"\n                  }\n                >\n                  {!doc.popularity.ranking\n                    ? \"n/a\"\n                    : `${getGetOrdinal(doc.popularity.ranking)}`}\n                </td>\n                <td className=\"document-flaws\">{summarizeFlaws(doc.flaws)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {pageCount > 1 && (\n        <p className=\"pagination\">\n          <PageLink number={1} disabled={page === 1}>\n            ⇤ First page\n          </PageLink>{\" \"}\n          {page > 2 && <PageLink number={page - 1}>← Previous page</PageLink>}{\" \"}\n          {page}{\" \"}\n          {page < pageCount - 1 && (\n            <PageLink number={page + 1} disabled={page + 1 > pageCount}>\n              Next page →\n            </PageLink>\n          )}\n          <PageLink number={pageCount} disabled={page === pageCount}>\n            Last page ({pageCount}) ⇥\n          </PageLink>\n        </p>\n      )}\n    </div>\n  );\n}\n\nfunction PageLink({\n  number,\n  disabled,\n  children,\n}: {\n  number: number;\n  disabled?: boolean;\n  children: React.ReactNode;\n}) {\n  const [filters] = useFiltersURL();\n  // Unfortunately TS's Partial<T> is not quite the right return type of this function,\n  // as it implies the object could have keys set to undefined, which isn't true here.\n  // Hence we have to use type coercion (any)\n  const newFilters = withoutDefaultFilters({ ...filters, page: number }) as any;\n  if (newFilters.page) {\n    newFilters.page = String(newFilters.page);\n  }\n  return (\n    <Link\n      to={\"?\" + createSearchParams(newFilters).toString()}\n      className={disabled ? \"disabled\" : \"\"}\n      onClick={(event) => {\n        if (disabled) {\n          event.preventDefault();\n        }\n      }}\n    >\n      {children}\n    </Link>\n  );\n}\n\nfunction WarnAboutNothingBuilt() {\n  return (\n    <div className=\"notecard warning document-warnings\">\n      <h4>No documents have been built, so no flaws can be found</h4>\n      <p>\n        At the moment, you have to use the command line tools to build documents\n        that we can analyze.\n      </p>\n    </div>\n  );\n}\n\nfunction AllFlawCounts({ counts }: { counts: FlawsCounts }) {\n  const typesSorted = Object.entries(counts.type).sort((a, b) => {\n    return a[1] - b[1];\n  });\n  const macrosSorted = Object.entries(counts.macros).sort((a, b) => {\n    return a[1] - b[1];\n  });\n  return (\n    <div className=\"flaw-counts\">\n      <h3>Flaws counts</h3>\n      <table>\n        <tbody>\n          <tr>\n            <td>Total</td>\n            <td>\n              <b>{counts.total.toLocaleString()}</b>\n            </td>\n          </tr>\n          <tr>\n            <td>Fixable</td>\n            <td>\n              <b>{counts.fixable.toLocaleString()}</b>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <h4>Breakdown by type</h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {typesSorted.map(([key, value]) => {\n            return (\n              <tr key={key}>\n                <td>{humanizeFlawName(key)}</td>\n                <td>\n                  <b>{value.toLocaleString()}</b>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <h4>\n        Breakdown by <code>macros</code> flaws\n      </h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {macrosSorted.map(([key, value]) => {\n            return (\n              <tr key={key}>\n                <td>\n                  <code>{key}</code>\n                </td>\n                <td>\n                  <b>{value.toLocaleString()}</b>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/**\n * This file serves to help flaws when displayed one at a time and when\n * displayed in batches.\n *\n */\n\nexport function humanizeFlawName(name) {\n  const verboseNames = {\n    // List all the names that can't be nicely computed by the fallback()\n    // function.\n    bad_bcd_queries: \"Bad BCD queries\",\n    bad_pre_tags: \"Bad <pre> tags\",\n    unsafe_html: \"Unsafe HTML\",\n  };\n  function fallback() {\n    return name.charAt(0).toUpperCase() + name.slice(1).replace(/_/g, \" \");\n  }\n  return verboseNames[name] || fallback();\n}\n"],"names":["defaultFilters","Object","freeze","mdn_url","title","popularity","fixableFlaws","flaws","page","sort_by","sort_reverse","search_flaws","withoutDefaultFilters","filters","fromEntries","entries","filter","_ref","key","value","JSON","stringify","useFiltersURL","searchParams","setSearchParams","useSearchParams","useMemo","searchParamsObject","reduce","acc","tuple","val","prototype","hasOwnProperty","call","Array","isArray","parseInt","updateFiltersURL","useCallback","partialFilters","newSearchParams","mustBeArrayKeys","AllFlaws","locale","useLocale","lastData","setLastData","useState","useEffect","concat","counts","found","toLocaleString","document","getAPIUrl","restFilters","params","createSearchParams","String","sort","reverse","toString","data","error","isValidating","useSWR","async","response","fetch","url","ex","ok","Error","status","headers","get","includes","json","loading","_jsx","children","pageCount","pages","_jsxs","MainContentContainer","className","standalone","ShowSearchError","FilterControls","flawLevels","DocumentsTable","documents","AllFlawCounts","BuildTimes","times","_ref2","_ref3","ms","toFixed","Math","trunc","format","built","_ref4","initialFilters","setFilters","searchFlawsRows","setSearchFlawsRows","list","rows","row","flaw","search","split","push","deserializeSearchFlaws","refreshFilters","searchInputs","querySelectorAll","input","length","focus","hasFilters","obj1","obj2","keys1","Set","keys","keys2","size","has","every","_ref5","value2","v","i","equalObjects","hasEmptySearchFlawsRow","some","trim","onSubmit","event","preventDefault","type","placeholder","onChange","target","onBlur","multiple","selectedOptions","map","opt","flawLevel","name","humanizeFlawName","ignored","clone","j","serialized","onClick","splice","disabled","_ref6","getGetOrdinal","n","s","summarizeFlaws","totalCountFixable","countFixable","bits","_Fragment","join","TH","_ref7","id","setSort","getHighlightedText","text","highlight","parts","RegExp","part","style","toLowerCase","fontWeight","showBriefURL","uri","left","right","WarnAboutNothingBuilt","doc","Link","to","ranking","PageLink","number","_ref8","newFilters","_ref9","typesSorted","a","b","macrosSorted","macros","total","fixable","_ref10","_ref11","bad_bcd_queries","bad_pre_tags","unsafe_html","charAt","toUpperCase","slice","replace"],"sourceRoot":""}