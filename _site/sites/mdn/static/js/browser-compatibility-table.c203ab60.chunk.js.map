{"version":3,"file":"static/js/browser-compatibility-table.c203ab60.chunk.js","mappings":"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","sources":["document/ingredients/browser-compatibility-table/browser-info.tsx","document/ingredients/browser-compatibility-table/headers.tsx","document/ingredients/browser-compatibility-table/error-boundary.tsx","document/ingredients/browser-compatibility-table/utils.ts","document/ingredients/browser-compatibility-table/legend.tsx","document/ingredients/browser-compatibility-table/feature-row.tsx","document/ingredients/browser-compatibility-table/index.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport type BCD from \"@mdn/browser-compat-data/types\";\n\nexport const BrowserInfoContext = React.createContext<BCD.Browsers | null>(\n  null\n);\n\nexport function BrowserName({ id }: { id: BCD.BrowserName }) {\n  const browserInfo = useContext(BrowserInfoContext);\n  if (!browserInfo) {\n    throw new Error(\"Missing browser info\");\n  }\n  return <>{browserInfo[id].name}</>;\n}\n","import type BCD from \"@mdn/browser-compat-data/types\";\nimport { BrowserName } from \"./browser-info\";\n\nfunction PlatformHeaders({\n  platforms,\n  browsers,\n  browserInfo,\n}: {\n  platforms: string[];\n  browsers: BCD.BrowserName[];\n  browserInfo: BCD.Browsers;\n}) {\n  return (\n    <tr className=\"bc-platforms\">\n      <td />\n      {platforms.map((platform) => {\n        // Get the intersection of browsers in the `browsers` array and the\n        // `PLATFORM_BROWSERS[platform]`.\n        const browsersInPlatform = browsers.filter(\n          (browser) => browserInfo[browser].type === platform\n        );\n        const browserCount = browsersInPlatform.length;\n        return (\n          <th\n            key={platform}\n            className={`bc-platform bc-platform-${platform}`}\n            colSpan={browserCount}\n            title={platform}\n          >\n            <span className={`icon icon-${platform}`}></span>\n            <span className=\"visually-hidden\">{platform}</span>\n          </th>\n        );\n      })}\n    </tr>\n  );\n}\n\nfunction BrowserHeaders({ browsers }: { browsers: BCD.BrowserName[] }) {\n  return (\n    <tr className=\"bc-browsers\">\n      <td />\n      {browsers.map((browser) => {\n        return (\n          <th key={browser} className={`bc-browser bc-browser-${browser}`}>\n            <div className={`bc-head-txt-label bc-head-icon-${browser}`}>\n              <BrowserName id={browser} />\n            </div>\n            <div\n              className={`bc-head-icon-symbol icon icon-${browserToIconName(\n                browser\n              )}`}\n            ></div>\n          </th>\n        );\n      })}\n    </tr>\n  );\n}\n\nexport function browserToIconName(browser: string) {\n  const browserStart = browser.split(\"_\")[0];\n  return browserStart === \"firefox\" ? \"simple-firefox\" : browserStart;\n}\n\nexport function Headers({\n  platforms,\n  browsers,\n  browserInfo,\n}: {\n  platforms: string[];\n  browsers: BCD.BrowserName[];\n  browserInfo: BCD.Browsers;\n}) {\n  return (\n    <thead>\n      <PlatformHeaders\n        platforms={platforms}\n        browsers={browsers}\n        browserInfo={browserInfo}\n      />\n      <BrowserHeaders browsers={browsers} />\n    </thead>\n  );\n}\n","import React from \"react\";\n\n/**\n * The error boundary for BrowserCompatibilityTable.\n *\n * When the whole BrowserCompatibilityTable crashes, for whatever reason,\n * this component will show a friendly message\n * to replace that crashed component\n */\nexport class BrowserCompatibilityErrorBoundary extends React.Component<\n  any,\n  any\n> {\n  state = {\n    error: null,\n  };\n  componentDidCatch(error, _errorInfo) {\n    this.setState({\n      error,\n    });\n    // TODO: Report this error to Sentry, https://github.com/mdn/yari/issues/99\n  }\n  render() {\n    if (this.state.error) {\n      return (\n        <>\n          <div className=\"bc-table-error-boundary\">\n            Unfortunately, this table has encountered unhandled error and the\n            content cannot be shown.\n            {/* TODO: When error reporting is set up, the message should include \"We have been notified of this error\" or something similar */}\n          </div>\n        </>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import type BCD from \"@mdn/browser-compat-data/types\";\n\n// Extended for the fields, beyond the bcd types, that are extra-added\n// exclusively in Yari.\ninterface SimpleSupportStatementExtended extends BCD.SimpleSupportStatement {\n  // Known for some support statements where the browser *version* is known,\n  // as opposed to just \"true\" and if the version release date is known.\n  release_date?: string;\n  // The version before the version_removed if the *version* removed is known,\n  // as opposed to just \"true\". Otherwise the version_removed.\n  version_last?: BCD.VersionValue;\n}\n\nexport type SupportStatementExtended =\n  | SimpleSupportStatementExtended\n  | SimpleSupportStatementExtended[];\n\nexport function getFirst<T>(a: T | T[]): T;\nexport function getFirst<T>(a: T | T[] | undefined): T | undefined {\n  return Array.isArray(a) ? a[0] : a;\n}\n\nexport function asList<T>(a: T | T[]): T[] {\n  return Array.isArray(a) ? a : [a];\n}\n\nexport function isTruthy<T>(t: T | false | undefined | null): t is T {\n  return Boolean(t);\n}\n\ninterface Feature {\n  name: string;\n  compat: BCD.CompatStatement;\n  depth: number;\n}\n\nfunction findFirstCompatDepth(identifier: BCD.Identifier) {\n  const entries = [[\"\", identifier]];\n\n  while (entries.length) {\n    const [path, value] = entries.shift() as [string, BCD.Identifier];\n    if (value.__compat) {\n      // Following entries have at least this depth.\n      return path.split(\".\").length;\n    }\n\n    for (const key of Object.keys(value)) {\n      const subpath = path ? `${path}.${key}` : key;\n      entries.push([subpath, value[key]]);\n    }\n  }\n\n  // Fallback.\n  return 0;\n}\n\nexport function listFeatures(\n  identifier: BCD.Identifier,\n  parentName: string = \"\",\n  rootName: string = \"\",\n  depth: number = 0,\n  firstCompatDepth: number = 0\n): Feature[] {\n  const features: Feature[] = [];\n  if (rootName && identifier.__compat) {\n    features.push({\n      name: rootName,\n      compat: identifier.__compat,\n      depth,\n    });\n  }\n  if (rootName) {\n    firstCompatDepth = findFirstCompatDepth(identifier);\n  }\n  for (const subName of Object.keys(identifier)) {\n    if (subName === \"__compat\") {\n      continue;\n    }\n    const subIdentifier = identifier[subName];\n    if (subIdentifier.__compat) {\n      features.push({\n        name: parentName ? `${parentName}.${subName}` : subName,\n        compat: subIdentifier.__compat,\n        depth: depth + 1,\n      });\n    }\n    if (subIdentifier.__compat || depth + 1 < firstCompatDepth) {\n      features.push(\n        ...listFeatures(subIdentifier, subName, \"\", depth + 1, firstCompatDepth)\n      );\n    }\n  }\n  return features;\n}\n\nexport function hasMore(support: BCD.SupportStatement | undefined) {\n  return Array.isArray(support) && support.length > 1;\n}\n\nexport function versionIsPreview(\n  version: BCD.VersionValue | string | undefined,\n  browser: BCD.BrowserStatement\n): boolean {\n  if (version === \"preview\") {\n    return true;\n  }\n\n  if (browser && typeof version === \"string\" && browser.releases[version]) {\n    return [\"beta\", \"nightly\", \"planned\"].includes(\n      browser.releases[version].status\n    );\n  }\n\n  return false;\n}\n\nexport function hasNoteworthyNotes(support: BCD.SimpleSupportStatement) {\n  return (\n    support.notes?.length &&\n    !support.version_removed &&\n    !support.partial_implementation\n  );\n}\n\nfunction hasLimitation(support: BCD.SimpleSupportStatement) {\n  return hasMajorLimitation(support) || support.notes;\n}\n\nfunction hasMajorLimitation(support: BCD.SimpleSupportStatement) {\n  return (\n    support.partial_implementation ||\n    support.alternative_name ||\n    support.flags ||\n    support.prefix ||\n    support.version_removed\n  );\n}\nexport function isFullySupportedWithoutLimitation(\n  support: BCD.SimpleSupportStatement\n) {\n  return support.version_added && !hasLimitation(support);\n}\n\nexport function isNotSupportedAtAll(support: BCD.SimpleSupportStatement) {\n  return !support.version_added && !hasLimitation(support);\n}\n\nfunction isFullySupportedWithoutMajorLimitation(\n  support: BCD.SimpleSupportStatement\n) {\n  return support.version_added && !hasMajorLimitation(support);\n}\n\n// Prioritizes support items\nexport function getCurrentSupport(\n  support: SupportStatementExtended | undefined\n): SimpleSupportStatementExtended | undefined {\n  if (!support) return undefined;\n\n  // Full support without limitation\n  const noLimitationSupportItem = asList(support).find((item) =>\n    isFullySupportedWithoutLimitation(item)\n  );\n  if (noLimitationSupportItem) return noLimitationSupportItem;\n\n  // Full support with only notes and version_added\n  const minorLimitationSupportItem = asList(support).find((item) =>\n    isFullySupportedWithoutMajorLimitation(item)\n  );\n  if (minorLimitationSupportItem) return minorLimitationSupportItem;\n\n  // Full support with altname/prefix\n  const altnamePrefixSupportItem = asList(support).find(\n    (item) => !item.version_removed && (item.prefix || item.alternative_name)\n  );\n  if (altnamePrefixSupportItem) return altnamePrefixSupportItem;\n\n  // Partial support\n  const partialSupportItem = asList(support).find(\n    (item) => !item.version_removed && item.partial_implementation\n  );\n  if (partialSupportItem) return partialSupportItem;\n\n  // Support with flags only\n  const flagSupportItem = asList(support).find(\n    (item) => !item.version_removed && item.flags\n  );\n  if (flagSupportItem) return flagSupportItem;\n\n  // No/Inactive support\n  const noSupportItem = asList(support).find((item) => item.version_removed);\n  if (noSupportItem) return noSupportItem;\n\n  // Default (likely never reached)\n  return getFirst(support);\n}\n","import { useContext } from \"react\";\nimport type BCD from \"@mdn/browser-compat-data/types\";\nimport { BrowserInfoContext } from \"./browser-info\";\nimport { HIDDEN_BROWSERS } from \"./index\";\nimport {\n  asList,\n  getFirst,\n  hasMore,\n  hasNoteworthyNotes,\n  listFeatures,\n  versionIsPreview,\n} from \"./utils\";\n\n// Also specifies the order in which the legend appears\nexport const LEGEND_LABELS = {\n  yes: \"Full support\",\n  partial: \"Partial support\",\n  preview: \"In development. Supported in a pre-release version.\",\n  no: \"No support\",\n  unknown: \"Compatibility unknown\",\n  experimental: \"Experimental. Expect behavior to change in the future.\",\n  nonstandard: \"Non-standard. Check cross-browser support before using.\",\n  deprecated: \"Deprecated. Not for use in new websites.\",\n  footnote: \"See implementation notes.\",\n  disabled: \"User must explicitly enable this feature.\",\n  altname: \"Uses a non-standard name.\",\n  prefix: \"Requires a vendor prefix or different name for use.\",\n  more: \"Has more compatibility info.\",\n};\ntype LEGEND_KEY = keyof typeof LEGEND_LABELS;\n\nfunction getActiveLegendItems(\n  compat: BCD.Identifier,\n  name: string,\n  browserInfo: BCD.Browsers\n) {\n  const legendItems = new Set<LEGEND_KEY>();\n\n  for (const feature of listFeatures(compat, \"\", name)) {\n    const { status } = feature.compat;\n\n    if (status) {\n      if (status.experimental) {\n        legendItems.add(\"experimental\");\n      }\n      if (status.deprecated) {\n        legendItems.add(\"deprecated\");\n      }\n      if (!status.standard_track) {\n        legendItems.add(\"nonstandard\");\n      }\n    }\n\n    for (const [browser, browserSupport] of Object.entries(\n      feature.compat.support\n    )) {\n      if (HIDDEN_BROWSERS.includes(browser)) {\n        continue;\n      }\n      if (!browserSupport) {\n        legendItems.add(\"no\");\n        continue;\n      }\n      const firstSupportItem = getFirst(browserSupport);\n      if (hasNoteworthyNotes(firstSupportItem)) {\n        legendItems.add(\"footnote\");\n      }\n\n      for (const versionSupport of asList(browserSupport)) {\n        if (versionSupport.version_added) {\n          if (versionSupport.flags && versionSupport.flags.length) {\n            legendItems.add(\"no\");\n          } else if (\n            versionIsPreview(versionSupport.version_added, browserInfo[browser])\n          ) {\n            legendItems.add(\"preview\");\n          } else {\n            legendItems.add(\"yes\");\n          }\n        } else if (versionSupport.version_added == null) {\n          legendItems.add(\"unknown\");\n        } else {\n          legendItems.add(\"no\");\n        }\n\n        if (versionSupport.partial_implementation) {\n          legendItems.add(\"partial\");\n        }\n        if (versionSupport.prefix) {\n          legendItems.add(\"prefix\");\n        }\n        if (versionSupport.alternative_name) {\n          legendItems.add(\"altname\");\n        }\n        if (versionSupport.flags) {\n          legendItems.add(\"disabled\");\n        }\n      }\n\n      if (hasMore(browserSupport)) {\n        legendItems.add(\"more\");\n      }\n    }\n  }\n  return Object.keys(LEGEND_LABELS)\n    .filter((key) => legendItems.has(key as LEGEND_KEY))\n    .map((key) => [key, LEGEND_LABELS[key]]);\n}\n\nexport function Legend({\n  compat,\n  name,\n}: {\n  compat: BCD.Identifier;\n  name: string;\n}) {\n  const browserInfo = useContext(BrowserInfoContext);\n\n  if (!browserInfo) {\n    throw new Error(\"Missing browser info\");\n  }\n\n  return (\n    <section className=\"bc-legend\">\n      <h3 className=\"visually-hidden\" id=\"Legend\">\n        Legend\n      </h3>\n      <p className=\"bc-legend-tip\">\n        Tip: you can click/tap on a cell for more information.\n      </p>\n      <dl className=\"bc-legend-items-container\">\n        {getActiveLegendItems(compat, name, browserInfo).map(([key, label]) =>\n          [\"yes\", \"partial\", \"no\", \"unknown\", \"preview\"].includes(key) ? (\n            <div className=\"bc-legend-item\" key={key}>\n              <dt className=\"bc-legend-item-dt\" key={key}>\n                <span className={`bc-supports-${key} bc-supports`}>\n                  <abbr\n                    className={`bc-level bc-level-${key} icon icon-${key}`}\n                    title={label}\n                  >\n                    <span className=\"visually-hidden\">{label}</span>\n                  </abbr>\n                </span>\n              </dt>\n              <dd className=\"bc-legend-item-dd\">{label}</dd>\n            </div>\n          ) : (\n            <div className=\"bc-legend-item\" key={key}>\n              <dt className=\"bc-legend-item-dt\">\n                <abbr\n                  className={`legend-icons icon icon-${key}`}\n                  title={label}\n                ></abbr>\n              </dt>\n              <dd className=\"bc-legend-item-dd\">{label}</dd>\n            </div>\n          )\n        )}\n      </dl>\n    </section>\n  );\n}\n","import React, { useContext } from \"react\";\nimport type BCD from \"@mdn/browser-compat-data/types\";\nimport { BrowserInfoContext } from \"./browser-info\";\nimport {\n  asList,\n  getCurrentSupport,\n  hasMore,\n  hasNoteworthyNotes,\n  isFullySupportedWithoutLimitation,\n  isNotSupportedAtAll,\n  isTruthy,\n  versionIsPreview,\n  SupportStatementExtended,\n} from \"./utils\";\nimport { LEGEND_LABELS } from \"./legend\";\n\nfunction getSupportClassName(\n  support: SupportStatementExtended | undefined,\n  browser: BCD.BrowserStatement\n): \"no\" | \"yes\" | \"partial\" | \"preview\" | \"removed-partial\" | \"unknown\" {\n  if (!support) {\n    return \"unknown\";\n  }\n\n  let { flags, version_added, version_removed, partial_implementation } =\n    getCurrentSupport(support)!;\n\n  let className;\n  if (version_added === null) {\n    className = \"unknown\";\n  } else if (versionIsPreview(version_added, browser)) {\n    className = \"preview\";\n  } else if (version_added) {\n    className = \"yes\";\n    if (version_removed || (flags && flags.length)) {\n      className = \"no\";\n    }\n  } else {\n    className = \"no\";\n  }\n  if (partial_implementation) {\n    className = version_removed ? \"removed-partial\" : \"partial\";\n  }\n\n  return className;\n}\n\nfunction getSupportBrowserReleaseDate(\n  support: SupportStatementExtended | undefined\n): string | undefined {\n  if (!support) {\n    return undefined;\n  }\n  return getCurrentSupport(support)!.release_date;\n}\n\nfunction StatusIcons({ status }: { status: BCD.StatusBlock }) {\n  const icons = [\n    status.experimental && {\n      title: \"Experimental. Expect behavior to change in the future.\",\n      text: \"Experimental\",\n      iconClassName: \"icon-experimental\",\n    },\n    status.deprecated && {\n      title: \"Deprecated. Not for use in new websites.\",\n      text: \"Deprecated\",\n      iconClassName: \"icon-deprecated\",\n    },\n    !status.standard_track && {\n      title: \"Non-standard. Expect poor cross-browser support.\",\n      text: \"Non-standard\",\n      iconClassName: \"icon-nonstandard\",\n    },\n  ].filter(isTruthy);\n  return icons.length === 0 ? null : (\n    <div className=\"bc-icons\" data-test={icons.length}>\n      {icons.map((icon) => (\n        <abbr\n          key={icon.iconClassName}\n          className={`only-icon icon ${icon.iconClassName}`}\n          title={icon.title}\n        >\n          <span>{icon.text}</span>\n        </abbr>\n      ))}\n    </div>\n  );\n}\n\nfunction labelFromString(\n  version: string | boolean | null | undefined,\n  browser: BCD.BrowserStatement\n) {\n  if (typeof version !== \"string\") {\n    return <>{\"?\"}</>;\n  }\n  // Treat BCD ranges as exact versions to avoid confusion for the reader\n  // See https://github.com/mdn/yari/issues/3238\n  if (version.startsWith(\"≤\")) {\n    return <>{version.slice(1)}</>;\n  }\n  if (version === \"preview\") {\n    return browser.preview_name;\n  }\n  return <>{version}</>;\n}\n\nfunction versionLabelFromSupport(\n  added: string | boolean | null | undefined,\n  removed: string | boolean | null | undefined,\n  browser: BCD.BrowserStatement\n) {\n  if (typeof removed !== \"string\") {\n    return <>{labelFromString(added, browser)}</>;\n  }\n  return (\n    <>\n      {labelFromString(added, browser)}&#8202;&ndash;&#8202;\n      {labelFromString(removed, browser)}\n    </>\n  );\n}\n\nconst CellText = React.memo(\n  ({\n    support,\n    browser,\n    timeline = false,\n  }: {\n    support: BCD.SupportStatement | undefined;\n    browser: BCD.BrowserStatement;\n    timeline?: boolean;\n  }) => {\n    const currentSupport = getCurrentSupport(support);\n\n    const added = currentSupport?.version_added ?? null;\n    const lastVersion = currentSupport?.version_last ?? null;\n\n    const browserReleaseDate = getSupportBrowserReleaseDate(support);\n    const supportClassName = getSupportClassName(support, browser);\n\n    let status:\n      | { isSupported: \"unknown\" }\n      | {\n          isSupported: \"no\" | \"yes\" | \"partial\" | \"preview\" | \"removed-partial\";\n          label?: React.ReactNode;\n        };\n    switch (added) {\n      case null:\n        status = { isSupported: \"unknown\" };\n        break;\n      case true:\n        status = { isSupported: lastVersion ? \"no\" : \"yes\" };\n        break;\n      case false:\n        status = { isSupported: \"no\" };\n        break;\n      case \"preview\":\n        status = { isSupported: \"preview\" };\n        break;\n      default:\n        status = {\n          isSupported: supportClassName,\n          label: versionLabelFromSupport(added, lastVersion, browser),\n        };\n        break;\n    }\n\n    let label: string | React.ReactNode;\n    let title = \"\";\n    switch (status.isSupported) {\n      case \"yes\":\n        title = \"Full support\";\n        label = status.label || \"Yes\";\n        break;\n\n      case \"partial\":\n        title = \"Partial support\";\n        label = status.label || \"Partial\";\n        break;\n\n      case \"removed-partial\":\n        if (timeline) {\n          title = \"Partial support\";\n          label = status.label || \"Partial\";\n        } else {\n          title = \"No support\";\n          label = status.label || \"No\";\n        }\n        break;\n\n      case \"no\":\n        title = \"No support\";\n        label = status.label || \"No\";\n        break;\n\n      case \"preview\":\n        title = \"Preview browser support\";\n        label = status.label || browser.preview_name;\n        break;\n\n      case \"unknown\":\n        title = \"Compatibility unknown; please update this.\";\n        label = \"?\";\n        break;\n    }\n\n    return (\n      <div\n        className={\n          timeline ? \"bcd-timeline-cell-text-wrapper\" : \"bcd-cell-text-wrapper\"\n        }\n      >\n        <div className=\"bcd-cell-icons\">\n          <span className=\"icon-wrap\">\n            <abbr\n              className={`\n              bc-level-${supportClassName}\n              icon\n              icon-${supportClassName}`}\n              title={title}\n            >\n              <span className=\"bc-support-level\">{title}</span>\n            </abbr>\n          </span>\n        </div>\n        <div className=\"bcd-cell-text-copy\">\n          <span className=\"bc-browser-name\">{browser.name}</span>\n          <span\n            className=\"bc-version-label\"\n            title={\n              browserReleaseDate && !timeline\n                ? `Released ${browserReleaseDate}`\n                : undefined\n            }\n          >\n            {label}\n            {browserReleaseDate && timeline\n              ? ` (Released ${browserReleaseDate})`\n              : \"\"}\n          </span>\n        </div>\n        <CellIcons support={support} />\n      </div>\n    );\n  }\n);\n\nfunction Icon({ name }: { name: string }) {\n  const title = LEGEND_LABELS[name] ?? name;\n\n  return (\n    <abbr className=\"only-icon\" title={title}>\n      <span>{name}</span>\n      <i className={`icon icon-${name}`} />\n    </abbr>\n  );\n}\n\nfunction CellIcons({ support }: { support: BCD.SupportStatement | undefined }) {\n  const supportItem = getCurrentSupport(support);\n  if (!supportItem) {\n    return null;\n  }\n\n  const icons = [\n    supportItem.prefix && <Icon key=\"prefix\" name=\"prefix\" />,\n    hasNoteworthyNotes(supportItem) && <Icon key=\"footnote\" name=\"footnote\" />,\n    supportItem.alternative_name && <Icon key=\"altname\" name=\"altname\" />,\n    supportItem.flags && <Icon key=\"disabled\" name=\"disabled\" />,\n    hasMore(support) && <Icon key=\"more\" name=\"more\" />,\n  ].filter(Boolean);\n\n  return icons.length ? <div className=\"bc-icons\">{icons}</div> : null;\n}\n\nfunction FlagsNote({\n  supportItem,\n  browser,\n}: {\n  supportItem: BCD.SimpleSupportStatement;\n  browser: BCD.BrowserStatement;\n}) {\n  const hasAddedVersion = typeof supportItem.version_added === \"string\";\n  const hasRemovedVersion = typeof supportItem.version_removed === \"string\";\n  const flags = supportItem.flags || [];\n  return (\n    <>\n      {hasAddedVersion && `From version ${supportItem.version_added}`}\n      {hasRemovedVersion && (\n        <>\n          {hasAddedVersion ? \" until\" : \"Until\"} version{\" \"}\n          {supportItem.version_removed} (exclusive)\n        </>\n      )}\n      {hasAddedVersion || hasRemovedVersion ? \": this\" : \"This\"} feature is\n      behind the{\" \"}\n      {flags.map((flag, i) => {\n        const valueToSet = flag.value_to_set && (\n          <>\n            {\" \"}\n            (needs to be set to <code>{flag.value_to_set}</code>)\n          </>\n        );\n        return (\n          <React.Fragment key={flag.name}>\n            <code>{flag.name}</code>\n            {flag.type === \"preference\" && <> preference{valueToSet}</>}\n            {flag.type === \"runtime_flag\" && <> runtime flag{valueToSet}</>}\n            {i < flags.length - 1 && \" and the \"}\n          </React.Fragment>\n        );\n      })}\n      .\n      {browser.pref_url &&\n        flags.some((flag) => flag.type === \"preference\") &&\n        ` To change preferences in ${browser.name}, visit ${browser.pref_url}.`}\n    </>\n  );\n}\n\nfunction getNotes(\n  browser: BCD.BrowserStatement,\n  support: BCD.SupportStatement\n) {\n  if (support) {\n    return asList(support)\n      .slice()\n      .reverse()\n      .flatMap((item, i) => {\n        const supportNotes = [\n          item.version_removed &&\n          !asList(support).some(\n            (otherItem) => otherItem.version_added === item.version_removed\n          )\n            ? {\n                iconName: \"disabled\",\n                label: (\n                  <>\n                    Removed in {labelFromString(item.version_removed, browser)}{\" \"}\n                    and later\n                  </>\n                ),\n              }\n            : null,\n          item.partial_implementation\n            ? {\n                iconName: \"footnote\",\n                label: \"Partial support\",\n              }\n            : null,\n          item.prefix\n            ? {\n                iconName: \"prefix\",\n                label: `Implemented with the vendor prefix: ${item.prefix}`,\n              }\n            : null,\n          item.alternative_name\n            ? {\n                iconName: \"altname\",\n                label: `Alternate name: ${item.alternative_name}`,\n              }\n            : null,\n          item.flags\n            ? {\n                iconName: \"disabled\",\n                label: <FlagsNote browser={browser} supportItem={item} />,\n              }\n            : null,\n          item.notes\n            ? (Array.isArray(item.notes) ? item.notes : [item.notes]).map(\n                (note) => ({ iconName: \"footnote\", label: note })\n              )\n            : null,\n          versionIsPreview(item.version_added, browser)\n            ? {\n                iconName: \"footnote\",\n                label: \"Preview browser support\",\n              }\n            : null,\n          // If we encounter nothing else than the required `version_added` and\n          // `release_date` properties, assume full support.\n          // EDIT 1-5-21: if item.version_added doesn't exist, assume no support.\n          isFullySupportedWithoutLimitation(item) &&\n          !versionIsPreview(item.version_added, browser)\n            ? {\n                iconName: \"footnote\",\n                label: \"Full support\",\n              }\n            : isNotSupportedAtAll(item)\n            ? {\n                iconName: \"footnote\",\n                label: \"No support\",\n              }\n            : null,\n        ]\n          .flat()\n          .filter(isTruthy);\n\n        const hasNotes = supportNotes.length > 0;\n        return (\n          (i === 0 || hasNotes) && (\n            <React.Fragment key={i}>\n              <div className=\"bc-notes-wrapper\">\n                <dt\n                  className={`bc-supports-${getSupportClassName(\n                    item,\n                    browser\n                  )} bc-supports`}\n                >\n                  <CellText support={item} browser={browser} timeline={true} />\n                </dt>\n                {supportNotes.map(({ iconName, label }, i) => {\n                  return (\n                    <dd className=\"bc-supports-dd\" key={i}>\n                      <Icon name={iconName} />{\" \"}\n                      {typeof label === \"string\" ? (\n                        <span dangerouslySetInnerHTML={{ __html: label }} />\n                      ) : (\n                        label\n                      )}\n                    </dd>\n                  );\n                })}\n                {!hasNotes && <dd />}\n              </div>\n            </React.Fragment>\n          )\n        );\n      })\n      .filter(isTruthy);\n  }\n}\n\nfunction CompatCell({\n  browserId,\n  browserInfo,\n  support,\n  showNotes,\n  onToggle,\n  locale,\n}: {\n  browserId: BCD.BrowserName;\n  browserInfo: BCD.BrowserStatement;\n  support: BCD.SupportStatement | undefined;\n  showNotes: boolean;\n  onToggle: () => void;\n  locale: string;\n}) {\n  const supportClassName = getSupportClassName(support, browserInfo);\n  // NOTE: 1-5-21, I've forced hasNotes to return true, in order to\n  // make the details view open all the time.\n  // Whenever the support statement is complex (array with more than one entry)\n  // or if a single entry is complex (prefix, notes, etc.),\n  // we need to render support details in `bc-history`\n  // const hasNotes =\n  //   support &&\n  //   (asList(support).length > 1 ||\n  //     asList(support).some(\n  //       (item) =>\n  //         item.prefix || item.notes || item.alternative_name || item.flags\n  //     ));\n  const notes = getNotes(browserInfo, support!);\n  const content = (\n    <>\n      <CellText {...{ support }} browser={browserInfo} />\n      {showNotes && (\n        <dl className=\"bc-notes-list bc-history bc-history-mobile\">{notes}</dl>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      <td\n        className={`bc-support bc-browser-${browserId} bc-supports-${supportClassName} ${\n          notes ? \"bc-has-history\" : \"\"\n        }`}\n        aria-expanded={showNotes ? \"true\" : \"false\"}\n        onClick={notes ? () => onToggle() : undefined}\n      >\n        <button type=\"button\" disabled={!notes} title=\"Toggle history\">\n          {content}\n          <span className=\"offscreen\">Toggle history</span>\n        </button>\n      </td>\n    </>\n  );\n}\n\nexport const FeatureRow = React.memo(\n  ({\n    index,\n    feature,\n    browsers,\n    activeCell,\n    onToggleCell,\n    locale,\n  }: {\n    index: number;\n    feature: {\n      name: string;\n      compat: BCD.CompatStatement;\n      depth: number;\n    };\n    browsers: BCD.BrowserName[];\n    activeCell: number | null;\n    onToggleCell: ([row, column]: [number, number]) => void;\n    locale: string;\n  }) => {\n    const browserInfo = useContext(BrowserInfoContext);\n\n    if (!browserInfo) {\n      throw new Error(\"Missing browser info\");\n    }\n\n    const { name, compat, depth } = feature;\n    const title = compat.description ? (\n      <span dangerouslySetInnerHTML={{ __html: compat.description }} />\n    ) : (\n      <code>{name}</code>\n    );\n    const activeBrowser = activeCell !== null ? browsers[activeCell] : null;\n\n    let titleNode: string | React.ReactNode;\n\n    if (compat.mdn_url && depth > 0) {\n      titleNode = (\n        <a href={compat.mdn_url} className=\"bc-table-row-header\">\n          {title}\n          {compat.status && <StatusIcons status={compat.status} />}\n        </a>\n      );\n    } else {\n      titleNode = (\n        <div className=\"bc-table-row-header\">\n          {title}\n          {compat.status && <StatusIcons status={compat.status} />}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <tr>\n          <th className={`bc-feature bc-feature-depth-${depth}`} scope=\"row\">\n            {titleNode}\n          </th>\n          {browsers.map((browser, i) => (\n            <CompatCell\n              key={browser}\n              browserId={browser}\n              browserInfo={browserInfo[browser]}\n              support={compat.support[browser]}\n              showNotes={activeCell === i}\n              onToggle={() => onToggleCell([index, i])}\n              locale={locale}\n            />\n          ))}\n        </tr>\n        {activeBrowser && (\n          <tr className=\"bc-history bc-history-desktop\">\n            <td colSpan={browsers.length + 1}>\n              <dl className=\"bc-notes-list\">\n                {getNotes(\n                  browserInfo[activeBrowser],\n                  compat.support[activeBrowser]!\n                )}\n              </dl>\n            </td>\n          </tr>\n        )}\n      </>\n    );\n  }\n);\n","import React, { useReducer } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport type BCD from \"@mdn/browser-compat-data/types\";\nimport { BrowserInfoContext } from \"./browser-info\";\nimport { BrowserCompatibilityErrorBoundary } from \"./error-boundary\";\nimport { FeatureRow } from \"./feature-row\";\nimport { Headers } from \"./headers\";\nimport { Legend } from \"./legend\";\nimport { listFeatures } from \"./utils\";\n\n// Note! Don't import any SCSS here inside *this* component.\n// It's done in the component that lazy-loads this component.\n\n// This string is used to prefill the body when clicking to file a new BCD\n// issue over on github.com/mdn/browser-compat-data\nconst ISSUE_METADATA_TEMPLATE = `\n<!-- Do not make changes below this line -->\n<details>\n<summary>MDN page report details</summary>\n\n* Query: \\`$QUERY_ID\\`\n* Report started: $DATE\n\n</details>\n`;\n\nexport const HIDDEN_BROWSERS = [\"ie\"];\n\n/**\n * Return a list of platforms and browsers that are relevant for this category &\n * data.\n *\n * If the category is \"webextensions\", only those are shown. In all other cases\n * at least the entirety of the \"desktop\" and \"mobile\" platforms are shown. If\n * the category is JavaScript, the entirety of the \"server\" category is also\n * shown. In all other categories, if compat data has info about Deno / Node.js\n * those are also shown. Deno is always shown if Node.js is shown.\n */\nfunction gatherPlatformsAndBrowsers(\n  category: string,\n  data: BCD.Identifier,\n  browserInfo: BCD.Browsers\n): [string[], BCD.BrowserName[]] {\n  const hasNodeJSData = data.__compat && \"nodejs\" in data.__compat.support;\n  const hasDenoData = data.__compat && \"deno\" in data.__compat.support;\n\n  let platforms = [\"desktop\", \"mobile\"];\n  if (category === \"javascript\" || hasNodeJSData || hasDenoData) {\n    platforms.push(\"server\");\n  }\n\n  let browsers: BCD.BrowserName[] = [];\n\n  // Add browsers in platform order to align table cells\n  for (const platform of platforms) {\n    browsers.push(\n      ...(Object.keys(browserInfo).filter(\n        (browser) => browserInfo[browser].type === platform\n      ) as BCD.BrowserName[])\n    );\n  }\n\n  // Filter WebExtension browsers in corresponding tables.\n  if (category === \"webextensions\") {\n    browsers = browsers.filter(\n      (browser) => browserInfo[browser].accepts_webextensions\n    );\n  }\n\n  // If there is no Node.js data for a category outside of \"javascript\", don't\n  // show it. It ended up in the browser list because there is data for Deno.\n  if (category !== \"javascript\" && !hasNodeJSData) {\n    browsers = browsers.filter((browser) => browser !== \"nodejs\");\n  }\n\n  // Hide Internet Explorer compatibility data\n  browsers = browsers.filter((browser) => !HIDDEN_BROWSERS.includes(browser));\n\n  return [platforms, [...browsers]];\n}\n\ntype CellIndex = [number, number];\n\nfunction FeatureListAccordion({\n  features,\n  browsers,\n  locale,\n}: {\n  features: ReturnType<typeof listFeatures>;\n  browsers: BCD.BrowserName[];\n  locale: string;\n}) {\n  const [[activeRow, activeColumn], dispatchCellToggle] = useReducer<\n    React.Reducer<CellIndex | [null, null], CellIndex>\n  >(\n    ([activeRow, activeColumn], [row, column]) =>\n      activeRow === row && activeColumn === column\n        ? [null, null]\n        : [row, column],\n    [null, null]\n  );\n\n  return (\n    <>\n      {features.map((feature, i) => (\n        <FeatureRow\n          key={i}\n          {...{ feature, browsers }}\n          index={i}\n          activeCell={activeRow === i ? activeColumn : null}\n          onToggleCell={([row, column]: [number, number]) => {\n            dispatchCellToggle([row, column]);\n          }}\n          locale={locale}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default function BrowserCompatibilityTable({\n  query,\n  data,\n  browsers: browserInfo,\n  locale,\n}: {\n  query: string;\n  data: BCD.Identifier;\n  browsers: BCD.Browsers;\n  locale: string;\n}) {\n  const location = useLocation();\n\n  if (!data || !Object.keys(data).length) {\n    throw new Error(\n      \"BrowserCompatibilityTable component called with empty data\"\n    );\n  }\n\n  const breadcrumbs = query.split(\".\");\n  const category = breadcrumbs[0];\n  const name = breadcrumbs[breadcrumbs.length - 1];\n\n  const [platforms, browsers] = gatherPlatformsAndBrowsers(\n    category,\n    data,\n    browserInfo\n  );\n\n  function getNewIssueURL() {\n    const url = \"https://github.com/mdn/browser-compat-data/issues/new\";\n    const sp = new URLSearchParams();\n    const metadata = ISSUE_METADATA_TEMPLATE.replace(\n      /\\$DATE/g,\n      new Date().toISOString()\n    )\n      .replace(/\\$QUERY_ID/g, query)\n      .trim();\n    sp.set(\"mdn-url\", `https://developer.mozilla.org${location.pathname}`);\n    sp.set(\"metadata\", metadata);\n    sp.set(\"title\", `${query} - <SUMMARIZE THE PROBLEM>`);\n    sp.set(\"template\", \"data-problem.yml\");\n    return `${url}?${sp.toString()}`;\n  }\n\n  return (\n    <BrowserCompatibilityErrorBoundary>\n      <BrowserInfoContext.Provider value={browserInfo}>\n        <a\n          className=\"bc-github-link external external-icon\"\n          href={getNewIssueURL()}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Report an issue with this compatibility data\"\n        >\n          Report problems with this compatibility data on GitHub\n        </a>\n        <figure className=\"table-container\">\n          <figure className=\"table-container-inner\">\n            <table key=\"bc-table\" className=\"bc-table bc-table-web\">\n              <Headers\n                platforms={platforms}\n                browsers={browsers}\n                browserInfo={browserInfo}\n              />\n              <tbody>\n                <FeatureListAccordion\n                  browsers={browsers}\n                  features={listFeatures(data, \"\", name)}\n                  locale={locale}\n                />\n              </tbody>\n            </table>\n          </figure>\n        </figure>\n        <Legend compat={data} name={name} />\n\n        {/* https://github.com/mdn/yari/issues/1191 */}\n        <div className=\"hidden\">\n          The compatibility table on this page is generated from structured\n          data. If you'd like to contribute to the data, please check out{\" \"}\n          <a href=\"https://github.com/mdn/browser-compat-data\">\n            https://github.com/mdn/browser-compat-data\n          </a>{\" \"}\n          and send us a pull request.\n        </div>\n      </BrowserInfoContext.Provider>\n    </BrowserCompatibilityErrorBoundary>\n  );\n}\n"],"names":["BrowserInfoContext","React","BrowserName","_ref","id","browserInfo","useContext","Error","_jsx","_Fragment","children","name","PlatformHeaders","platforms","browsers","_jsxs","className","map","platform","browserCount","filter","browser","type","length","concat","colSpan","title","BrowserHeaders","_ref2","browserToIconName","browserStart","split","Headers","_ref3","BrowserCompatibilityErrorBoundary","constructor","arguments","state","error","componentDidCatch","_errorInfo","this","setState","render","props","getFirst","a","Array","isArray","asList","isTruthy","t","Boolean","listFeatures","identifier","parentName","undefined","rootName","depth","firstCompatDepth","features","__compat","push","compat","entries","path","value","shift","key","Object","keys","subpath","findFirstCompatDepth","subName","subIdentifier","hasMore","support","versionIsPreview","version","releases","includes","status","hasNoteworthyNotes","_support$notes","notes","version_removed","partial_implementation","hasLimitation","hasMajorLimitation","alternative_name","flags","prefix","isFullySupportedWithoutLimitation","version_added","isNotSupportedAtAll","getCurrentSupport","noLimitationSupportItem","find","item","minorLimitationSupportItem","isFullySupportedWithoutMajorLimitation","altnamePrefixSupportItem","partialSupportItem","flagSupportItem","noSupportItem","LEGEND_LABELS","yes","partial","preview","no","unknown","experimental","nonstandard","deprecated","footnote","disabled","altname","more","getActiveLegendItems","legendItems","Set","feature","add","standard_track","browserSupport","HIDDEN_BROWSERS","versionSupport","has","Legend","label","getSupportClassName","StatusIcons","icons","text","iconClassName","icon","labelFromString","startsWith","slice","preview_name","versionLabelFromSupport","added","removed","CellText","_currentSupport$versi","_currentSupport$versi2","timeline","currentSupport","lastVersion","version_last","browserReleaseDate","release_date","getSupportBrowserReleaseDate","supportClassName","isSupported","CellIcons","Icon","_LEGEND_LABELS$name","_ref4","supportItem","FlagsNote","_ref5","hasAddedVersion","hasRemovedVersion","flag","i","valueToSet","value_to_set","pref_url","some","getNotes","reverse","flatMap","supportNotes","otherItem","iconName","note","flat","hasNotes","_ref6","dangerouslySetInnerHTML","__html","CompatCell","_ref7","browserId","showNotes","onToggle","locale","content","onClick","FeatureRow","_ref8","index","activeCell","onToggleCell","description","activeBrowser","titleNode","mdn_url","href","scope","ISSUE_METADATA_TEMPLATE","FeatureListAccordion","activeRow","activeColumn","dispatchCellToggle","useReducer","row","column","BrowserCompatibilityTable","query","data","location","useLocation","breadcrumbs","category","hasNodeJSData","hasDenoData","accepts_webextensions","gatherPlatformsAndBrowsers","Provider","sp","URLSearchParams","metadata","replace","Date","toISOString","trim","set","pathname","toString","getNewIssueURL","target","rel"],"sourceRoot":""}