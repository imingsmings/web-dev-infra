{"version":3,"file":"static/js/57.c9adad8f.chunk.js","mappings":"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","sources":["plus/collections/collection.tsx","plus/collections/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport useSWR, { KeyedMutator } from \"swr\";\nimport { useScrollToTop, useLocale } from \"../../hooks\";\nimport { Button } from \"../../ui/atoms/button\";\nimport Container from \"../../ui/atoms/container\";\nimport { Loading } from \"../../ui/atoms/loading\";\nimport { camelWrap, charSlice, getCategoryByPathname } from \"../../utils\";\nimport { FrequentlyViewedItem, Item, useCollection, useItems } from \"./api\";\nimport NoteCard from \"../../ui/molecules/notecards\";\nimport { DocMetadata } from \"../../../../libs/types/document\";\nimport { Authors, LastModified } from \"../../document/organisms/metadata\";\nimport { ArticleActions } from \"../../ui/organisms/article-actions\";\nimport { MDN_PLUS_TITLE } from \"../../constants\";\n\nimport \"./collection.scss\";\n\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {\n  FrequentlyViewedCollection,\n  useFrequentlyViewed,\n} from \"./frequently-viewed\";\nimport { useGleanClick } from \"../../telemetry/glean-context\";\nimport { PLUS_COLLECTIONS } from \"../../telemetry/constants\";\ndayjs.extend(relativeTime);\n\nexport function CollectionComponent() {\n  const { collectionId } = useParams();\n  const { data: collection, error: collectionError } =\n    useCollection(collectionId);\n  const {\n    data: itemPages,\n    error: itemError,\n    isLoading: itemLoading,\n    size,\n    setSize,\n    atEnd,\n    mutate,\n  } = useItems(collectionId);\n\n  useScrollToTop();\n  const name =\n    collection?.name === \"Default\" ? \"Saved Articles\" : collection?.name;\n  document.title = `${name || \"Collections\"} | ${MDN_PLUS_TITLE}`;\n  const description =\n    collection?.name === \"Default\"\n      ? \"The default collection.\"\n      : collection?.description;\n\n  return collection ? (\n    <div className=\"collections collections-collection\">\n      <header>\n        <Container>\n          <Link to=\"../\" className=\"exit\">\n            &larr; Back\n          </Link>\n          <h1>{name}</h1>\n          <span className=\"count\">\n            {collection.article_count}{\" \"}\n            {collection.article_count === 1 ? \"article\" : \"articles\"}\n          </span>\n          {description && <p>{description}</p>}\n        </Container>\n      </header>\n      <Container>\n        {itemPages\n          ?.flat(1)\n          .map((item) => (\n            <ItemComponent key={item.id} {...{ item, mutate }} />\n          )) ||\n          (itemLoading && <Loading />)}\n        {!atEnd && (\n          <div className=\"pagination\">\n            <Button\n              type=\"primary\"\n              onClickHandler={() => {\n                setSize(size + 1);\n              }}\n              isDisabled={itemLoading}\n            >\n              {itemLoading\n                ? \"Loading...\"\n                : itemError\n                ? \"Error (try again)\"\n                : \"Show more\"}\n            </Button>\n          </div>\n        )}\n      </Container>\n    </div>\n  ) : (\n    <div className=\"collections collections-collection\">\n      <header>\n        <Container>\n          <Link to=\"../\" className=\"exit\">\n            &larr; Back\n          </Link>\n        </Container>\n      </header>\n      <Container>\n        {collectionError ? (\n          <NoteCard type=\"error\">\n            <h4>Error</h4>\n            <p>{collectionError.message}</p>\n            <Button href=\"../\" type=\"secondary\">\n              Go Back\n            </Button>\n          </NoteCard>\n        ) : (\n          <Loading />\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport function FrequentlyViewedCollectionComponent() {\n  let [size, setSize] = useState(0);\n  let [atEnd, setAtEnd] = useState(false);\n  let frequentlyViewed: FrequentlyViewedCollection = useFrequentlyViewed(\n    10,\n    size,\n    setAtEnd\n  );\n\n  useScrollToTop();\n\n  return (\n    <div className=\"collections collections-collection\">\n      <header>\n        <Container>\n          <Link to=\"../\" className=\"exit\">\n            &larr; Back\n          </Link>\n          <h1>{frequentlyViewed.name}</h1>\n          <span className=\"count\">\n            {frequentlyViewed.article_count}{\" \"}\n            {frequentlyViewed.article_count === 1 ? \"article\" : \"articles\"}\n          </span>\n          <p>{frequentlyViewed.description}</p>\n        </Container>\n      </header>\n      <Container>\n        {frequentlyViewed.items.map((item) => (\n          <ItemComponent addNoteEnabled={false} key={item.id} item={item} />\n        ))}\n        {!atEnd && (\n          <div className=\"pagination\">\n            <Button\n              type=\"primary\"\n              onClickHandler={() => {\n                setSize(size + 10);\n              }}\n            >\n              Show more\n            </Button>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nfunction ItemComponent({\n  addNoteEnabled = true,\n  item,\n  mutate,\n}: {\n  addNoteEnabled?: boolean;\n  item: Item | FrequentlyViewedItem;\n  mutate?: KeyedMutator<Item[][]>;\n}) {\n  const [slicedNote, setSlicedNote] = useState<string>();\n  const [note, setNote] = useState<string>();\n\n  const locale = useLocale();\n  const gleanClick = useGleanClick();\n\n  useEffect(() => {\n    const slicedNote = item.notes && charSlice(item.notes, 0, 180);\n    setSlicedNote(slicedNote);\n    setNote(slicedNote);\n  }, [item.notes]);\n\n  const breadcrumbs = item.parents\n    .slice(0, -1)\n    .map((parent) => camelWrap(parent.title))\n    .filter(\n      // remove duplicated titles\n      (title, index, titles) => title !== titles[index + 1]\n    );\n\n  const openBookmarkMenu: React.MouseEventHandler = (e) => {\n    const article = e.currentTarget.closest(\"article\");\n    [\n      article?.querySelector(\".article-actions-toggle\"),\n      article?.querySelector(\".bookmark-button\"),\n    ].forEach((button) => {\n      if (button instanceof HTMLElement) {\n        if (getComputedStyle(button).display === \"none\") return;\n        button.click();\n      }\n    });\n  };\n\n  const { data: doc } = useSWR<DocMetadata>(\n    `${item.url}/metadata.json`,\n    async (url) => {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return (await response.json()) as DocMetadata;\n    },\n    {\n      revalidateIfStale: false,\n      revalidateOnFocus: false,\n      revalidateOnReconnect: false,\n    }\n  );\n\n  const category = getCategoryByPathname(item.url);\n\n  return (\n    <article\n      key={item.url}\n      className={category ? `category-${category}` : undefined}\n    >\n      <header>\n        <h2>\n          <Link to={item.url}>{camelWrap(item.title)}</Link>\n        </h2>\n        <ArticleActions\n          doc={doc}\n          showTranslations={false}\n          item={\"collection_id\" in item ? item : undefined}\n          scopedMutator={mutate}\n        />\n      </header>\n      <div className=\"breadcrumbs\">{breadcrumbs.join(\" > \")}</div>\n      {doc && (\n        <>\n          <p>{doc.summary}</p>\n          <aside>\n            <LastModified value={doc.modified} locale={locale} />,{\" \"}\n            <Authors url={item.url} />\n          </aside>\n        </>\n      )}\n      {note ? (\n        <div className=\"note\">\n          <div>\n            {doc && (\n              <Button\n                icon=\"edit\"\n                type=\"action\"\n                onClickHandler={(e) => {\n                  gleanClick(PLUS_COLLECTIONS.ACTIONS_NOTE_EDIT);\n                  return openBookmarkMenu(e);\n                }}\n              >\n                <span className=\"visually-hidden\">Edit note</span>\n              </Button>\n            )}\n          </div>\n          <div className=\"text\">\n            <p className={item.notes?.includes(\"{\") ? \"code\" : \"\"}>\n              {note.trimEnd()}\n            </p>\n            {slicedNote !== item.notes &&\n              (note !== item.notes ? (\n                <>\n                  {\"… \"}\n                  <Button\n                    type=\"link\"\n                    onClickHandler={() => setNote(item.notes)}\n                  >\n                    See full note\n                  </Button>\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  <Button\n                    type=\"link\"\n                    onClickHandler={() => setNote(slicedNote)}\n                  >\n                    Show less\n                  </Button>\n                </>\n              ))}\n          </div>\n        </div>\n      ) : doc && addNoteEnabled ? (\n        <Button\n          extraClasses=\"add-note\"\n          icon=\"edit\"\n          type=\"action\"\n          onClickHandler={(e) => {\n            gleanClick(PLUS_COLLECTIONS.ACTIONS_NOTE_ADD);\n            return openBookmarkMenu(e);\n          }}\n        >\n          Add note\n        </Button>\n      ) : null}\n    </article>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Container from \"../../ui/atoms/container\";\nimport { Button } from \"../../ui/atoms/button\";\nimport NewEditCollectionModal from \"./new-edit-collection-modal\";\nimport { Route, Routes } from \"react-router\";\nimport { Collection, useCollectionDelete, useCollections } from \"./api\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CollectionComponent,\n  FrequentlyViewedCollectionComponent,\n} from \"./collection\";\nimport { DropdownMenuWrapper, DropdownMenu } from \"../../ui/molecules/dropdown\";\nimport MDNModal from \"../../ui/atoms/modal\";\nimport { Loading } from \"../../ui/atoms/loading\";\nimport NoteCard from \"../../ui/molecules/notecards\";\n\nimport \"./index.scss\";\n\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport Mandala from \"../../ui/molecules/mandala\";\nimport { useGleanClick } from \"../../telemetry/glean-context\";\nimport { PLUS_COLLECTIONS } from \"../../telemetry/constants\";\nimport { camelWrap } from \"../../utils\";\nimport { useFrequentlyViewed } from \"./frequently-viewed\";\nimport { Icon } from \"../../ui/atoms/icon\";\nimport { MDN_PLUS_TITLE } from \"../../constants\";\nimport { SWRConfig } from \"swr\";\ndayjs.extend(relativeTime);\n\nconst swrConfig = { revalidateOnFocus: false, revalidateIfStale: false };\nexport default function Collections() {\n  return (\n    <SWRConfig value={swrConfig}>\n      <Routes>\n        <Route path=\"/\" element={<Overview />} />\n        <Route\n          path=\"frequently-viewed\"\n          element={<FrequentlyViewedCollectionComponent />}\n        />\n        <Route path=\":collectionId\" element={<CollectionComponent />} />\n      </Routes>\n    </SWRConfig>\n  );\n}\n\nfunction Overview() {\n  document.title = `Collections | ${MDN_PLUS_TITLE}`;\n  const { data, isLoading, error } = useCollections();\n  const [showCreate, setShowCreate] = useState(false);\n  const gleanClick = useGleanClick();\n\n  let collectionCards = data?.map((collection) => (\n    <CollectionCard key={collection.id} {...{ collection }} />\n  ));\n  const frequentlyViewedCard = (\n    <FrequentlyViewedCollectionCard key={\"frequently-viewed\"} />\n  );\n  if (collectionCards && frequentlyViewedCard) {\n    collectionCards.splice(1, 0, frequentlyViewedCard);\n  }\n\n  return (\n    <div className=\"collections collections-overview\">\n      <header className=\"plus-header-mandala\">\n        <Container>\n          <h1>\n            <div className=\"mandala-icon-wrapper\">\n              <Mandala />\n              <Icon name=\"bookmark-filled\" />\n            </div>\n            <span>Collections</span>\n          </h1>\n          <p>\n            Save and group your favorite MDN articles to easily find them later\n            on.\n            <br />\n            <a\n              rel=\"noreferrer noopener\"\n              target=\"_blank\"\n              href=\"https://survey.alchemer.com/s3/6988450/Feature-Preview-User-Feedback-Multiple-Collections\"\n            >\n              We'd love to hear your feedback!\n            </a>\n          </p>\n          <Button\n            onClickHandler={() => {\n              gleanClick(PLUS_COLLECTIONS.BANNER_NEW);\n              setShowCreate(true);\n            }}\n            isDisabled={isLoading}\n          >\n            New Collection\n          </Button>\n          <NewEditCollectionModal\n            show={showCreate}\n            setShow={setShowCreate}\n            source={PLUS_COLLECTIONS.NEW_MODAL_SUBMIT_COLLECTIONS_PAGE}\n          />\n        </Container>\n      </header>\n      <Container>\n        {isLoading ? (\n          <Loading />\n        ) : data ? (\n          collectionCards\n        ) : error ? (\n          <NoteCard type=\"error\">\n            <h4>Error</h4>\n            <p>{error.message}</p>\n          </NoteCard>\n        ) : (\n          \"Create a new collection...\"\n        )}\n      </Container>\n    </div>\n  );\n}\n\nfunction CollectionCard({ collection }: { collection: Collection }) {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const {\n    mutator: deleter,\n    error,\n    resetError,\n    isPending,\n  } = useCollectionDelete();\n\n  const deleteHandler = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (isPending) return;\n    await deleter(collection);\n    setShowDelete(false);\n  };\n\n  const deleteCancelHandler = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (isPending) return;\n    resetError();\n    setShowDelete(false);\n  };\n\n  return collection.name === \"Default\" ? (\n    <DefaultCollectionCard collection={collection} />\n  ) : (\n    <article key={collection.id}>\n      <header>\n        <h2>\n          <Link to={collection.id}>{camelWrap(collection.name)}</Link>\n        </h2>\n        {collection.name !== \"Default\" ? (\n          <DropdownMenuWrapper\n            className=\"dropdown is-flush-right\"\n            isOpen={showDropdown}\n            setIsOpen={setShowDropdown}\n          >\n            <Button\n              type=\"action\"\n              icon=\"ellipses\"\n              aria-controls=\"collection-dropdown\"\n              aria-haspopup=\"menu\"\n              aria-expanded={showDropdown || undefined}\n              onClickHandler={() => {\n                setShowDropdown(!showDropdown);\n              }}\n            />\n            <DropdownMenu>\n              <ul className=\"dropdown-list\" id=\"collection-dropdown\">\n                <li className=\"dropdown-item\">\n                  <Button\n                    type=\"action\"\n                    title=\"Edit\"\n                    onClickHandler={() => {\n                      setShowEdit(true);\n\n                      setShowDropdown(false);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                </li>\n                <li className=\"dropdown-item\">\n                  <Button\n                    type=\"action\"\n                    title=\"Delete\"\n                    onClickHandler={() => {\n                      setShowDelete(true);\n                      setShowDropdown(false);\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </li>\n              </ul>\n            </DropdownMenu>\n          </DropdownMenuWrapper>\n        ) : null}\n        <NewEditCollectionModal\n          editingCollection={collection}\n          show={showEdit}\n          setShow={setShowEdit}\n          source={PLUS_COLLECTIONS.NEW_MODAL_SUBMIT_COLLECTIONS_PAGE}\n        />\n        <MDNModal\n          isOpen={showDelete}\n          size=\"small\"\n          onRequestClose={deleteCancelHandler}\n          extraOverlayClassName={isPending ? \"wait\" : \"\"}\n        >\n          <header className=\"modal-header\">\n            <h2 className=\"modal-heading\">Delete collection</h2>\n            <Button\n              onClickHandler={deleteCancelHandler}\n              type=\"action\"\n              icon=\"cancel\"\n              extraClasses=\"close-button\"\n            />\n          </header>\n          <div className=\"modal-body\">\n            {error && (\n              <NoteCard type=\"error\">\n                <p>Error: {error.message}</p>\n              </NoteCard>\n            )}\n            <p>\n              Are you sure you want to delete your collection \"{collection.name}\n              \"?\n            </p>\n            <div className=\"mdn-form-item is-button-row\">\n              <Button onClickHandler={deleteHandler} isDisabled={isPending}>\n                {isPending ? \"Deleting...\" : \"Delete\"}\n              </Button>\n              <Button\n                onClickHandler={deleteCancelHandler}\n                type=\"secondary\"\n                isDisabled={isPending}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </MDNModal>\n      </header>\n      {collection.description && <p>{camelWrap(collection.description)}</p>}\n      <footer>\n        <Link to={collection.id} className=\"count\">\n          {collection.article_count}{\" \"}\n          {collection.article_count === 1 ? \"article\" : \"articles\"}\n        </Link>\n        <time dateTime={dayjs(collection.updated_at).toISOString()}>\n          Edited {dayjs(collection.updated_at).fromNow().toString()}\n        </time>\n      </footer>\n    </article>\n  );\n}\n\nfunction DefaultCollectionCard({ collection }: { collection: Collection }) {\n  return (\n    <article key={collection.id} className=\"default\">\n      <header>\n        <h2>\n          <Link to={collection.id}>Saved Articles</Link>\n        </h2>\n      </header>\n      <p>The default collection.</p>\n      <footer>\n        <Link to={collection.id} className=\"count\">\n          {collection.article_count}{\" \"}\n          {collection.article_count === 1 ? \"article\" : \"articles\"}\n        </Link>\n        <time dateTime={dayjs(collection.updated_at).toISOString()}>\n          Edited {dayjs(collection.updated_at).fromNow().toString()}\n        </time>\n      </footer>\n    </article>\n  );\n}\n\nfunction FrequentlyViewedCollectionCard() {\n  const collection = useFrequentlyViewed();\n  if (!collection.items.length) {\n    return null;\n  }\n  return (\n    <article key={collection.name} className=\"default\">\n      <header>\n        <h2>\n          <Link to={\"frequently-viewed\"}>{collection.name}</Link>\n        </h2>\n      </header>\n      <p>{collection.description}</p>\n      <footer>\n        <Link to={\"frequently-viewed\"} className=\"count\">\n          {collection.article_count}{\" \"}\n          {collection.article_count === 1 ? \"article\" : \"articles\"}\n        </Link>\n        <time dateTime={dayjs(collection.updated_at).toISOString()}>\n          Updated {dayjs(collection.updated_at).fromNow().toString()}\n        </time>\n      </footer>\n    </article>\n  );\n}\n"],"names":["CollectionComponent","collectionId","useParams","data","collection","error","collectionError","useCollection","itemPages","itemError","isLoading","itemLoading","size","setSize","atEnd","mutate","useItems","useScrollToTop","name","document","title","concat","MDN_PLUS_TITLE","description","_jsxs","className","children","_jsx","Container","Link","to","article_count","flat","map","item","ItemComponent","id","Loading","Button","type","onClickHandler","isDisabled","NoteCard","message","href","FrequentlyViewedCollectionComponent","useState","setAtEnd","frequentlyViewed","useFrequentlyViewed","items","addNoteEnabled","_ref","_item$notes","slicedNote","setSlicedNote","note","setNote","locale","useLocale","gleanClick","useGleanClick","useEffect","notes","charSlice","breadcrumbs","parents","slice","parent","camelWrap","filter","index","titles","openBookmarkMenu","e","article","currentTarget","closest","querySelector","forEach","button","HTMLElement","getComputedStyle","display","click","doc","useSWR","url","async","response","fetch","ok","Error","statusText","json","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","category","getCategoryByPathname","undefined","ArticleActions","showTranslations","scopedMutator","join","_Fragment","summary","LastModified","value","modified","Authors","icon","PLUS_COLLECTIONS","ACTIONS_NOTE_EDIT","includes","trimEnd","extraClasses","ACTIONS_NOTE_ADD","dayjs","relativeTime","swrConfig","Collections","SWRConfig","Routes","Route","path","element","Overview","useCollections","showCreate","setShowCreate","collectionCards","CollectionCard","frequentlyViewedCard","FrequentlyViewedCollectionCard","splice","Mandala","Icon","rel","target","BANNER_NEW","NewEditCollectionModal","show","setShow","source","NEW_MODAL_SUBMIT_COLLECTIONS_PAGE","showDropdown","setShowDropdown","showEdit","setShowEdit","showDelete","setShowDelete","mutator","deleter","resetError","isPending","useCollectionDelete","deleteCancelHandler","preventDefault","DefaultCollectionCard","DropdownMenuWrapper","isOpen","setIsOpen","DropdownMenu","editingCollection","MDNModal","onRequestClose","extraOverlayClassName","dateTime","updated_at","toISOString","fromNow","toString","_ref2","length"],"sourceRoot":""}